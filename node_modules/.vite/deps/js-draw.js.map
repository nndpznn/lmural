{
  "version": 3,
  "sources": ["../../js-draw/dist/mjs/commands/Command.mjs", "../../@js-draw/math/dist/mjs/Vec3.mjs", "../../@js-draw/math/dist/mjs/Mat33.mjs", "../../@js-draw/math/dist/mjs/shapes/Abstract2DShape.mjs", "../../@js-draw/math/dist/mjs/shapes/Rect2.mjs", "../../@js-draw/math/dist/mjs/shapes/Parameterized2DShape.mjs", "../../@js-draw/math/dist/mjs/shapes/LineSegment2.mjs", "../../bezier-js/src/utils.js", "../../bezier-js/src/poly-bezier.js", "../../bezier-js/src/bezier.js", "../../@js-draw/math/dist/mjs/shapes/BezierJSWrapper.mjs", "../../@js-draw/math/dist/mjs/shapes/CubicBezier.mjs", "../../@js-draw/math/dist/mjs/polynomial/solveQuadratic.mjs", "../../@js-draw/math/dist/mjs/shapes/QuadraticBezier.mjs", "../../@js-draw/math/dist/mjs/shapes/PointShape2D.mjs", "../../@js-draw/math/dist/mjs/rounding/cleanUpNumber.mjs", "../../@js-draw/math/dist/mjs/rounding/toRoundedString.mjs", "../../@js-draw/math/dist/mjs/rounding/constants.mjs", "../../@js-draw/math/dist/mjs/rounding/getLenAfterDecimal.mjs", "../../@js-draw/math/dist/mjs/rounding/toStringOfSamePrecision.mjs", "../../@js-draw/math/dist/mjs/utils/convexHull2Of.mjs", "../../@js-draw/math/dist/mjs/shapes/Path.mjs", "../../@js-draw/math/dist/mjs/Color4.mjs", "../../js-draw/dist/mjs/util/describeTransformation.mjs", "../../js-draw/dist/mjs/Viewport.mjs", "../../js-draw/dist/mjs/commands/SerializableCommand.mjs", "../../js-draw/dist/mjs/commands/UnresolvedCommand.mjs", "../../js-draw/dist/mjs/util/assertions.mjs", "../../js-draw/dist/mjs/components/AbstractComponent.mjs", "../../js-draw/dist/mjs/EventDispatcher.mjs", "../../js-draw/dist/mjs/image/EditorImage.mjs", "../../js-draw/dist/mjs/types.mjs", "../../js-draw/dist/mjs/Pointer.mjs", "../../js-draw/dist/mjs/util/untilNextAnimationFrame.mjs", "../../js-draw/dist/mjs/inputEvents.mjs", "../../js-draw/dist/mjs/util/ReactiveValue.mjs", "../../js-draw/dist/mjs/tools/BaseTool.mjs", "../../js-draw/dist/mjs/commands/localization.mjs", "../../js-draw/dist/mjs/components/localization.mjs", "../../js-draw/dist/mjs/rendering/localization.mjs", "../../js-draw/dist/mjs/toolbar/utils/localization.mjs", "../../js-draw/dist/mjs/toolbar/localization.mjs", "../../js-draw/dist/mjs/tools/localization.mjs", "../../js-draw/dist/mjs/localization.mjs", "../../js-draw/dist/mjs/localizations/de.mjs", "../../js-draw/dist/mjs/localizations/en.mjs", "../../js-draw/dist/mjs/localizations/es.mjs", "../../js-draw/dist/mjs/localizations/getLocalizationTable.mjs", "../../js-draw/dist/mjs/shortcuts/KeyBinding.mjs", "../../js-draw/dist/mjs/shortcuts/KeyboardShortcutManager.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/keybindings.mjs", "../../js-draw/dist/mjs/tools/keybindings.mjs", "../../js-draw/dist/mjs/tools/PanZoom.mjs", "../../js-draw/dist/mjs/rendering/RenderingStyle.mjs", "../../js-draw/dist/mjs/rendering/TextRenderingStyle.mjs", "../../js-draw/dist/mjs/components/RestylableComponent.mjs", "../../js-draw/dist/mjs/rendering/RenderablePathSpec.mjs", "../../js-draw/dist/mjs/components/Stroke.mjs", "../../js-draw/dist/mjs/components/util/StrokeSmoother.mjs", "../../js-draw/dist/mjs/components/builders/autocorrect/makeShapeFitAutocorrect.mjs", "../../js-draw/dist/mjs/components/builders/FreehandLineBuilder.mjs", "../../js-draw/dist/mjs/tools/InputFilter/InputMapper.mjs", "../../js-draw/dist/mjs/tools/InputFilter/InputStabilizer.mjs", "../../js-draw/dist/mjs/tools/util/StationaryPenDetector.mjs", "../../js-draw/dist/mjs/tools/Pen.mjs", "../../js-draw/dist/mjs/tools/ToolEnabledGroup.mjs", "../../js-draw/dist/mjs/components/util/describeComponentList.mjs", "../../js-draw/dist/mjs/commands/Erase.mjs", "../../js-draw/dist/mjs/util/waitForAll.mjs", "../../js-draw/dist/mjs/commands/uniteCommands.mjs", "../../js-draw/dist/mjs/tools/Eraser.mjs", "../../js-draw/dist/mjs/components/TextComponent.mjs", "../../js-draw/dist/mjs/rendering/renderers/AbstractRenderer.mjs", "../../js-draw/dist/mjs/rendering/renderers/CanvasRenderer.mjs", "../../js-draw/dist/mjs/components/BackgroundComponent.mjs", "../../js-draw/dist/mjs/util/waitForImageLoaded.mjs", "../../js-draw/dist/mjs/components/ImageComponent.mjs", "../../js-draw/dist/mjs/components/SVGGlobalAttributesObject.mjs", "../../js-draw/dist/mjs/components/UnknownSVGObject.mjs", "../../js-draw/dist/mjs/SVGLoader/utils/determineFontSize.mjs", "../../js-draw/dist/mjs/SVGLoader/SVGLoader.mjs", "../../js-draw/dist/mjs/util/listPrefixMatch.mjs", "../../js-draw/dist/mjs/rendering/renderers/SVGRenderer.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectionHandle.mjs", "../../js-draw/dist/mjs/commands/Duplicate.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/types.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/TransformMode.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectionMenuShortcut.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/Selection.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/ToPointerAutoscroller.mjs", "../../js-draw/dist/mjs/util/waitForTimeout.mjs", "../../js-draw/dist/mjs/tools/util/createMenuOverlay.mjs", "../../js-draw/dist/mjs/util/fileToBase64Url.mjs", "../../js-draw/dist/mjs/util/ClipboardHandler.mjs", "../../js-draw/dist/mjs/dialogs/makeMessageDialog.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/util/makeClipboardErrorHandlers.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/util/showSelectionContextMenu.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectionBuilders/SelectionBuilder.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectionBuilders/LassoSelectionBuilder.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectionBuilders/RectSelectionBuilder.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectionTool.mjs", "../../js-draw/dist/mjs/tools/UndoRedoShortcut.mjs", "../../js-draw/dist/mjs/tools/TextTool.mjs", "../../js-draw/dist/mjs/tools/PipetteTool.mjs", "../../js-draw/dist/mjs/tools/ToolSwitcherShortcut.mjs", "../../js-draw/dist/mjs/tools/PasteHandler.mjs", "../../js-draw/dist/mjs/tools/ToolbarShortcutHandler.mjs", "../../js-draw/dist/mjs/components/builders/PressureSensitiveFreehandLineBuilder.mjs", "../../js-draw/dist/mjs/tools/FindTool.mjs", "../../js-draw/dist/mjs/tools/SelectionTool/SelectAllShortcutHandler.mjs", "../../js-draw/dist/mjs/tools/SoundUITool.mjs", "../../js-draw/dist/mjs/tools/InputFilter/InputPipeline.mjs", "../../js-draw/dist/mjs/tools/ScrollbarTool.mjs", "../../js-draw/dist/mjs/tools/ToolController.mjs", "../../js-draw/dist/mjs/UndoRedoHistory.mjs", "../../js-draw/dist/mjs/rendering/renderers/DummyRenderer.mjs", "../../js-draw/dist/mjs/rendering/caching/RenderingCacheNode.mjs", "../../js-draw/dist/mjs/rendering/caching/CacheRecord.mjs", "../../js-draw/dist/mjs/rendering/caching/CacheRecordManager.mjs", "../../js-draw/dist/mjs/rendering/caching/RenderingCache.mjs", "../../js-draw/dist/mjs/rendering/renderers/TextOnlyRenderer.mjs", "../../js-draw/dist/mjs/rendering/Display.mjs", "../../js-draw/dist/mjs/components/builders/PolylineBuilder.mjs", "../../js-draw/dist/mjs/util/createElement.mjs", "../../js-draw/dist/mjs/toolbar/IconProvider.mjs", "../../js-draw/dist/mjs/testing/getUniquePointerId.mjs", "../../js-draw/dist/mjs/testing/sendPenEvent.mjs", "../../js-draw/dist/mjs/toolbar/constants.mjs", "../../js-draw/dist/mjs/toolbar/widgets/layout/DropdownLayoutManager.mjs", "../../js-draw/dist/mjs/util/listenForLongPressOrHover.mjs", "../../js-draw/dist/mjs/util/addLongPressOrHoverCssClasses.mjs", "../../js-draw/dist/mjs/toolbar/utils/makeDraggable.mjs", "../../js-draw/dist/mjs/util/cloneElementWithStyles.mjs", "../../js-draw/dist/mjs/toolbar/utils/HelpDisplay.mjs", "../../js-draw/dist/mjs/toolbar/widgets/BaseWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/layout/EdgeToolbarLayoutManager.mjs", "../../@melloware/coloris/dist/esm/coloris.js", "../../js-draw/dist/mjs/components/builders/autocorrect/makeSnapToGridAutocorrect.mjs", "../../js-draw/dist/mjs/components/builders/ArrowBuilder.mjs", "../../js-draw/dist/mjs/components/builders/LineBuilder.mjs", "../../js-draw/dist/mjs/components/builders/RectangleBuilder.mjs", "../../js-draw/dist/mjs/components/builders/CircleBuilder.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeColorInput.mjs", "../../js-draw/dist/mjs/toolbar/widgets/BaseToolWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/keybindings.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeThicknessSlider.mjs", "../../js-draw/dist/mjs/util/stopPropagationOfScrollingWheelEvents.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeGridSelector.mjs", "../../js-draw/dist/mjs/toolbar/widgets/PenToolWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/EraserToolWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeSeparator.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeButtonGrid.mjs", "../../js-draw/dist/mjs/toolbar/widgets/SelectionToolWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/TextToolWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/HandToolWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/ActionButtonWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeFileInput.mjs", "../../js-draw/dist/mjs/util/bytesToSizeString.mjs", "../../js-draw/dist/mjs/toolbar/widgets/InsertImageWidget/ImageWrapper.mjs", "../../js-draw/dist/mjs/toolbar/widgets/components/makeSnappedList.mjs", "../../js-draw/dist/mjs/toolbar/widgets/InsertImageWidget/fileToImages.mjs", "../../js-draw/dist/mjs/toolbar/widgets/InsertImageWidget/InsertImageWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/DocumentPropertiesWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/SaveActionWidget.mjs", "../../js-draw/dist/mjs/toolbar/widgets/ExitActionWidget.mjs", "../../js-draw/dist/mjs/toolbar/AbstractToolbar.mjs", "../../js-draw/dist/mjs/toolbar/EdgeToolbar.mjs", "../../js-draw/dist/mjs/tools/InputFilter/StrokeKeyboardControl.mjs", "../../js-draw/dist/mjs/util/guessKeyCodeFromKey.mjs", "../../js-draw/dist/mjs/dialogs/makeAboutDialog.mjs", "../../js-draw/dist/mjs/version.mjs", "../../js-draw/dist/mjs/image/export/adjustExportedSVGSize.mjs", "../../js-draw/dist/mjs/image/export/editorImageToSVG.mjs", "../../js-draw/dist/mjs/util/listenForKeyboardEventsFrom.mjs", "../../js-draw/dist/mjs/util/mitLicenseAttribution.mjs", "../../js-draw/dist/mjs/tools/InputFilter/ContextMenuRecognizer.mjs", "../../js-draw/dist/mjs/Editor.mjs", "../../js-draw/dist/mjs/commands/invertCommand.mjs", "../../js-draw/dist/mjs/toolbar/widgets/OverflowWidget.mjs", "../../js-draw/dist/mjs/toolbar/DropdownToolbar.mjs", "../../js-draw/dist/mjs/testing/sendTouchEvent.mjs", "../../js-draw/dist/mjs/util/adjustEditorThemeForContrast.mjs", "../../js-draw/dist/mjs/lib.mjs"],
  "sourcesContent": ["/**\n * A `Command` is an action that can be done, redone, and undone. It's used to enable undo/redo.\n *\n * See {@link Editor.dispatch}.\n */\nexport class Command {\n    // Called when the command is being deleted\n    onDrop(_editor) { }\n    /** @deprecated Use {@link uniteCommands} */\n    static union(a, b) {\n        return new (class extends Command {\n            apply(editor) {\n                a.apply(editor);\n                b.apply(editor);\n            }\n            unapply(editor) {\n                b.unapply(editor);\n                a.unapply(editor);\n            }\n            description(editor, localizationTable) {\n                const aDescription = a.description(editor, localizationTable);\n                const bDescription = b.description(editor, localizationTable);\n                if (aDescription === bDescription) {\n                    return aDescription;\n                }\n                return `${aDescription}, ${bDescription}`;\n            }\n        })();\n    }\n}\nCommand.empty = new (class extends Command {\n    description(_editor, _localizationTable) {\n        return '';\n    }\n    apply(_editor) { }\n    unapply(_editor) { }\n})();\nexport default Command;\n", "const defaultEqlTolerance = 1e-10;\nclass Vec3Impl {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    get xy() {\n        // Useful for APIs that behave differently if .z is present.\n        return {\n            x: this.x,\n            y: this.y,\n        };\n    }\n    /** Returns this' `idx`th component. For example, `Vec3.of(1, 2, 3).at(1) → 2`. */\n    at(idx) {\n        if (idx === 0)\n            return this.x;\n        if (idx === 1)\n            return this.y;\n        if (idx === 2)\n            return this.z;\n        throw new Error(`${idx} out of bounds!`);\n    }\n    length() {\n        return this.magnitude();\n    }\n    magnitude() {\n        return Math.sqrt(this.magnitudeSquared());\n    }\n    magnitudeSquared() {\n        return this.x * this.x + this.y * this.y + this.z * this.z;\n    }\n    squareDistanceTo(p) {\n        const dx = this.x - p.x;\n        const dy = this.y - p.y;\n        const dz = this.z - p.z;\n        return dx * dx + dy * dy + dz * dz;\n    }\n    distanceTo(p) {\n        return Math.sqrt(this.squareDistanceTo(p));\n    }\n    maximumEntryMagnitude() {\n        return Math.max(Math.abs(this.x), Math.max(Math.abs(this.y), Math.abs(this.z)));\n    }\n    angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    normalized() {\n        const norm = this.magnitude();\n        return Vec3.of(this.x / norm, this.y / norm, this.z / norm);\n    }\n    normalizedOrZero() {\n        if (this.eq(Vec3.zero)) {\n            return Vec3.zero;\n        }\n        return this.normalized();\n    }\n    times(c) {\n        return Vec3.of(this.x * c, this.y * c, this.z * c);\n    }\n    plus(v) {\n        return Vec3.of(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    minus(v) {\n        return Vec3.of(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    dot(other) {\n        return this.x * other.x + this.y * other.y + this.z * other.z;\n    }\n    cross(other) {\n        // | i  j  k |\n        // | x1 y1 z1| = (i)(y1z2 - y2z1) - (j)(x1z2 - x2z1) + (k)(x1y2 - x2y1)\n        // | x2 y2 z2|\n        return Vec3.of(this.y * other.z - other.y * this.z, other.x * this.z - this.x * other.z, this.x * other.y - other.x * this.y);\n    }\n    scale(other) {\n        if (typeof other === 'number') {\n            return this.times(other);\n        }\n        return Vec3.of(this.x * other.x, this.y * other.y, this.z * other.z);\n    }\n    orthog() {\n        // If parallel to the z-axis\n        if (this.dot(Vec3.unitX) === 0 && this.dot(Vec3.unitY) === 0) {\n            return this.dot(Vec3.unitX) === 0 ? Vec3.unitX : this.cross(Vec3.unitX).normalized();\n        }\n        return this.cross(Vec3.unitZ.times(-1)).normalized();\n    }\n    extend(distance, direction) {\n        return this.plus(direction.normalized().times(distance));\n    }\n    lerp(target, fractionTo) {\n        return this.times(1 - fractionTo).plus(target.times(fractionTo));\n    }\n    zip(other, zip) {\n        return Vec3.of(zip(other.x, this.x), zip(other.y, this.y), zip(other.z, this.z));\n    }\n    map(fn) {\n        return Vec3.of(fn(this.x, 0), fn(this.y, 1), fn(this.z, 2));\n    }\n    asArray() {\n        return [this.x, this.y, this.z];\n    }\n    eq(other, fuzz = defaultEqlTolerance) {\n        return (Math.abs(other.x - this.x) <= fuzz &&\n            Math.abs(other.y - this.y) <= fuzz &&\n            Math.abs(other.z - this.z) <= fuzz);\n    }\n    toString() {\n        return `Vec(${this.x}, ${this.y}, ${this.z})`;\n    }\n}\nclass Vec2Impl {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    get z() {\n        return 0;\n    }\n    get xy() {\n        // Useful for APIs that behave differently if .z is present.\n        return {\n            x: this.x,\n            y: this.y,\n        };\n    }\n    at(idx) {\n        if (idx === 0)\n            return this.x;\n        if (idx === 1)\n            return this.y;\n        if (idx === 2)\n            return 0;\n        throw new Error(`${idx} out of bounds!`);\n    }\n    length() {\n        return this.magnitude();\n    }\n    magnitude() {\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n    magnitudeSquared() {\n        return this.x * this.x + this.y * this.y;\n    }\n    squareDistanceTo(p) {\n        const dx = this.x - p.x;\n        const dy = this.y - p.y;\n        return dx * dx + dy * dy + p.z * p.z;\n    }\n    distanceTo(p) {\n        return Math.sqrt(this.squareDistanceTo(p));\n    }\n    maximumEntryMagnitude() {\n        return Math.max(Math.abs(this.x), Math.abs(this.y));\n    }\n    angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    normalized() {\n        const norm = this.magnitude();\n        return Vec2.of(this.x / norm, this.y / norm);\n    }\n    normalizedOrZero() {\n        if (this.eq(Vec3.zero)) {\n            return Vec3.zero;\n        }\n        return this.normalized();\n    }\n    times(c) {\n        return Vec2.of(this.x * c, this.y * c);\n    }\n    plus(v) {\n        return Vec3.of(this.x + v.x, this.y + v.y, v.z);\n    }\n    minus(v) {\n        return Vec3.of(this.x - v.x, this.y - v.y, -v.z);\n    }\n    dot(other) {\n        return this.x * other.x + this.y * other.y;\n    }\n    cross(other) {\n        // | i  j  k |\n        // | x1 y1 z1| = (i)(y1z2 - y2z1) - (j)(x1z2 - x2z1) + (k)(x1y2 - x2y1)\n        // | x2 y2 z2|\n        return Vec3.of(this.y * other.z, -this.x * other.z, this.x * other.y - other.x * this.y);\n    }\n    scale(other) {\n        if (typeof other === 'number') {\n            return this.times(other);\n        }\n        return Vec2.of(this.x * other.x, this.y * other.y);\n    }\n    orthog() {\n        // If parallel to the z-axis\n        if (this.dot(Vec3.unitX) === 0 && this.dot(Vec3.unitY) === 0) {\n            return this.dot(Vec3.unitX) === 0 ? Vec3.unitX : this.cross(Vec3.unitX).normalized();\n        }\n        return this.cross(Vec3.unitZ.times(-1)).normalized();\n    }\n    extend(distance, direction) {\n        return this.plus(direction.normalized().times(distance));\n    }\n    lerp(target, fractionTo) {\n        return this.times(1 - fractionTo).plus(target.times(fractionTo));\n    }\n    zip(other, zip) {\n        return Vec3.of(zip(other.x, this.x), zip(other.y, this.y), zip(other.z, 0));\n    }\n    map(fn) {\n        return Vec3.of(fn(this.x, 0), fn(this.y, 1), fn(0, 2));\n    }\n    asArray() {\n        return [this.x, this.y, 0];\n    }\n    eq(other, fuzz = defaultEqlTolerance) {\n        return (Math.abs(other.x - this.x) <= fuzz &&\n            Math.abs(other.y - this.y) <= fuzz &&\n            Math.abs(other.z) <= fuzz);\n    }\n    toString() {\n        return `Vec(${this.x}, ${this.y})`;\n    }\n}\n/**\n * A `Vec2` is a {@link Vec3} optimized for working in a plane. `Vec2`s have an\n * always-zero `z` component.\n *\n * ```ts,runnable,console\n * import { Vec2 } from '@js-draw/math';\n *\n * const v = Vec2.of(1, 2);\n * console.log('a Vec2:', v);\n * console.log('x component:', v.x);\n * console.log('z component:', v.z);\n * ```\n */\nexport var Vec2;\n(function (Vec2) {\n    /**\n     * Creates a `Vec2` from an x and y coordinate.\n     *\n     * @example\n     * ```ts,runnable,console\n     * import { Vec2 } from '@js-draw/math';\n     * const v = Vec2.of(3, 4); // x=3, y=4.\n     * ```\n     */\n    Vec2.of = (x, y) => {\n        return new Vec2Impl(x, y);\n    };\n    /**\n     * Creates a `Vec2` from an object containing `x` and `y` coordinates.\n     *\n     * @example\n     * ```ts,runnable,console\n     * import { Vec2 } from '@js-draw/math';\n     * const v1 = Vec2.ofXY({ x: 3, y: 4.5 });\n     * const v2 = Vec2.ofXY({ x: -123.4, y: 1 });\n     * ```\n     */\n    Vec2.ofXY = ({ x, y }) => {\n        return Vec2.of(x, y);\n    };\n    /** A vector of length 1 in the X direction (→). */\n    Vec2.unitX = Vec2.of(1, 0);\n    /** A vector of length 1 in the Y direction (↑). */\n    Vec2.unitY = Vec2.of(0, 1);\n    /** The zero vector: A vector with x=0, y=0. */\n    Vec2.zero = Vec2.of(0, 0);\n})(Vec2 || (Vec2 = {}));\n/** Contains static methods for constructing a {@link Vec3}. */\nexport var Vec3;\n(function (Vec3) {\n    /**\n     * Construct a vector from three components.\n     *\n     * @example\n     * ```ts,runnable,console\n     * import { Vec3 } from '@js-draw/math';\n     * const v1 = Vec3.of(1, 2, 3);\n     * console.log(v1.plus(Vec3.of(0, 100, 0)));\n     * ```\n     */\n    Vec3.of = (x, y, z) => {\n        if (z === 0) {\n            return Vec2.of(x, y);\n        }\n        else {\n            return new Vec3Impl(x, y, z);\n        }\n    };\n    /** A unit vector in the x direction (`[1, 0, 0]`). */\n    Vec3.unitX = Vec2.unitX;\n    /** A unit vector in the y direction (`[0, 1, 0]`). */\n    Vec3.unitY = Vec2.unitY;\n    /** The zero vector (`[0, 0, 0]`). */\n    Vec3.zero = Vec2.zero;\n    /** A vector of length 1 in the z direction. */\n    Vec3.unitZ = Vec3.of(0, 0, 1);\n})(Vec3 || (Vec3 = {}));\nexport default Vec3;\n", "import  { Vec2 }  from './Vec2.mjs';\nimport  Vec3  from './Vec3.mjs';\n/**\n * Represents a three dimensional linear transformation or\n * a two-dimensional affine transformation. (An affine transformation scales/rotates/shears\n * **and** translates while a linear transformation just scales/rotates/shears).\n *\n * In addition to other matrices, {@link Mat33}s can be used to transform {@link Vec3}s and {@link Vec2}s.\n *\n * For example, to move the point $(1, 1)$ by 5 units to the left and 6 units up,\n * ```ts,runnable,console\n * import {Mat33, Vec2} from '@js-draw/math';\n *\n * const moveLeftAndUp = Mat33.translation(Vec2.of(5, 6));\n * console.log(moveLeftAndUp);\n * ```\n *\n * This `moveLeftAndUp` matrix could then translate (move) a {@link Vec2} using\n * {@link Mat33.transformVec2}:\n *\n * ```ts,runnable,console\n * ---use-previous---\n * ---visible---\n * console.log(moveLeftAndUp.transformVec2(Vec2.of(1, 1)));\n * console.log(moveLeftAndUp.transformVec2(Vec2.of(-1, 2)));\n * ```\n *\n * It's also possible to create transformation matrices that scale and rotate.\n * A single transform matrix can be created from multiple using matrix multiplication\n * (see {@link Mat33.rightMul}):\n *\n * ```ts,runnable,console\n * ---use-previous---\n * ---visible---\n * // Create a matrix by right multiplying.\n * const scaleThenRotate =\n *   // The resultant matrix first scales by a factor of two\n *   Mat33.scaling2D(2).rightMul(\n *     // ...then rotates by pi/2 radians = 90 degrees.\n *     Mat33.zRotation(Math.PI / 2)\n *   );\n * console.log(scaleThenRotate);\n *\n * // Use scaleThenRotate to scale then rotate a vector.\n * console.log(scaleThenRotate.transformVec2(Vec2.unitX));\n * ```\n */\nexport class Mat33 {\n    /**\n     * Creates a matrix from inputs in the form,\n     * $$\n     * \\begin{bmatrix}\n     *   a1 & a2 & a3 \\\\\n     *   b1 & b2 & b3 \\\\\n     *   c1 & c2 & c3\n     * \\end{bmatrix}\n     * $$\n     *\n     * Static constructor methods are also available.\n     * See {@link Mat33.scaling2D}, {@link Mat33.zRotation}, {@link Mat33.translation}, and {@link Mat33.fromCSSMatrix}.\n     */\n    constructor(a1, a2, a3, b1, b2, b3, c1, c2, c3) {\n        this.a1 = a1;\n        this.a2 = a2;\n        this.a3 = a3;\n        this.b1 = b1;\n        this.b2 = b2;\n        this.b3 = b3;\n        this.c1 = c1;\n        this.c2 = c2;\n        this.c3 = c3;\n        this.cachedInverse = undefined;\n        this.rows = [Vec3.of(a1, a2, a3), Vec3.of(b1, b2, b3), Vec3.of(c1, c2, c3)];\n    }\n    /**\n     * Creates a matrix from the given rows:\n     * $$\n     * \\begin{bmatrix}\n     *  \\texttt{r1.x} & \\texttt{r1.y} & \\texttt{r1.z}\\\\\n     *  \\texttt{r2.x} & \\texttt{r2.y} & \\texttt{r2.z}\\\\\n     *  \\texttt{r3.x} & \\texttt{r3.y} & \\texttt{r3.z}\\\\\n     * \\end{bmatrix}\n     * $$\n     */\n    static ofRows(r1, r2, r3) {\n        return new Mat33(r1.x, r1.y, r1.z, r2.x, r2.y, r2.z, r3.x, r3.y, r3.z);\n    }\n    /**\n     * Either returns the inverse of this, or, if this matrix is singular/uninvertable,\n     * returns Mat33.identity.\n     *\n     * This may cache the computed inverse and return the cached version instead of recomputing\n     * it.\n     */\n    inverse() {\n        return this.computeInverse() ?? Mat33.identity;\n    }\n    invertable() {\n        return this.computeInverse() !== null;\n    }\n    computeInverse() {\n        if (this.cachedInverse !== undefined) {\n            return this.cachedInverse;\n        }\n        const toIdentity = [this.rows[0], this.rows[1], this.rows[2]];\n        const toResult = [Vec3.unitX, Vec3.unitY, Vec3.unitZ];\n        // Convert toIdentity to the identity matrix and\n        // toResult to the inverse through elementary row operations\n        for (let cursor = 0; cursor < 3; cursor++) {\n            // Select the [cursor]th diagonal entry\n            let pivot = toIdentity[cursor].at(cursor);\n            // Don't divide by zero (treat very small numbers as zero).\n            const minDivideBy = 1e-10;\n            if (Math.abs(pivot) < minDivideBy) {\n                let swapIndex = -1;\n                // For all other rows,\n                for (let i = 1; i <= 2; i++) {\n                    const otherRowIdx = (cursor + i) % 3;\n                    if (Math.abs(toIdentity[otherRowIdx].at(cursor)) >= minDivideBy) {\n                        swapIndex = otherRowIdx;\n                        break;\n                    }\n                }\n                // Can't swap with another row?\n                if (swapIndex === -1) {\n                    this.cachedInverse = null;\n                    return null;\n                }\n                const tmpIdentityRow = toIdentity[cursor];\n                const tmpResultRow = toResult[cursor];\n                // Swap!\n                toIdentity[cursor] = toIdentity[swapIndex];\n                toResult[cursor] = toResult[swapIndex];\n                toIdentity[swapIndex] = tmpIdentityRow;\n                toResult[swapIndex] = tmpResultRow;\n                pivot = toIdentity[cursor].at(cursor);\n            }\n            // Make toIdentity[k = cursor] = 1\n            let scale = 1.0 / pivot;\n            toIdentity[cursor] = toIdentity[cursor].times(scale);\n            toResult[cursor] = toResult[cursor].times(scale);\n            const cursorToIdentityRow = toIdentity[cursor];\n            const cursorToResultRow = toResult[cursor];\n            // Make toIdentity[k ≠ cursor] = 0\n            for (let i = 1; i <= 2; i++) {\n                const otherRowIdx = (cursor + i) % 3;\n                scale = -toIdentity[otherRowIdx].at(cursor);\n                toIdentity[otherRowIdx] = toIdentity[otherRowIdx].plus(cursorToIdentityRow.times(scale));\n                toResult[otherRowIdx] = toResult[otherRowIdx].plus(cursorToResultRow.times(scale));\n            }\n        }\n        const inverse = Mat33.ofRows(toResult[0], toResult[1], toResult[2]);\n        this.cachedInverse = inverse;\n        return inverse;\n    }\n    transposed() {\n        return new Mat33(this.a1, this.b1, this.c1, this.a2, this.b2, this.c2, this.a3, this.b3, this.c3);\n    }\n    /**\n     * [Right-multiplies](https://en.wikipedia.org/wiki/Matrix_multiplication) this by `other`.\n     *\n     * See also {@link transformVec3} and {@link transformVec2}.\n     *\n     * Example:\n     * ```ts,runnable,console\n     * import {Mat33, Vec2} from '@js-draw/math';\n     * console.log(Mat33.identity.rightMul(Mat33.identity));\n     *\n     * // Create a matrix by right multiplying.\n     * const scaleThenRotate =\n     *   // The resultant matrix first scales by a factor of two\n     *   Mat33.scaling2D(2).rightMul(\n     *     // ...then rotates by pi/4 radians = 45 degrees.\n     *     Mat33.zRotation(Math.PI / 4)\n     *   );\n     * console.log(scaleThenRotate);\n     *\n     * // Use scaleThenRotate to scale then rotate a vector.\n     * console.log(scaleThenRotate.transformVec2(Vec2.unitX));\n     * ```\n     */\n    rightMul(other) {\n        other = other.transposed();\n        const at = (row, col) => {\n            return this.rows[row].dot(other.rows[col]);\n        };\n        return new Mat33(at(0, 0), at(0, 1), at(0, 2), at(1, 0), at(1, 1), at(1, 2), at(2, 0), at(2, 1), at(2, 2));\n    }\n    /**\n     * Applies this as an **affine** transformation to the given vector.\n     * Returns a transformed version of `other`.\n     *\n     * Unlike {@link transformVec3}, this **does** translate the given vector.\n     */\n    transformVec2(other) {\n        // When transforming a Vec2, we want to use the z transformation\n        // components of this for translation:\n        //  ⎡ . . tX ⎤\n        //  ⎢ . . tY ⎥\n        //  ⎣ 0 0 1  ⎦\n        // For this, we need other's z component to be 1 (so that tX and tY\n        // are scaled by 1):\n        let intermediate = Vec3.of(other.x, other.y, 1);\n        intermediate = this.transformVec3(intermediate);\n        // Drop the z=1 to allow magnitude to work as expected\n        return Vec2.of(intermediate.x, intermediate.y);\n    }\n    /**\n     * Applies this as a linear transformation to the given vector (doesn't translate).\n     * This is the standard way of transforming vectors in ℝ³.\n     */\n    transformVec3(other) {\n        return Vec3.of(this.rows[0].dot(other), this.rows[1].dot(other), this.rows[2].dot(other));\n    }\n    /** @returns true iff this is the identity matrix. */\n    isIdentity() {\n        if (this === Mat33.identity) {\n            return true;\n        }\n        return this.eq(Mat33.identity);\n    }\n    /** Returns true iff this = other ± fuzz */\n    eq(other, fuzz = 0) {\n        for (let i = 0; i < 3; i++) {\n            if (!this.rows[i].eq(other.rows[i], fuzz)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Creates a human-readable representation of the matrix.\n     *\n     * Example:\n     * ```ts,runnable,console\n     * import { Mat33 } from '@js-draw/math';\n     * console.log(Mat33.identity.toString());\n     * ```\n     */\n    toString() {\n        let result = '';\n        const maxColumnLens = [0, 0, 0];\n        // Determine the longest item in each column so we can pad the others to that\n        // length.\n        for (const row of this.rows) {\n            for (let i = 0; i < 3; i++) {\n                maxColumnLens[i] = Math.max(maxColumnLens[0], `${row.at(i)}`.length);\n            }\n        }\n        for (let i = 0; i < 3; i++) {\n            if (i === 0) {\n                result += '⎡ ';\n            }\n            else if (i === 1) {\n                result += '⎢ ';\n            }\n            else {\n                result += '⎣ ';\n            }\n            // Add each component of the ith row (after padding it)\n            for (let j = 0; j < 3; j++) {\n                const val = this.rows[i].at(j).toString();\n                let padding = '';\n                for (let i = val.length; i < maxColumnLens[j]; i++) {\n                    padding += ' ';\n                }\n                result += val + ', ' + padding;\n            }\n            if (i === 0) {\n                result += ' ⎤';\n            }\n            else if (i === 1) {\n                result += ' ⎥';\n            }\n            else {\n                result += ' ⎦';\n            }\n            result += '\\n';\n        }\n        return result.trimEnd();\n    }\n    /**\n     * ```\n     * result[0] = top left element\n     * result[1] = element at row zero, column 1\n     * ...\n     * ```\n     *\n     * Example:\n     * ```ts,runnable,console\n     * import { Mat33 } from '@js-draw/math';\n     * console.log(\n     *   new Mat33(\n     *     1, 2, 3,\n     *     4, 5, 6,\n     *     7, 8, 9,\n     *   )\n     * );\n     * ```\n     */\n    toArray() {\n        return [this.a1, this.a2, this.a3, this.b1, this.b2, this.b3, this.c1, this.c2, this.c3];\n    }\n    /**\n     * Returns a new `Mat33` where each entry is the output of the function\n     * `mapping`.\n     *\n     * @example\n     * ```\n     * new Mat33(\n     *  1, 2, 3,\n     *  4, 5, 6,\n     *  7, 8, 9,\n     * ).mapEntries(component => component - 1);\n     * // → ⎡ 0, 1, 2 ⎤\n     * //   ⎢ 3, 4, 5 ⎥\n     * //   ⎣ 6, 7, 8 ⎦\n     * ```\n     */\n    mapEntries(mapping) {\n        return new Mat33(mapping(this.a1, [0, 0]), mapping(this.a2, [0, 1]), mapping(this.a3, [0, 2]), mapping(this.b1, [1, 0]), mapping(this.b2, [1, 1]), mapping(this.b3, [1, 2]), mapping(this.c1, [2, 0]), mapping(this.c2, [2, 1]), mapping(this.c3, [2, 2]));\n    }\n    /** Estimate the scale factor of this matrix (based on the first row). */\n    getScaleFactor() {\n        return Math.hypot(this.a1, this.a2);\n    }\n    /** Returns the `idx`-th column (`idx` is 0-indexed). */\n    getColumn(idx) {\n        return Vec3.of(this.rows[0].at(idx), this.rows[1].at(idx), this.rows[2].at(idx));\n    }\n    /** Returns the magnitude of the entry with the largest entry */\n    maximumEntryMagnitude() {\n        let greatestSoFar = Math.abs(this.a1);\n        for (const entry of this.toArray()) {\n            greatestSoFar = Math.max(greatestSoFar, Math.abs(entry));\n        }\n        return greatestSoFar;\n    }\n    /**\n     * Constructs a 3x3 translation matrix (for translating `Vec2`s) using\n     * **transformVec2**.\n     *\n     * Creates a matrix in the form\n     * $$\n     * \t\\begin{pmatrix}\n     * \t\t1 & 0 & {\\tt amount.x}\\\\\n     * \t\t0 & 1 & {\\tt amount.y}\\\\\n     * \t\t0 & 0 & 1\n     * \t\\end{pmatrix}\n     * $$\n     */\n    static translation(amount) {\n        // When transforming Vec2s by a 3x3 matrix, we give the input\n        // Vec2s z = 1. As such,\n        //   outVec2.x = inVec2.x * 1 + inVec2.y * 0 + 1 * amount.x\n        //   ...\n        return new Mat33(1, 0, amount.x, 0, 1, amount.y, 0, 0, 1);\n    }\n    /**\n     * Creates a matrix for rotating `Vec2`s about `center` by some number of `radians`.\n     *\n     * For this function, {@link Vec2}s are considered to be points in 2D space.\n     *\n     * For example,\n     * ```ts,runnable,console\n     * import { Mat33, Vec2 } from '@js-draw/math';\n     *\n     * const halfCircle = Math.PI; // PI radians = 180 degrees = 1/2 circle\n     * const center = Vec2.of(1, 1); // The point (1,1)\n     * const rotationMatrix = Mat33.zRotation(halfCircle, center);\n     *\n     * console.log(\n     *   'Rotating (0,0) 180deg about', center, 'results in',\n     *   // Rotates (0,0)\n     *   rotationMatrix.transformVec2(Vec2.zero),\n     * );\n     * ```\n     */\n    static zRotation(radians, center = Vec2.zero) {\n        if (radians === 0) {\n            return Mat33.identity;\n        }\n        const cos = Math.cos(radians);\n        const sin = Math.sin(radians);\n        // Translate everything so that rotation is about the origin\n        let result = Mat33.translation(center);\n        result = result.rightMul(new Mat33(cos, -sin, 0, sin, cos, 0, 0, 0, 1));\n        return result.rightMul(Mat33.translation(center.times(-1)));\n    }\n    static scaling2D(amount, center = Vec2.zero) {\n        let result = Mat33.translation(center);\n        let xAmount, yAmount;\n        if (typeof amount === 'number') {\n            xAmount = amount;\n            yAmount = amount;\n        }\n        else {\n            xAmount = amount.x;\n            yAmount = amount.y;\n        }\n        result = result.rightMul(new Mat33(xAmount, 0, 0, 0, yAmount, 0, 0, 0, 1));\n        // Translate such that [center] goes to (0, 0)\n        return result.rightMul(Mat33.translation(center.times(-1)));\n    }\n    /**\n     * **Note**: Assumes `this.c1 = this.c2 = 0` and `this.c3 = 1`.\n     *\n     * @see {@link fromCSSMatrix}\n     */\n    toCSSMatrix() {\n        return `matrix(${this.a1},${this.b1},${this.a2},${this.b2},${this.a3},${this.b3})`;\n    }\n    /**\n     * Converts a CSS-form `matrix(a, b, c, d, e, f)` to a Mat33.\n     *\n     * Note that such a matrix has the form,\n     * ```\n     * ⎡ a c e ⎤\n     * ⎢ b d f ⎥\n     * ⎣ 0 0 1 ⎦\n     * ```\n     */\n    static fromCSSMatrix(cssString) {\n        if (cssString === '' || cssString === 'none') {\n            return Mat33.identity;\n        }\n        // Normalize spacing\n        cssString = cssString.trim().replace(/\\s+/g, ' ');\n        const parseArguments = (argumentString) => {\n            const parsed = argumentString.split(/[, \\t\\n]+/g).map((argString) => {\n                // Handle trailing spaces/commands\n                if (argString.trim() === '') {\n                    return null;\n                }\n                let isPercentage = false;\n                if (argString.endsWith('%')) {\n                    isPercentage = true;\n                    argString = argString.substring(0, argString.length - 1);\n                }\n                // Remove trailing px units.\n                argString = argString.replace(/px$/gi, '');\n                const numberExp = /^[-]?\\d*(?:\\.\\d*)?(?:[eE][-+]?\\d+)?$/i;\n                if (!numberExp.exec(argString)) {\n                    throw new Error(`All arguments to transform functions must be numeric (state: ${JSON.stringify({\n                        currentArgument: argString,\n                        allArguments: argumentString,\n                    })})`);\n                }\n                let argNumber = parseFloat(argString);\n                if (isPercentage) {\n                    argNumber /= 100;\n                }\n                return argNumber;\n            });\n            return parsed.filter((n) => n !== null);\n        };\n        const keywordToAction = {\n            matrix: (matrixData) => {\n                if (matrixData.length !== 6) {\n                    throw new Error(`Invalid matrix argument: ${matrixData}. Must have length 6`);\n                }\n                const a = matrixData[0];\n                const b = matrixData[1];\n                const c = matrixData[2];\n                const d = matrixData[3];\n                const e = matrixData[4];\n                const f = matrixData[5];\n                const transform = new Mat33(a, c, e, b, d, f, 0, 0, 1);\n                return transform;\n            },\n            scale: (scaleArgs) => {\n                let scaleX, scaleY;\n                if (scaleArgs.length === 1) {\n                    scaleX = scaleArgs[0];\n                    scaleY = scaleArgs[0];\n                }\n                else if (scaleArgs.length === 2) {\n                    scaleX = scaleArgs[0];\n                    scaleY = scaleArgs[1];\n                }\n                else {\n                    throw new Error(`The scale() function only supports two arguments. Given: ${scaleArgs}`);\n                }\n                return Mat33.scaling2D(Vec2.of(scaleX, scaleY));\n            },\n            translate: (translateArgs) => {\n                let translateX = 0;\n                let translateY = 0;\n                if (translateArgs.length === 1) {\n                    // If no y translation is given, assume 0.\n                    translateX = translateArgs[0];\n                }\n                else if (translateArgs.length === 2) {\n                    translateX = translateArgs[0];\n                    translateY = translateArgs[1];\n                }\n                else {\n                    throw new Error(`The translate() function requires either 1 or 2 arguments. Given ${translateArgs}`);\n                }\n                return Mat33.translation(Vec2.of(translateX, translateY));\n            },\n        };\n        // A command (\\w+)\n        // followed by a set of arguments ([^)]*)\n        const partRegex = /(?:^|\\W)(\\w+)\\s?\\(([^)]*)\\)/gi;\n        let match;\n        let matrix = null;\n        while ((match = partRegex.exec(cssString)) !== null) {\n            const action = match[1].toLowerCase();\n            if (!(action in keywordToAction)) {\n                throw new Error(`Unsupported CSS transform action: ${action}`);\n            }\n            const args = parseArguments(match[2]);\n            const currentMatrix = keywordToAction[action](args);\n            if (!matrix) {\n                matrix = currentMatrix;\n            }\n            else {\n                matrix = matrix.rightMul(currentMatrix);\n            }\n        }\n        return matrix ?? Mat33.identity;\n    }\n}\n/** The 3x3 [identity matrix](https://en.wikipedia.org/wiki/Identity_matrix). */\nMat33.identity = new Mat33(1, 0, 0, 0, 1, 0, 0, 0, 1);\nexport default Mat33;\n", "/**\n * An abstract base class for 2D shapes.\n */\nexport class Abstract2DShape {\n    /**\n     * @returns the distance from `point` to this shape. If `point` is within this shape,\n     * this returns the distance from `point` to the edge of this shape.\n     *\n     * @see {@link signedDistance}\n     */\n    distance(point) {\n        return Math.abs(this.signedDistance(point));\n    }\n    /**\n     * Returns `true` if and only if the given `point` is contained within this shape.\n     *\n     * `epsilon` is a small number used to counteract floating point error. Thus, if\n     * `point` is within `epsilon` of the inside of this shape, `containsPoint` may also\n     * return `true`.\n     *\n     * The default implementation relies on `signedDistance`.\n     * Subclasses may override this method to provide a more efficient implementation.\n     */\n    containsPoint(point, epsilon = Abstract2DShape.smallValue) {\n        return this.signedDistance(point) < epsilon;\n    }\n    /**\n     * Returns a bounding box that **loosely** fits the content of this shape.\n     *\n     * The result of this call can be larger than the result of {@link getTightBoundingBox},\n     * **but should not be smaller**. Thus, a call to `getLooseBoundingBox` can be significantly\n     * faster than a call to {@link getTightBoundingBox} for some shapes.\n     */\n    getLooseBoundingBox() {\n        return this.getTightBoundingBox();\n    }\n}\n// @internal\nAbstract2DShape.smallValue = 1e-12;\nexport default Abstract2DShape;\n", "import  LineSegment2  from './LineSegment2.mjs';\nimport  Mat33  from '../Mat33.mjs';\nimport  { Vec2 }  from '../Vec2.mjs';\nimport  Abstract2DShape  from './Abstract2DShape.mjs';\n/**\n * Represents a rectangle in 2D space, parallel to the XY axes.\n *\n * **Example**:\n * ```ts,runnable,console\n * import { Rect2, Vec2 } from '@js-draw/math';\n *\n * const rect = Rect2.fromCorners(\n *   Vec2.of(0, 0),\n *   Vec2.of(10, 10),\n * );\n * console.log('area', rect.area);\n * console.log('topLeft', rect.topLeft);\n * ```\n *\n * `invariant: w ≥ 0, h ≥ 0, immutable`\n */\nexport class Rect2 extends Abstract2DShape {\n    constructor(\n    // Top left x coordinate\n    x, \n    // Top left y coordinate\n    y, \n    // Width\n    w, \n    // Height\n    h) {\n        super();\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        if (w < 0) {\n            this.x += w;\n            this.w = Math.abs(w);\n        }\n        if (h < 0) {\n            this.y += h;\n            this.h = Math.abs(h);\n        }\n        // Precompute/store vector forms.\n        this.topLeft = Vec2.of(this.x, this.y);\n        this.size = Vec2.of(this.w, this.h);\n        this.area = this.w * this.h;\n    }\n    translatedBy(vec) {\n        return new Rect2(vec.x + this.x, vec.y + this.y, this.w, this.h);\n    }\n    // Returns a copy of this with the given size (but same top-left).\n    resizedTo(size) {\n        return new Rect2(this.x, this.y, size.x, size.y);\n    }\n    containsPoint(other) {\n        return (this.x <= other.x &&\n            this.y <= other.y &&\n            this.x + this.w >= other.x &&\n            this.y + this.h >= other.y);\n    }\n    /** @returns true iff `other` is completely within this `Rect2`. */\n    containsRect(other) {\n        return (this.x <= other.x &&\n            this.y <= other.y &&\n            this.x + this.w >= other.x + other.w &&\n            this.y + this.h >= other.y + other.h);\n    }\n    /**\n     * @returns true iff this and `other` overlap\n     */\n    intersects(other) {\n        // Project along x/y axes.\n        const thisMinX = this.x;\n        const thisMaxX = thisMinX + this.w;\n        const otherMinX = other.x;\n        const otherMaxX = other.x + other.w;\n        if (thisMaxX < otherMinX || thisMinX > otherMaxX) {\n            return false;\n        }\n        const thisMinY = this.y;\n        const thisMaxY = thisMinY + this.h;\n        const otherMinY = other.y;\n        const otherMaxY = other.y + other.h;\n        if (thisMaxY < otherMinY || thisMinY > otherMaxY) {\n            return false;\n        }\n        return true;\n    }\n    // Returns the overlap of this and [other], or null, if no such\n    //          overlap exists\n    intersection(other) {\n        if (!this.intersects(other)) {\n            return null;\n        }\n        const topLeft = this.topLeft.zip(other.topLeft, Math.max);\n        const bottomRight = this.bottomRight.zip(other.bottomRight, Math.min);\n        return Rect2.fromCorners(topLeft, bottomRight);\n    }\n    // Returns a new rectangle containing both [this] and [other].\n    union(other) {\n        return Rect2.union(this, other);\n    }\n    // Returns a the subdivision of this into [columns] columns\n    // and [rows] rows. For example,\n    //\t Rect2.unitSquare.divideIntoGrid(2, 2)\n    //\t\t-> [ Rect2(0, 0, 0.5, 0.5), Rect2(0.5, 0, 0.5, 0.5), Rect2(0, 0.5, 0.5, 0.5), Rect2(0.5, 0.5, 0.5, 0.5) ]\n    // The rectangles are ordered in row-major order.\n    divideIntoGrid(columns, rows) {\n        const result = [];\n        if (columns <= 0 || rows <= 0) {\n            return result;\n        }\n        const eachRectWidth = this.w / columns;\n        const eachRectHeight = this.h / rows;\n        if (eachRectWidth === 0) {\n            columns = 1;\n        }\n        if (eachRectHeight === 0) {\n            rows = 1;\n        }\n        for (let j = 0; j < rows; j++) {\n            for (let i = 0; i < columns; i++) {\n                const x = eachRectWidth * i + this.x;\n                const y = eachRectHeight * j + this.y;\n                result.push(new Rect2(x, y, eachRectWidth, eachRectHeight));\n            }\n        }\n        return result;\n    }\n    // Returns a rectangle containing this and [point].\n    // [margin] is the minimum distance between the new point and the edge\n    // of the resultant rectangle.\n    grownToPoint(point, margin = 0) {\n        const otherRect = new Rect2(point.x - margin, point.y - margin, margin * 2, margin * 2);\n        return this.union(otherRect);\n    }\n    // Returns this grown by [margin] in both the x and y directions.\n    grownBy(margin) {\n        if (margin === 0) {\n            return this;\n        }\n        // Prevent width/height from being negative\n        if (margin < 0) {\n            const xMargin = -Math.min(-margin, this.w / 2);\n            const yMargin = -Math.min(-margin, this.h / 2);\n            return new Rect2(this.x - xMargin, this.y - yMargin, this.w + xMargin * 2, this.h + yMargin * 2);\n        }\n        return new Rect2(this.x - margin, this.y - margin, this.w + margin * 2, this.h + margin * 2);\n    }\n    /**\n     * If this rectangle is smaller than `minSize`, returns a copy of this\n     * with a larger width/height.\n     *\n     * If smaller than `minSize`, padding is applied on both sides.\n     */\n    grownToSize(minSize) {\n        if (this.width >= minSize.x && this.height >= minSize.y) {\n            return this;\n        }\n        const deltaWidth = Math.max(0, minSize.x - this.width);\n        const deltaHeight = Math.max(0, minSize.y - this.height);\n        return new Rect2(this.x - deltaWidth / 2, this.y - deltaHeight / 2, this.width + deltaWidth, this.height + deltaHeight);\n    }\n    getClosestPointOnBoundaryTo(target) {\n        const closestEdgePoints = this.getEdges().map((edge) => {\n            return edge.closestPointTo(target);\n        });\n        let closest = null;\n        let closestDist = null;\n        for (const point of closestEdgePoints) {\n            const dist = point.distanceTo(target);\n            if (closestDist === null || dist < closestDist) {\n                closest = point;\n                closestDist = dist;\n            }\n        }\n        return closest;\n    }\n    /**\n     * Returns `true` iff all points in this rectangle are within `distance` from `point`:\n     *\n     * If $R$ is the set of points in this rectangle, returns `true` iff\n     * $$\n     * \t\\forall {\\bf a} \\in R, \\|\\texttt{point} - {\\bf a}\\| < \\texttt{radius}\n     * $$\n     */\n    isWithinRadiusOf(radius, point) {\n        if (this.maxDimension > radius) {\n            return false;\n        }\n        const squareRadius = radius * radius;\n        return this.corners.every((corner) => corner.minus(point).magnitudeSquared() < squareRadius);\n    }\n    get corners() {\n        return [this.bottomRight, this.topRight, this.topLeft, this.bottomLeft];\n    }\n    get maxDimension() {\n        return Math.max(this.w, this.h);\n    }\n    get minDimension() {\n        return Math.min(this.w, this.h);\n    }\n    get bottomRight() {\n        return this.topLeft.plus(this.size);\n    }\n    get topRight() {\n        return this.bottomRight.plus(Vec2.of(0, -this.h));\n    }\n    get bottomLeft() {\n        return this.topLeft.plus(Vec2.of(0, this.h));\n    }\n    get width() {\n        return this.w;\n    }\n    get height() {\n        return this.h;\n    }\n    get center() {\n        return Vec2.of(this.x + this.w / 2, this.y + this.h / 2);\n    }\n    // Returns edges in the order\n    // [ rightEdge, topEdge, leftEdge, bottomEdge ]\n    getEdges() {\n        const corners = this.corners;\n        return [\n            new LineSegment2(corners[0], corners[1]),\n            new LineSegment2(corners[1], corners[2]),\n            new LineSegment2(corners[2], corners[3]),\n            new LineSegment2(corners[3], corners[0]),\n        ];\n    }\n    intersectsLineSegment(lineSegment) {\n        const result = [];\n        for (const edge of this.getEdges()) {\n            const intersection = edge.intersectsLineSegment(lineSegment);\n            intersection.forEach((point) => result.push(point));\n        }\n        return result;\n    }\n    signedDistance(point) {\n        const closestBoundaryPoint = this.getClosestPointOnBoundaryTo(point);\n        const dist = point.minus(closestBoundaryPoint).magnitude();\n        if (this.containsPoint(point)) {\n            return -dist;\n        }\n        return dist;\n    }\n    getTightBoundingBox() {\n        return this;\n    }\n    // [affineTransform] is a transformation matrix that both scales and **translates**.\n    // the bounding box of this' four corners after transformed by the given affine transformation.\n    transformedBoundingBox(affineTransform) {\n        // Optimize transforming by the identity matrix (a common case).\n        if (affineTransform === Mat33.identity) {\n            return this;\n        }\n        return Rect2.bboxOf(this.corners.map((corner) => affineTransform.transformVec2(corner)));\n    }\n    /** @return true iff this is equal to `other ± tolerance` */\n    eq(other, tolerance = 0) {\n        return this.topLeft.eq(other.topLeft, tolerance) && this.size.eq(other.size, tolerance);\n    }\n    toString() {\n        return `Rect(point(${this.x}, ${this.y}), size(${this.w}, ${this.h}))`;\n    }\n    static fromCorners(corner1, corner2) {\n        return new Rect2(Math.min(corner1.x, corner2.x), Math.min(corner1.y, corner2.y), Math.abs(corner1.x - corner2.x), Math.abs(corner1.y - corner2.y));\n    }\n    // Returns a box that contains all points in [points] with at least [margin]\n    // between each point and the edge of the box.\n    static bboxOf(points, margin = 0) {\n        let minX = 0;\n        let minY = 0;\n        let maxX = 0;\n        let maxY = 0;\n        let isFirst = true;\n        for (const point of points) {\n            if (isFirst) {\n                minX = point.x;\n                minY = point.y;\n                maxX = point.x;\n                maxY = point.y;\n                isFirst = false;\n            }\n            minX = Math.min(minX, point.x);\n            minY = Math.min(minY, point.y);\n            maxX = Math.max(maxX, point.x);\n            maxY = Math.max(maxY, point.y);\n        }\n        return Rect2.fromCorners(Vec2.of(minX - margin, minY - margin), Vec2.of(maxX + margin, maxY + margin));\n    }\n    // @returns a rectangle that contains all of the given rectangles, the bounding box\n    //     of the given rectangles.\n    static union(...rects) {\n        if (rects.length === 0) {\n            return Rect2.empty;\n        }\n        const firstRect = rects[0];\n        let minX = firstRect.x;\n        let minY = firstRect.y;\n        let maxX = firstRect.x + firstRect.w;\n        let maxY = firstRect.y + firstRect.h;\n        for (let i = 1; i < rects.length; i++) {\n            const rect = rects[i];\n            minX = Math.min(minX, rect.x);\n            minY = Math.min(minY, rect.y);\n            maxX = Math.max(maxX, rect.x + rect.w);\n            maxY = Math.max(maxY, rect.y + rect.h);\n        }\n        return new Rect2(minX, minY, maxX - minX, maxY - minY);\n    }\n    static of(template) {\n        const width = template.width ?? template.w ?? 0;\n        const height = template.height ?? template.h ?? 0;\n        return new Rect2(template.x, template.y, width, height);\n    }\n}\nRect2.empty = new Rect2(0, 0, 0, 0);\nRect2.unitSquare = new Rect2(0, 0, 1, 1);\nexport default Rect2;\n", "import  Abstract2DShape  from './Abstract2DShape.mjs';\n/**\n * A 2-dimensional path with parameter interval $t \\in [0, 1]$.\n *\n * **Note:** Avoid extending this class outside of `js-draw` --- new abstract methods\n * may be added between minor versions.\n */\nexport class Parameterized2DShape extends Abstract2DShape {\n    intersectsLineSegment(line) {\n        return this.argIntersectsLineSegment(line).map((t) => this.at(t));\n    }\n}\nexport default Parameterized2DShape;\n", "import  Rect2  from './Rect2.mjs';\nimport  { Vec2 }  from '../Vec2.mjs';\nimport  Parameterized2DShape  from './Parameterized2DShape.mjs';\n/**\n * Represents a line segment. A `LineSegment2` is immutable.\n *\n * @example\n * ```ts,runnable,console\n * import {LineSegment2, Vec2} from '@js-draw/math';\n * const l = new LineSegment2(Vec2.of(1, 1), Vec2.of(2, 2));\n * console.log('length: ', l.length);\n * console.log('direction: ', l.direction);\n * console.log('bounding box: ', l.bbox);\n * ```\n */\nexport class LineSegment2 extends Parameterized2DShape {\n    /** Creates a new `LineSegment2` from its endpoints. */\n    constructor(point1, point2) {\n        super();\n        this.point1 = point1;\n        this.point2 = point2;\n        this.bbox = Rect2.bboxOf([point1, point2]);\n        this.direction = point2.minus(point1);\n        this.length = this.direction.magnitude();\n        // Normalize\n        if (this.length > 0) {\n            this.direction = this.direction.times(1 / this.length);\n        }\n    }\n    /**\n     * Returns the smallest line segment that contains all points in `points`, or `null`\n     * if no such line segment exists.\n     *\n     * @example\n     * ```ts,runnable,console\n     * import {LineSegment2, Vec2} from '@js-draw/math';\n     * console.log(LineSegment2.ofSmallestContainingPoints([Vec2.of(1, 0), Vec2.of(0, 1)]));\n     * ```\n     */\n    static ofSmallestContainingPoints(points) {\n        if (points.length <= 1)\n            return null;\n        const sorted = [...points].sort((a, b) => (a.x !== b.x ? a.x - b.x : a.y - b.y));\n        const line = new LineSegment2(sorted[0], sorted[sorted.length - 1]);\n        for (const point of sorted) {\n            if (!line.containsPoint(point)) {\n                return null;\n            }\n        }\n        return line;\n    }\n    // Accessors to make LineSegment2 compatible with bezier-js's\n    // interface\n    /** Alias for `point1`. */\n    get p1() {\n        return this.point1;\n    }\n    /** Alias for `point2`. */\n    get p2() {\n        return this.point2;\n    }\n    get center() {\n        return this.point1.lerp(this.point2, 0.5);\n    }\n    /**\n     * Gets a point a **distance** `t` along this line.\n     *\n     * @deprecated\n     */\n    get(t) {\n        return this.point1.plus(this.direction.times(t));\n    }\n    /**\n     * Returns a point a fraction, `t`, along this line segment.\n     * Thus, `segment.at(0)` returns `segment.p1` and `segment.at(1)` returns\n     * `segment.p2`.\n     *\n     * `t` should be in `[0, 1]`.\n     */\n    at(t) {\n        return this.get(t * this.length);\n    }\n    normalAt(_t) {\n        return this.direction.orthog();\n    }\n    tangentAt(_t) {\n        return this.direction;\n    }\n    splitAt(t) {\n        if (t <= 0 || t >= 1) {\n            return [this];\n        }\n        return [new LineSegment2(this.point1, this.at(t)), new LineSegment2(this.at(t), this.point2)];\n    }\n    /**\n     * Returns the intersection of this with another line segment.\n     *\n     * **WARNING**: The parameter value returned by this method does not range from 0 to 1 and\n     *              is currently a length.\n     *              This will change in a future release.\n     * @deprecated\n     */\n    intersection(other) {\n        // TODO(v2.0.0): Make this return a `t` value from `0` to `1`.\n        // We want x₁(t) = x₂(t) and y₁(t) = y₂(t)\n        // Observe that\n        // x = this.point1.x + this.direction.x · t₁\n        //   = other.point1.x + other.direction.x · t₂\n        // Thus,\n        //  t₁ = (x - this.point1.x) / this.direction.x\n        //     = (y - this.point1.y) / this.direction.y\n        // and\n        //  t₂ = (x - other.point1.x) / other.direction.x\n        // (and similarly for y)\n        //\n        // Letting o₁ₓ = this.point1.x, o₂ₓ = other.point1.x,\n        //         d₁ᵧ = this.direction.y, ...\n        //\n        // We can substitute these into the equations for y:\n        // y = o₁ᵧ + d₁ᵧ · (x - o₁ₓ) / d₁ₓ\n        //   = o₂ᵧ + d₂ᵧ · (x - o₂ₓ) / d₂ₓ\n        // ⇒ o₁ᵧ - o₂ᵧ = d₂ᵧ · (x - o₂ₓ) / d₂ₓ - d₁ᵧ · (x - o₁ₓ) / d₁ₓ\n        //            = (d₂ᵧ/d₂ₓ)(x) - (d₂ᵧ/d₂ₓ)(o₂ₓ) - (d₁ᵧ/d₁ₓ)(x) + (d₁ᵧ/d₁ₓ)(o₁ₓ)\n        //            = (x)(d₂ᵧ/d₂ₓ - d₁ᵧ/d₁ₓ) - (d₂ᵧ/d₂ₓ)(o₂ₓ) + (d₁ᵧ/d₁ₓ)(o₁ₓ)\n        // ⇒ (x)(d₂ᵧ/d₂ₓ - d₁ᵧ/d₁ₓ) = o₁ᵧ - o₂ᵧ + (d₂ᵧ/d₂ₓ)(o₂ₓ) - (d₁ᵧ/d₁ₓ)(o₁ₓ)\n        // ⇒ x = (o₁ᵧ - o₂ᵧ + (d₂ᵧ/d₂ₓ)(o₂ₓ) - (d₁ᵧ/d₁ₓ)(o₁ₓ))/(d₂ᵧ/d₂ₓ - d₁ᵧ/d₁ₓ)\n        //     = (d₁ₓd₂ₓ)(o₁ᵧ - o₂ᵧ + (d₂ᵧ/d₂ₓ)(o₂ₓ) - (d₁ᵧ/d₁ₓ)(o₁ₓ))/(d₂ᵧd₁ₓ - d₁ᵧd₂ₓ)\n        //     = ((o₁ᵧ - o₂ᵧ)((d₁ₓd₂ₓ)) + (d₂ᵧd₁ₓ)(o₂ₓ) - (d₁ᵧd₂ₓ)(o₁ₓ))/(d₂ᵧd₁ₓ - d₁ᵧd₂ₓ)\n        // ⇒ y = o₁ᵧ + d₁ᵧ · (x - o₁ₓ) / d₁ₓ = ...\n        let resultPoint, resultT;\n        // Consider very-near-vertical lines to be vertical --- not doing so can lead to\n        // precision error when dividing by this.direction.x.\n        const small = 4e-13;\n        if (Math.abs(this.direction.x) < small) {\n            // Vertical line: Where does the other have x = this.point1.x?\n            // x = o₁ₓ = o₂ₓ + d₂ₓ · (y - o₂ᵧ) / d₂ᵧ\n            // ⇒ (o₁ₓ - o₂ₓ)(d₂ᵧ/d₂ₓ) + o₂ᵧ = y\n            // Avoid division by zero\n            if (other.direction.x === 0 || this.direction.y === 0) {\n                return null;\n            }\n            const xIntersect = this.point1.x;\n            const yIntersect = ((this.point1.x - other.point1.x) * other.direction.y) / other.direction.x + other.point1.y;\n            resultPoint = Vec2.of(xIntersect, yIntersect);\n            resultT = (yIntersect - this.point1.y) / this.direction.y;\n        }\n        else {\n            // From above,\n            // x = ((o₁ᵧ - o₂ᵧ)(d₁ₓd₂ₓ) + (d₂ᵧd₁ₓ)(o₂ₓ) - (d₁ᵧd₂ₓ)(o₁ₓ))/(d₂ᵧd₁ₓ - d₁ᵧd₂ₓ)\n            const numerator = (this.point1.y - other.point1.y) * this.direction.x * other.direction.x +\n                this.direction.x * other.direction.y * other.point1.x -\n                this.direction.y * other.direction.x * this.point1.x;\n            const denominator = other.direction.y * this.direction.x - this.direction.y * other.direction.x;\n            // Avoid dividing by zero. It means there is no intersection\n            if (denominator === 0) {\n                return null;\n            }\n            const xIntersect = numerator / denominator;\n            const t1 = (xIntersect - this.point1.x) / this.direction.x;\n            const yIntersect = this.point1.y + this.direction.y * t1;\n            resultPoint = Vec2.of(xIntersect, yIntersect);\n            resultT = (xIntersect - this.point1.x) / this.direction.x;\n        }\n        // Ensure the result is in this/the other segment.\n        const resultToP1 = resultPoint.distanceTo(this.point1);\n        const resultToP2 = resultPoint.distanceTo(this.point2);\n        const resultToP3 = resultPoint.distanceTo(other.point1);\n        const resultToP4 = resultPoint.distanceTo(other.point2);\n        if (resultToP1 > this.length ||\n            resultToP2 > this.length ||\n            resultToP3 > other.length ||\n            resultToP4 > other.length) {\n            return null;\n        }\n        return {\n            point: resultPoint,\n            t: resultT,\n        };\n    }\n    intersects(other) {\n        return this.intersection(other) !== null;\n    }\n    argIntersectsLineSegment(lineSegment) {\n        const intersection = this.intersection(lineSegment);\n        if (intersection) {\n            return [intersection.t / this.length];\n        }\n        return [];\n    }\n    /**\n     * Returns the points at which this line segment intersects the\n     * given line segment.\n     *\n     * Note that {@link intersects} returns *whether* this line segment intersects another\n     * line segment. This method, by contrast, returns **the point** at which the intersection\n     * occurs, if such a point exists.\n     */\n    intersectsLineSegment(lineSegment) {\n        const intersection = this.intersection(lineSegment);\n        if (intersection) {\n            return [intersection.point];\n        }\n        return [];\n    }\n    // Returns the closest point on this to [target]\n    closestPointTo(target) {\n        return this.nearestPointTo(target).point;\n    }\n    nearestPointTo(target) {\n        // Distance from P1 along this' direction.\n        const projectedDistFromP1 = target.minus(this.p1).dot(this.direction);\n        const projectedDistFromP2 = this.length - projectedDistFromP1;\n        const projection = this.p1.plus(this.direction.times(projectedDistFromP1));\n        if (projectedDistFromP1 > 0 && projectedDistFromP1 < this.length) {\n            return { point: projection, parameterValue: projectedDistFromP1 / this.length };\n        }\n        if (Math.abs(projectedDistFromP2) < Math.abs(projectedDistFromP1)) {\n            return { point: this.p2, parameterValue: 1 };\n        }\n        else {\n            return { point: this.p1, parameterValue: 0 };\n        }\n    }\n    /**\n     * Returns the distance from this line segment to `target`.\n     *\n     * Because a line segment has no interior, this signed distance is equivalent to\n     * the full distance between `target` and this line segment.\n     */\n    signedDistance(target) {\n        return this.closestPointTo(target).minus(target).magnitude();\n    }\n    /** Returns a copy of this line segment transformed by the given `affineTransfm`. */\n    transformedBy(affineTransfm) {\n        return new LineSegment2(affineTransfm.transformVec2(this.p1), affineTransfm.transformVec2(this.p2));\n    }\n    /** @inheritdoc */\n    getTightBoundingBox() {\n        return this.bbox;\n    }\n    toString() {\n        return `LineSegment(${this.p1.toString()}, ${this.p2.toString()})`;\n    }\n    /**\n     * Returns `true` iff this is equivalent to `other`.\n     *\n     * **Options**:\n     * - `tolerance`: The maximum difference between endpoints. (Default: 0)\n     * - `ignoreDirection`: Allow matching a version of `this` with opposite direction. (Default: `true`)\n     */\n    eq(other, options) {\n        if (!(other instanceof LineSegment2)) {\n            return false;\n        }\n        const tolerance = options?.tolerance;\n        const ignoreDirection = options?.ignoreDirection ?? true;\n        return ((other.p1.eq(this.p1, tolerance) && other.p2.eq(this.p2, tolerance)) ||\n            (ignoreDirection && other.p1.eq(this.p2, tolerance) && other.p2.eq(this.p1, tolerance)));\n    }\n}\nexport default LineSegment2;\n", "import { Bezier } from \"./bezier.js\";\n\n// math-inlining.\nconst { abs, cos, sin, acos, atan2, sqrt, pow } = Math;\n\n// cube root function yielding real roots\nfunction crt(v) {\n  return v < 0 ? -pow(-v, 1 / 3) : pow(v, 1 / 3);\n}\n\n// trig constants\nconst pi = Math.PI,\n  tau = 2 * pi,\n  quart = pi / 2,\n  // float precision significant decimal\n  epsilon = 0.000001,\n  // extremas used in bbox calculation and similar algorithms\n  nMax = Number.MAX_SAFE_INTEGER || 9007199254740991,\n  nMin = Number.MIN_SAFE_INTEGER || -9007199254740991,\n  // a zero coordinate, which is surprisingly useful\n  ZERO = { x: 0, y: 0, z: 0 };\n\n// Bezier utility functions\nconst utils = {\n  // Legendre-Gauss abscissae with n=24 (x_i values, defined at i=n as the roots of the nth order Legendre polynomial Pn(x))\n  Tvalues: [\n    -0.0640568928626056260850430826247450385909,\n    0.0640568928626056260850430826247450385909,\n    -0.1911188674736163091586398207570696318404,\n    0.1911188674736163091586398207570696318404,\n    -0.3150426796961633743867932913198102407864,\n    0.3150426796961633743867932913198102407864,\n    -0.4337935076260451384870842319133497124524,\n    0.4337935076260451384870842319133497124524,\n    -0.5454214713888395356583756172183723700107,\n    0.5454214713888395356583756172183723700107,\n    -0.6480936519369755692524957869107476266696,\n    0.6480936519369755692524957869107476266696,\n    -0.7401241915785543642438281030999784255232,\n    0.7401241915785543642438281030999784255232,\n    -0.8200019859739029219539498726697452080761,\n    0.8200019859739029219539498726697452080761,\n    -0.8864155270044010342131543419821967550873,\n    0.8864155270044010342131543419821967550873,\n    -0.9382745520027327585236490017087214496548,\n    0.9382745520027327585236490017087214496548,\n    -0.9747285559713094981983919930081690617411,\n    0.9747285559713094981983919930081690617411,\n    -0.9951872199970213601799974097007368118745,\n    0.9951872199970213601799974097007368118745,\n  ],\n\n  // Legendre-Gauss weights with n=24 (w_i values, defined by a function linked to in the Bezier primer article)\n  Cvalues: [\n    0.1279381953467521569740561652246953718517,\n    0.1279381953467521569740561652246953718517,\n    0.1258374563468282961213753825111836887264,\n    0.1258374563468282961213753825111836887264,\n    0.121670472927803391204463153476262425607,\n    0.121670472927803391204463153476262425607,\n    0.1155056680537256013533444839067835598622,\n    0.1155056680537256013533444839067835598622,\n    0.1074442701159656347825773424466062227946,\n    0.1074442701159656347825773424466062227946,\n    0.0976186521041138882698806644642471544279,\n    0.0976186521041138882698806644642471544279,\n    0.086190161531953275917185202983742667185,\n    0.086190161531953275917185202983742667185,\n    0.0733464814110803057340336152531165181193,\n    0.0733464814110803057340336152531165181193,\n    0.0592985849154367807463677585001085845412,\n    0.0592985849154367807463677585001085845412,\n    0.0442774388174198061686027482113382288593,\n    0.0442774388174198061686027482113382288593,\n    0.0285313886289336631813078159518782864491,\n    0.0285313886289336631813078159518782864491,\n    0.0123412297999871995468056670700372915759,\n    0.0123412297999871995468056670700372915759,\n  ],\n\n  arcfn: function (t, derivativeFn) {\n    const d = derivativeFn(t);\n    let l = d.x * d.x + d.y * d.y;\n    if (typeof d.z !== \"undefined\") {\n      l += d.z * d.z;\n    }\n    return sqrt(l);\n  },\n\n  compute: function (t, points, _3d) {\n    // shortcuts\n    if (t === 0) {\n      points[0].t = 0;\n      return points[0];\n    }\n\n    const order = points.length - 1;\n\n    if (t === 1) {\n      points[order].t = 1;\n      return points[order];\n    }\n\n    const mt = 1 - t;\n    let p = points;\n\n    // constant?\n    if (order === 0) {\n      points[0].t = t;\n      return points[0];\n    }\n\n    // linear?\n    if (order === 1) {\n      const ret = {\n        x: mt * p[0].x + t * p[1].x,\n        y: mt * p[0].y + t * p[1].y,\n        t: t,\n      };\n      if (_3d) {\n        ret.z = mt * p[0].z + t * p[1].z;\n      }\n      return ret;\n    }\n\n    // quadratic/cubic curve?\n    if (order < 4) {\n      let mt2 = mt * mt,\n        t2 = t * t,\n        a,\n        b,\n        c,\n        d = 0;\n      if (order === 2) {\n        p = [p[0], p[1], p[2], ZERO];\n        a = mt2;\n        b = mt * t * 2;\n        c = t2;\n      } else if (order === 3) {\n        a = mt2 * mt;\n        b = mt2 * t * 3;\n        c = mt * t2 * 3;\n        d = t * t2;\n      }\n      const ret = {\n        x: a * p[0].x + b * p[1].x + c * p[2].x + d * p[3].x,\n        y: a * p[0].y + b * p[1].y + c * p[2].y + d * p[3].y,\n        t: t,\n      };\n      if (_3d) {\n        ret.z = a * p[0].z + b * p[1].z + c * p[2].z + d * p[3].z;\n      }\n      return ret;\n    }\n\n    // higher order curves: use de Casteljau's computation\n    const dCpts = JSON.parse(JSON.stringify(points));\n    while (dCpts.length > 1) {\n      for (let i = 0; i < dCpts.length - 1; i++) {\n        dCpts[i] = {\n          x: dCpts[i].x + (dCpts[i + 1].x - dCpts[i].x) * t,\n          y: dCpts[i].y + (dCpts[i + 1].y - dCpts[i].y) * t,\n        };\n        if (typeof dCpts[i].z !== \"undefined\") {\n          dCpts[i] = dCpts[i].z + (dCpts[i + 1].z - dCpts[i].z) * t;\n        }\n      }\n      dCpts.splice(dCpts.length - 1, 1);\n    }\n    dCpts[0].t = t;\n    return dCpts[0];\n  },\n\n  computeWithRatios: function (t, points, ratios, _3d) {\n    const mt = 1 - t,\n      r = ratios,\n      p = points;\n\n    let f1 = r[0],\n      f2 = r[1],\n      f3 = r[2],\n      f4 = r[3],\n      d;\n\n    // spec for linear\n    f1 *= mt;\n    f2 *= t;\n\n    if (p.length === 2) {\n      d = f1 + f2;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z) / d,\n        t: t,\n      };\n    }\n\n    // upgrade to quadratic\n    f1 *= mt;\n    f2 *= 2 * mt;\n    f3 *= t * t;\n\n    if (p.length === 3) {\n      d = f1 + f2 + f3;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y) / d,\n        z: !_3d ? false : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z) / d,\n        t: t,\n      };\n    }\n\n    // upgrade to cubic\n    f1 *= mt;\n    f2 *= 1.5 * mt;\n    f3 *= 3 * mt;\n    f4 *= t * t * t;\n\n    if (p.length === 4) {\n      d = f1 + f2 + f3 + f4;\n      return {\n        x: (f1 * p[0].x + f2 * p[1].x + f3 * p[2].x + f4 * p[3].x) / d,\n        y: (f1 * p[0].y + f2 * p[1].y + f3 * p[2].y + f4 * p[3].y) / d,\n        z: !_3d\n          ? false\n          : (f1 * p[0].z + f2 * p[1].z + f3 * p[2].z + f4 * p[3].z) / d,\n        t: t,\n      };\n    }\n  },\n\n  derive: function (points, _3d) {\n    const dpoints = [];\n    for (let p = points, d = p.length, c = d - 1; d > 1; d--, c--) {\n      const list = [];\n      for (let j = 0, dpt; j < c; j++) {\n        dpt = {\n          x: c * (p[j + 1].x - p[j].x),\n          y: c * (p[j + 1].y - p[j].y),\n        };\n        if (_3d) {\n          dpt.z = c * (p[j + 1].z - p[j].z);\n        }\n        list.push(dpt);\n      }\n      dpoints.push(list);\n      p = list;\n    }\n    return dpoints;\n  },\n\n  between: function (v, m, M) {\n    return (\n      (m <= v && v <= M) ||\n      utils.approximately(v, m) ||\n      utils.approximately(v, M)\n    );\n  },\n\n  approximately: function (a, b, precision) {\n    return abs(a - b) <= (precision || epsilon);\n  },\n\n  length: function (derivativeFn) {\n    const z = 0.5,\n      len = utils.Tvalues.length;\n\n    let sum = 0;\n\n    for (let i = 0, t; i < len; i++) {\n      t = z * utils.Tvalues[i] + z;\n      sum += utils.Cvalues[i] * utils.arcfn(t, derivativeFn);\n    }\n    return z * sum;\n  },\n\n  map: function (v, ds, de, ts, te) {\n    const d1 = de - ds,\n      d2 = te - ts,\n      v2 = v - ds,\n      r = v2 / d1;\n    return ts + d2 * r;\n  },\n\n  lerp: function (r, v1, v2) {\n    const ret = {\n      x: v1.x + r * (v2.x - v1.x),\n      y: v1.y + r * (v2.y - v1.y),\n    };\n    if (v1.z !== undefined && v2.z !== undefined) {\n      ret.z = v1.z + r * (v2.z - v1.z);\n    }\n    return ret;\n  },\n\n  pointToString: function (p) {\n    let s = p.x + \"/\" + p.y;\n    if (typeof p.z !== \"undefined\") {\n      s += \"/\" + p.z;\n    }\n    return s;\n  },\n\n  pointsToString: function (points) {\n    return \"[\" + points.map(utils.pointToString).join(\", \") + \"]\";\n  },\n\n  copy: function (obj) {\n    return JSON.parse(JSON.stringify(obj));\n  },\n\n  angle: function (o, v1, v2) {\n    const dx1 = v1.x - o.x,\n      dy1 = v1.y - o.y,\n      dx2 = v2.x - o.x,\n      dy2 = v2.y - o.y,\n      cross = dx1 * dy2 - dy1 * dx2,\n      dot = dx1 * dx2 + dy1 * dy2;\n    return atan2(cross, dot);\n  },\n\n  // round as string, to avoid rounding errors\n  round: function (v, d) {\n    const s = \"\" + v;\n    const pos = s.indexOf(\".\");\n    return parseFloat(s.substring(0, pos + 1 + d));\n  },\n\n  dist: function (p1, p2) {\n    const dx = p1.x - p2.x,\n      dy = p1.y - p2.y;\n    return sqrt(dx * dx + dy * dy);\n  },\n\n  closest: function (LUT, point) {\n    let mdist = pow(2, 63),\n      mpos,\n      d;\n    LUT.forEach(function (p, idx) {\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        mpos = idx;\n      }\n    });\n    return { mdist: mdist, mpos: mpos };\n  },\n\n  abcratio: function (t, n) {\n    // see ratio(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    const bottom = pow(t, n) + pow(1 - t, n),\n      top = bottom - 1;\n    return abs(top / bottom);\n  },\n\n  projectionratio: function (t, n) {\n    // see u(t) note on http://pomax.github.io/bezierinfo/#abc\n    if (n !== 2 && n !== 3) {\n      return false;\n    }\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    } else if (t === 0 || t === 1) {\n      return t;\n    }\n    const top = pow(1 - t, n),\n      bottom = pow(t, n) + top;\n    return top / bottom;\n  },\n\n  lli8: function (x1, y1, x2, y2, x3, y3, x4, y4) {\n    const nx =\n        (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n      d = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    if (d == 0) {\n      return false;\n    }\n    return { x: nx / d, y: ny / d };\n  },\n\n  lli4: function (p1, p2, p3, p4) {\n    const x1 = p1.x,\n      y1 = p1.y,\n      x2 = p2.x,\n      y2 = p2.y,\n      x3 = p3.x,\n      y3 = p3.y,\n      x4 = p4.x,\n      y4 = p4.y;\n    return utils.lli8(x1, y1, x2, y2, x3, y3, x4, y4);\n  },\n\n  lli: function (v1, v2) {\n    return utils.lli4(v1, v1.c, v2, v2.c);\n  },\n\n  makeline: function (p1, p2) {\n    return new Bezier(\n      p1.x,\n      p1.y,\n      (p1.x + p2.x) / 2,\n      (p1.y + p2.y) / 2,\n      p2.x,\n      p2.y\n    );\n  },\n\n  findbbox: function (sections) {\n    let mx = nMax,\n      my = nMax,\n      MX = nMin,\n      MY = nMin;\n    sections.forEach(function (s) {\n      const bbox = s.bbox();\n      if (mx > bbox.x.min) mx = bbox.x.min;\n      if (my > bbox.y.min) my = bbox.y.min;\n      if (MX < bbox.x.max) MX = bbox.x.max;\n      if (MY < bbox.y.max) MY = bbox.y.max;\n    });\n    return {\n      x: { min: mx, mid: (mx + MX) / 2, max: MX, size: MX - mx },\n      y: { min: my, mid: (my + MY) / 2, max: MY, size: MY - my },\n    };\n  },\n\n  shapeintersections: function (\n    s1,\n    bbox1,\n    s2,\n    bbox2,\n    curveIntersectionThreshold\n  ) {\n    if (!utils.bboxoverlap(bbox1, bbox2)) return [];\n    const intersections = [];\n    const a1 = [s1.startcap, s1.forward, s1.back, s1.endcap];\n    const a2 = [s2.startcap, s2.forward, s2.back, s2.endcap];\n    a1.forEach(function (l1) {\n      if (l1.virtual) return;\n      a2.forEach(function (l2) {\n        if (l2.virtual) return;\n        const iss = l1.intersects(l2, curveIntersectionThreshold);\n        if (iss.length > 0) {\n          iss.c1 = l1;\n          iss.c2 = l2;\n          iss.s1 = s1;\n          iss.s2 = s2;\n          intersections.push(iss);\n        }\n      });\n    });\n    return intersections;\n  },\n\n  makeshape: function (forward, back, curveIntersectionThreshold) {\n    const bpl = back.points.length;\n    const fpl = forward.points.length;\n    const start = utils.makeline(back.points[bpl - 1], forward.points[0]);\n    const end = utils.makeline(forward.points[fpl - 1], back.points[0]);\n    const shape = {\n      startcap: start,\n      forward: forward,\n      back: back,\n      endcap: end,\n      bbox: utils.findbbox([start, forward, back, end]),\n    };\n    shape.intersections = function (s2) {\n      return utils.shapeintersections(\n        shape,\n        shape.bbox,\n        s2,\n        s2.bbox,\n        curveIntersectionThreshold\n      );\n    };\n    return shape;\n  },\n\n  getminmax: function (curve, d, list) {\n    if (!list) return { min: 0, max: 0 };\n    let min = nMax,\n      max = nMin,\n      t,\n      c;\n    if (list.indexOf(0) === -1) {\n      list = [0].concat(list);\n    }\n    if (list.indexOf(1) === -1) {\n      list.push(1);\n    }\n    for (let i = 0, len = list.length; i < len; i++) {\n      t = list[i];\n      c = curve.get(t);\n      if (c[d] < min) {\n        min = c[d];\n      }\n      if (c[d] > max) {\n        max = c[d];\n      }\n    }\n    return { min: min, mid: (min + max) / 2, max: max, size: max - min };\n  },\n\n  align: function (points, line) {\n    const tx = line.p1.x,\n      ty = line.p1.y,\n      a = -atan2(line.p2.y - ty, line.p2.x - tx),\n      d = function (v) {\n        return {\n          x: (v.x - tx) * cos(a) - (v.y - ty) * sin(a),\n          y: (v.x - tx) * sin(a) + (v.y - ty) * cos(a),\n        };\n      };\n    return points.map(d);\n  },\n\n  roots: function (points, line) {\n    line = line || { p1: { x: 0, y: 0 }, p2: { x: 1, y: 0 } };\n\n    const order = points.length - 1;\n    const aligned = utils.align(points, line);\n    const reduce = function (t) {\n      return 0 <= t && t <= 1;\n    };\n\n    if (order === 2) {\n      const a = aligned[0].y,\n        b = aligned[1].y,\n        c = aligned[2].y,\n        d = a - 2 * b + c;\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n          m2 = -a + b,\n          v1 = -(m1 + m2) / d,\n          v2 = -(-m1 + m2) / d;\n        return [v1, v2].filter(reduce);\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * b - 2 * c)].filter(reduce);\n      }\n      return [];\n    }\n\n    // see http://www.trans4mind.com/personal_development/mathematics/polynomials/cubicAlgebra.htm\n    const pa = aligned[0].y,\n      pb = aligned[1].y,\n      pc = aligned[2].y,\n      pd = aligned[3].y;\n\n    let d = -pa + 3 * pb - 3 * pc + pd,\n      a = 3 * pa - 6 * pb + 3 * pc,\n      b = -3 * pa + 3 * pb,\n      c = pa;\n\n    if (utils.approximately(d, 0)) {\n      // this is not a cubic curve.\n      if (utils.approximately(a, 0)) {\n        // in fact, this is not a quadratic curve either.\n        if (utils.approximately(b, 0)) {\n          // in fact in fact, there are no solutions.\n          return [];\n        }\n        // linear solution:\n        return [-c / b].filter(reduce);\n      }\n      // quadratic solution:\n      const q = sqrt(b * b - 4 * a * c),\n        a2 = 2 * a;\n      return [(q - b) / a2, (-b - q) / a2].filter(reduce);\n    }\n\n    // at this point, we know we need a cubic solution:\n\n    a /= d;\n    b /= d;\n    c /= d;\n\n    const p = (3 * b - a * a) / 3,\n      p3 = p / 3,\n      q = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n      q2 = q / 2,\n      discriminant = q2 * q2 + p3 * p3 * p3;\n\n    let u1, v1, x1, x2, x3;\n    if (discriminant < 0) {\n      const mp3 = -p / 3,\n        mp33 = mp3 * mp3 * mp3,\n        r = sqrt(mp33),\n        t = -q / (2 * r),\n        cosphi = t < -1 ? -1 : t > 1 ? 1 : t,\n        phi = acos(cosphi),\n        crtr = crt(r),\n        t1 = 2 * crtr;\n      x1 = t1 * cos(phi / 3) - a / 3;\n      x2 = t1 * cos((phi + tau) / 3) - a / 3;\n      x3 = t1 * cos((phi + 2 * tau) / 3) - a / 3;\n      return [x1, x2, x3].filter(reduce);\n    } else if (discriminant === 0) {\n      u1 = q2 < 0 ? crt(-q2) : -crt(q2);\n      x1 = 2 * u1 - a / 3;\n      x2 = -u1 - a / 3;\n      return [x1, x2].filter(reduce);\n    } else {\n      const sd = sqrt(discriminant);\n      u1 = crt(-q2 + sd);\n      v1 = crt(q2 + sd);\n      return [u1 - v1 - a / 3].filter(reduce);\n    }\n  },\n\n  droots: function (p) {\n    // quadratic roots are easy\n    if (p.length === 3) {\n      const a = p[0],\n        b = p[1],\n        c = p[2],\n        d = a - 2 * b + c;\n      if (d !== 0) {\n        const m1 = -sqrt(b * b - a * c),\n          m2 = -a + b,\n          v1 = -(m1 + m2) / d,\n          v2 = -(-m1 + m2) / d;\n        return [v1, v2];\n      } else if (b !== c && d === 0) {\n        return [(2 * b - c) / (2 * (b - c))];\n      }\n      return [];\n    }\n\n    // linear roots are even easier\n    if (p.length === 2) {\n      const a = p[0],\n        b = p[1];\n      if (a !== b) {\n        return [a / (a - b)];\n      }\n      return [];\n    }\n\n    return [];\n  },\n\n  curvature: function (t, d1, d2, _3d, kOnly) {\n    let num,\n      dnm,\n      adk,\n      dk,\n      k = 0,\n      r = 0;\n\n    //\n    // We're using the following formula for curvature:\n    //\n    //              x'y\" - y'x\"\n    //   k(t) = ------------------\n    //           (x'² + y'²)^(3/2)\n    //\n    // from https://en.wikipedia.org/wiki/Radius_of_curvature#Definition\n    //\n    // With it corresponding 3D counterpart:\n    //\n    //          sqrt( (y'z\" - y\"z')² + (z'x\" - z\"x')² + (x'y\" - x\"y')²)\n    //   k(t) = -------------------------------------------------------\n    //                     (x'² + y'² + z'²)^(3/2)\n    //\n\n    const d = utils.compute(t, d1);\n    const dd = utils.compute(t, d2);\n    const qdsum = d.x * d.x + d.y * d.y;\n\n    if (_3d) {\n      num = sqrt(\n        pow(d.y * dd.z - dd.y * d.z, 2) +\n          pow(d.z * dd.x - dd.z * d.x, 2) +\n          pow(d.x * dd.y - dd.x * d.y, 2)\n      );\n      dnm = pow(qdsum + d.z * d.z, 3 / 2);\n    } else {\n      num = d.x * dd.y - d.y * dd.x;\n      dnm = pow(qdsum, 3 / 2);\n    }\n\n    if (num === 0 || dnm === 0) {\n      return { k: 0, r: 0 };\n    }\n\n    k = num / dnm;\n    r = dnm / num;\n\n    // We're also computing the derivative of kappa, because\n    // there is value in knowing the rate of change for the\n    // curvature along the curve. And we're just going to\n    // ballpark it based on an epsilon.\n    if (!kOnly) {\n      // compute k'(t) based on the interval before, and after it,\n      // to at least try to not introduce forward/backward pass bias.\n      const pk = utils.curvature(t - 0.001, d1, d2, _3d, true).k;\n      const nk = utils.curvature(t + 0.001, d1, d2, _3d, true).k;\n      dk = (nk - k + (k - pk)) / 2;\n      adk = (abs(nk - k) + abs(k - pk)) / 2;\n    }\n\n    return { k: k, r: r, dk: dk, adk: adk };\n  },\n\n  inflections: function (points) {\n    if (points.length < 4) return [];\n\n    // FIXME: TODO: add in inflection abstraction for quartic+ curves?\n\n    const p = utils.align(points, { p1: points[0], p2: points.slice(-1)[0] }),\n      a = p[2].x * p[1].y,\n      b = p[3].x * p[1].y,\n      c = p[1].x * p[2].y,\n      d = p[3].x * p[2].y,\n      v1 = 18 * (-3 * a + 2 * b + 3 * c - d),\n      v2 = 18 * (3 * a - b - 3 * c),\n      v3 = 18 * (c - a);\n\n    if (utils.approximately(v1, 0)) {\n      if (!utils.approximately(v2, 0)) {\n        let t = -v3 / v2;\n        if (0 <= t && t <= 1) return [t];\n      }\n      return [];\n    }\n\n    const d2 = 2 * v1;\n\n    if (utils.approximately(d2, 0)) return [];\n\n    const trm = v2 * v2 - 4 * v1 * v3;\n\n    if (trm < 0) return [];\n\n    const sq = Math.sqrt(trm);\n\n    return [(sq - v2) / d2, -(v2 + sq) / d2].filter(function (r) {\n      return 0 <= r && r <= 1;\n    });\n  },\n\n  bboxoverlap: function (b1, b2) {\n    const dims = [\"x\", \"y\"],\n      len = dims.length;\n\n    for (let i = 0, dim, l, t, d; i < len; i++) {\n      dim = dims[i];\n      l = b1[dim].mid;\n      t = b2[dim].mid;\n      d = (b1[dim].size + b2[dim].size) / 2;\n      if (abs(l - t) >= d) return false;\n    }\n    return true;\n  },\n\n  expandbox: function (bbox, _bbox) {\n    if (_bbox.x.min < bbox.x.min) {\n      bbox.x.min = _bbox.x.min;\n    }\n    if (_bbox.y.min < bbox.y.min) {\n      bbox.y.min = _bbox.y.min;\n    }\n    if (_bbox.z && _bbox.z.min < bbox.z.min) {\n      bbox.z.min = _bbox.z.min;\n    }\n    if (_bbox.x.max > bbox.x.max) {\n      bbox.x.max = _bbox.x.max;\n    }\n    if (_bbox.y.max > bbox.y.max) {\n      bbox.y.max = _bbox.y.max;\n    }\n    if (_bbox.z && _bbox.z.max > bbox.z.max) {\n      bbox.z.max = _bbox.z.max;\n    }\n    bbox.x.mid = (bbox.x.min + bbox.x.max) / 2;\n    bbox.y.mid = (bbox.y.min + bbox.y.max) / 2;\n    if (bbox.z) {\n      bbox.z.mid = (bbox.z.min + bbox.z.max) / 2;\n    }\n    bbox.x.size = bbox.x.max - bbox.x.min;\n    bbox.y.size = bbox.y.max - bbox.y.min;\n    if (bbox.z) {\n      bbox.z.size = bbox.z.max - bbox.z.min;\n    }\n  },\n\n  pairiteration: function (c1, c2, curveIntersectionThreshold) {\n    const c1b = c1.bbox(),\n      c2b = c2.bbox(),\n      r = 100000,\n      threshold = curveIntersectionThreshold || 0.5;\n\n    if (\n      c1b.x.size + c1b.y.size < threshold &&\n      c2b.x.size + c2b.y.size < threshold\n    ) {\n      return [\n        (((r * (c1._t1 + c1._t2)) / 2) | 0) / r +\n          \"/\" +\n          (((r * (c2._t1 + c2._t2)) / 2) | 0) / r,\n      ];\n    }\n\n    let cc1 = c1.split(0.5),\n      cc2 = c2.split(0.5),\n      pairs = [\n        { left: cc1.left, right: cc2.left },\n        { left: cc1.left, right: cc2.right },\n        { left: cc1.right, right: cc2.right },\n        { left: cc1.right, right: cc2.left },\n      ];\n\n    pairs = pairs.filter(function (pair) {\n      return utils.bboxoverlap(pair.left.bbox(), pair.right.bbox());\n    });\n\n    let results = [];\n\n    if (pairs.length === 0) return results;\n\n    pairs.forEach(function (pair) {\n      results = results.concat(\n        utils.pairiteration(pair.left, pair.right, threshold)\n      );\n    });\n\n    results = results.filter(function (v, i) {\n      return results.indexOf(v) === i;\n    });\n\n    return results;\n  },\n\n  getccenter: function (p1, p2, p3) {\n    const dx1 = p2.x - p1.x,\n      dy1 = p2.y - p1.y,\n      dx2 = p3.x - p2.x,\n      dy2 = p3.y - p2.y,\n      dx1p = dx1 * cos(quart) - dy1 * sin(quart),\n      dy1p = dx1 * sin(quart) + dy1 * cos(quart),\n      dx2p = dx2 * cos(quart) - dy2 * sin(quart),\n      dy2p = dx2 * sin(quart) + dy2 * cos(quart),\n      // chord midpoints\n      mx1 = (p1.x + p2.x) / 2,\n      my1 = (p1.y + p2.y) / 2,\n      mx2 = (p2.x + p3.x) / 2,\n      my2 = (p2.y + p3.y) / 2,\n      // midpoint offsets\n      mx1n = mx1 + dx1p,\n      my1n = my1 + dy1p,\n      mx2n = mx2 + dx2p,\n      my2n = my2 + dy2p,\n      // intersection of these lines:\n      arc = utils.lli8(mx1, my1, mx1n, my1n, mx2, my2, mx2n, my2n),\n      r = utils.dist(arc, p1);\n\n    // arc start/end values, over mid point:\n    let s = atan2(p1.y - arc.y, p1.x - arc.x),\n      m = atan2(p2.y - arc.y, p2.x - arc.x),\n      e = atan2(p3.y - arc.y, p3.x - arc.x),\n      _;\n\n    // determine arc direction (cw/ccw correction)\n    if (s < e) {\n      // if s<m<e, arc(s, e)\n      // if m<s<e, arc(e, s + tau)\n      // if s<e<m, arc(e, s + tau)\n      if (s > m || m > e) {\n        s += tau;\n      }\n      if (s > e) {\n        _ = e;\n        e = s;\n        s = _;\n      }\n    } else {\n      // if e<m<s, arc(e, s)\n      // if m<e<s, arc(s, e + tau)\n      // if e<s<m, arc(s, e + tau)\n      if (e < m && m < s) {\n        _ = e;\n        e = s;\n        s = _;\n      } else {\n        e += tau;\n      }\n    }\n    // assign and done.\n    arc.s = s;\n    arc.e = e;\n    arc.r = r;\n    return arc;\n  },\n\n  numberSort: function (a, b) {\n    return a - b;\n  },\n};\n\nexport { utils };\n", "import { utils } from \"./utils.js\";\n\n/**\n * Poly Bezier\n * @param {[type]} curves [description]\n */\nclass PolyBezier {\n  constructor(curves) {\n    this.curves = [];\n    this._3d = false;\n    if (!!curves) {\n      this.curves = curves;\n      this._3d = this.curves[0]._3d;\n    }\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return (\n      \"[\" +\n      this.curves\n        .map(function (curve) {\n          return utils.pointsToString(curve.points);\n        })\n        .join(\", \") +\n      \"]\"\n    );\n  }\n\n  addCurve(curve) {\n    this.curves.push(curve);\n    this._3d = this._3d || curve._3d;\n  }\n\n  length() {\n    return this.curves\n      .map(function (v) {\n        return v.length();\n      })\n      .reduce(function (a, b) {\n        return a + b;\n      });\n  }\n\n  curve(idx) {\n    return this.curves[idx];\n  }\n\n  bbox() {\n    const c = this.curves;\n    var bbox = c[0].bbox();\n    for (var i = 1; i < c.length; i++) {\n      utils.expandbox(bbox, c[i].bbox());\n    }\n    return bbox;\n  }\n\n  offset(d) {\n    const offset = [];\n    this.curves.forEach(function (v) {\n      offset.push(...v.offset(d));\n    });\n    return new PolyBezier(offset);\n  }\n}\n\nexport { PolyBezier };\n", "/**\n  A javascript Bezier curve library by Pomax.\n\n  Based on http://pomax.github.io/bezierinfo\n\n  This code is MIT licensed.\n**/\n\nimport { utils } from \"./utils.js\";\nimport { PolyBezier } from \"./poly-bezier.js\";\n\n// math-inlining.\nconst { abs, min, max, cos, sin, acos, sqrt } = Math;\nconst pi = Math.PI;\n// a zero coordinate, which is surprisingly useful\nconst ZERO = { x: 0, y: 0, z: 0 };\n\n/**\n * Bezier curve constructor.\n *\n * ...docs pending...\n */\nclass Bezier {\n  constructor(coords) {\n    let args =\n      coords && coords.forEach ? coords : Array.from(arguments).slice();\n    let coordlen = false;\n\n    if (typeof args[0] === \"object\") {\n      coordlen = args.length;\n      const newargs = [];\n      args.forEach(function (point) {\n        [\"x\", \"y\", \"z\"].forEach(function (d) {\n          if (typeof point[d] !== \"undefined\") {\n            newargs.push(point[d]);\n          }\n        });\n      });\n      args = newargs;\n    }\n\n    let higher = false;\n    const len = args.length;\n\n    if (coordlen) {\n      if (coordlen > 4) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n        higher = true;\n      }\n    } else {\n      if (len !== 6 && len !== 8 && len !== 9 && len !== 12) {\n        if (arguments.length !== 1) {\n          throw new Error(\n            \"Only new Bezier(point[]) is accepted for 4th and higher order curves\"\n          );\n        }\n      }\n    }\n\n    const _3d = (this._3d =\n      (!higher && (len === 9 || len === 12)) ||\n      (coords && coords[0] && typeof coords[0].z !== \"undefined\"));\n\n    const points = (this.points = []);\n    for (let idx = 0, step = _3d ? 3 : 2; idx < len; idx += step) {\n      var point = {\n        x: args[idx],\n        y: args[idx + 1],\n      };\n      if (_3d) {\n        point.z = args[idx + 2];\n      }\n      points.push(point);\n    }\n    const order = (this.order = points.length - 1);\n\n    const dims = (this.dims = [\"x\", \"y\"]);\n    if (_3d) dims.push(\"z\");\n    this.dimlen = dims.length;\n\n    // is this curve, practically speaking, a straight line?\n    const aligned = utils.align(points, { p1: points[0], p2: points[order] });\n    const baselength = utils.dist(points[0], points[order]);\n    this._linear = aligned.reduce((t, p) => t + abs(p.y), 0) < baselength / 50;\n\n    this._lut = [];\n    this._t1 = 0;\n    this._t2 = 1;\n    this.update();\n  }\n\n  static quadraticFromPoints(p1, p2, p3, t) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    // shortcuts, although they're really dumb\n    if (t === 0) {\n      return new Bezier(p2, p2, p3);\n    }\n    if (t === 1) {\n      return new Bezier(p1, p2, p2);\n    }\n    // real fitting.\n    const abc = Bezier.getABC(2, p1, p2, p3, t);\n    return new Bezier(p1, abc.A, p3);\n  }\n\n  static cubicFromPoints(S, B, E, t, d1) {\n    if (typeof t === \"undefined\") {\n      t = 0.5;\n    }\n    const abc = Bezier.getABC(3, S, B, E, t);\n    if (typeof d1 === \"undefined\") {\n      d1 = utils.dist(B, abc.C);\n    }\n    const d2 = (d1 * (1 - t)) / t;\n\n    const selen = utils.dist(S, E),\n      lx = (E.x - S.x) / selen,\n      ly = (E.y - S.y) / selen,\n      bx1 = d1 * lx,\n      by1 = d1 * ly,\n      bx2 = d2 * lx,\n      by2 = d2 * ly;\n    // derivation of new hull coordinates\n    const e1 = { x: B.x - bx1, y: B.y - by1 },\n      e2 = { x: B.x + bx2, y: B.y + by2 },\n      A = abc.A,\n      v1 = { x: A.x + (e1.x - A.x) / (1 - t), y: A.y + (e1.y - A.y) / (1 - t) },\n      v2 = { x: A.x + (e2.x - A.x) / t, y: A.y + (e2.y - A.y) / t },\n      nc1 = { x: S.x + (v1.x - S.x) / t, y: S.y + (v1.y - S.y) / t },\n      nc2 = {\n        x: E.x + (v2.x - E.x) / (1 - t),\n        y: E.y + (v2.y - E.y) / (1 - t),\n      };\n    // ...done\n    return new Bezier(S, nc1, nc2, E);\n  }\n\n  static getUtils() {\n    return utils;\n  }\n\n  getUtils() {\n    return Bezier.getUtils();\n  }\n\n  static get PolyBezier() {\n    return PolyBezier;\n  }\n\n  valueOf() {\n    return this.toString();\n  }\n\n  toString() {\n    return utils.pointsToString(this.points);\n  }\n\n  toSVG() {\n    if (this._3d) return false;\n    const p = this.points,\n      x = p[0].x,\n      y = p[0].y,\n      s = [\"M\", x, y, this.order === 2 ? \"Q\" : \"C\"];\n    for (let i = 1, last = p.length; i < last; i++) {\n      s.push(p[i].x);\n      s.push(p[i].y);\n    }\n    return s.join(\" \");\n  }\n\n  setRatios(ratios) {\n    if (ratios.length !== this.points.length) {\n      throw new Error(\"incorrect number of ratio values\");\n    }\n    this.ratios = ratios;\n    this._lut = []; //  invalidate any precomputed LUT\n  }\n\n  verify() {\n    const print = this.coordDigest();\n    if (print !== this._print) {\n      this._print = print;\n      this.update();\n    }\n  }\n\n  coordDigest() {\n    return this.points\n      .map(function (c, pos) {\n        return \"\" + pos + c.x + c.y + (c.z ? c.z : 0);\n      })\n      .join(\"\");\n  }\n\n  update() {\n    // invalidate any precomputed LUT\n    this._lut = [];\n    this.dpoints = utils.derive(this.points, this._3d);\n    this.computedirection();\n  }\n\n  computedirection() {\n    const points = this.points;\n    const angle = utils.angle(points[0], points[this.order], points[1]);\n    this.clockwise = angle > 0;\n  }\n\n  length() {\n    return utils.length(this.derivative.bind(this));\n  }\n\n  static getABC(order = 2, S, B, E, t = 0.5) {\n    const u = utils.projectionratio(t, order),\n      um = 1 - u,\n      C = {\n        x: u * S.x + um * E.x,\n        y: u * S.y + um * E.y,\n      },\n      s = utils.abcratio(t, order),\n      A = {\n        x: B.x + (B.x - C.x) / s,\n        y: B.y + (B.y - C.y) / s,\n      };\n    return { A, B, C, S, E };\n  }\n\n  getABC(t, B) {\n    B = B || this.get(t);\n    let S = this.points[0];\n    let E = this.points[this.order];\n    return Bezier.getABC(this.order, S, B, E, t);\n  }\n\n  getLUT(steps) {\n    this.verify();\n    steps = steps || 100;\n    if (this._lut.length === steps + 1) {\n      return this._lut;\n    }\n    this._lut = [];\n    // n steps means n+1 points\n    steps++;\n    this._lut = [];\n    for (let i = 0, p, t; i < steps; i++) {\n      t = i / (steps - 1);\n      p = this.compute(t);\n      p.t = t;\n      this._lut.push(p);\n    }\n    return this._lut;\n  }\n\n  on(point, error) {\n    error = error || 5;\n    const lut = this.getLUT(),\n      hits = [];\n    for (let i = 0, c, t = 0; i < lut.length; i++) {\n      c = lut[i];\n      if (utils.dist(c, point) < error) {\n        hits.push(c);\n        t += i / lut.length;\n      }\n    }\n    if (!hits.length) return false;\n    return (t /= hits.length);\n  }\n\n  project(point) {\n    // step 1: coarse check\n    const LUT = this.getLUT(),\n      l = LUT.length - 1,\n      closest = utils.closest(LUT, point),\n      mpos = closest.mpos,\n      t1 = (mpos - 1) / l,\n      t2 = (mpos + 1) / l,\n      step = 0.1 / l;\n\n    // step 2: fine check\n    let mdist = closest.mdist,\n      t = t1,\n      ft = t,\n      p;\n    mdist += 1;\n    for (let d; t < t2 + step; t += step) {\n      p = this.compute(t);\n      d = utils.dist(point, p);\n      if (d < mdist) {\n        mdist = d;\n        ft = t;\n      }\n    }\n    ft = ft < 0 ? 0 : ft > 1 ? 1 : ft;\n    p = this.compute(ft);\n    p.t = ft;\n    p.d = mdist;\n    return p;\n  }\n\n  get(t) {\n    return this.compute(t);\n  }\n\n  point(idx) {\n    return this.points[idx];\n  }\n\n  compute(t) {\n    if (this.ratios) {\n      return utils.computeWithRatios(t, this.points, this.ratios, this._3d);\n    }\n    return utils.compute(t, this.points, this._3d, this.ratios);\n  }\n\n  raise() {\n    const p = this.points,\n      np = [p[0]],\n      k = p.length;\n    for (let i = 1, pi, pim; i < k; i++) {\n      pi = p[i];\n      pim = p[i - 1];\n      np[i] = {\n        x: ((k - i) / k) * pi.x + (i / k) * pim.x,\n        y: ((k - i) / k) * pi.y + (i / k) * pim.y,\n      };\n    }\n    np[k] = p[k - 1];\n    return new Bezier(np);\n  }\n\n  derivative(t) {\n    return utils.compute(t, this.dpoints[0], this._3d);\n  }\n\n  dderivative(t) {\n    return utils.compute(t, this.dpoints[1], this._3d);\n  }\n\n  align() {\n    let p = this.points;\n    return new Bezier(utils.align(p, { p1: p[0], p2: p[p.length - 1] }));\n  }\n\n  curvature(t) {\n    return utils.curvature(t, this.dpoints[0], this.dpoints[1], this._3d);\n  }\n\n  inflections() {\n    return utils.inflections(this.points);\n  }\n\n  normal(t) {\n    return this._3d ? this.__normal3(t) : this.__normal2(t);\n  }\n\n  __normal2(t) {\n    const d = this.derivative(t);\n    const q = sqrt(d.x * d.x + d.y * d.y);\n    return { t, x: -d.y / q, y: d.x / q };\n  }\n\n  __normal3(t) {\n    // see http://stackoverflow.com/questions/25453159\n    const r1 = this.derivative(t),\n      r2 = this.derivative(t + 0.01),\n      q1 = sqrt(r1.x * r1.x + r1.y * r1.y + r1.z * r1.z),\n      q2 = sqrt(r2.x * r2.x + r2.y * r2.y + r2.z * r2.z);\n    r1.x /= q1;\n    r1.y /= q1;\n    r1.z /= q1;\n    r2.x /= q2;\n    r2.y /= q2;\n    r2.z /= q2;\n    // cross product\n    const c = {\n      x: r2.y * r1.z - r2.z * r1.y,\n      y: r2.z * r1.x - r2.x * r1.z,\n      z: r2.x * r1.y - r2.y * r1.x,\n    };\n    const m = sqrt(c.x * c.x + c.y * c.y + c.z * c.z);\n    c.x /= m;\n    c.y /= m;\n    c.z /= m;\n    // rotation matrix\n    const R = [\n      c.x * c.x,\n      c.x * c.y - c.z,\n      c.x * c.z + c.y,\n      c.x * c.y + c.z,\n      c.y * c.y,\n      c.y * c.z - c.x,\n      c.x * c.z - c.y,\n      c.y * c.z + c.x,\n      c.z * c.z,\n    ];\n    // normal vector:\n    const n = {\n      t,\n      x: R[0] * r1.x + R[1] * r1.y + R[2] * r1.z,\n      y: R[3] * r1.x + R[4] * r1.y + R[5] * r1.z,\n      z: R[6] * r1.x + R[7] * r1.y + R[8] * r1.z,\n    };\n    return n;\n  }\n\n  hull(t) {\n    let p = this.points,\n      _p = [],\n      q = [],\n      idx = 0;\n    q[idx++] = p[0];\n    q[idx++] = p[1];\n    q[idx++] = p[2];\n    if (this.order === 3) {\n      q[idx++] = p[3];\n    }\n    // we lerp between all points at each iteration, until we have 1 point left.\n    while (p.length > 1) {\n      _p = [];\n      for (let i = 0, pt, l = p.length - 1; i < l; i++) {\n        pt = utils.lerp(t, p[i], p[i + 1]);\n        q[idx++] = pt;\n        _p.push(pt);\n      }\n      p = _p;\n    }\n    return q;\n  }\n\n  split(t1, t2) {\n    // shortcuts\n    if (t1 === 0 && !!t2) {\n      return this.split(t2).left;\n    }\n    if (t2 === 1) {\n      return this.split(t1).right;\n    }\n\n    // no shortcut: use \"de Casteljau\" iteration.\n    const q = this.hull(t1);\n    const result = {\n      left:\n        this.order === 2\n          ? new Bezier([q[0], q[3], q[5]])\n          : new Bezier([q[0], q[4], q[7], q[9]]),\n      right:\n        this.order === 2\n          ? new Bezier([q[5], q[4], q[2]])\n          : new Bezier([q[9], q[8], q[6], q[3]]),\n      span: q,\n    };\n\n    // make sure we bind _t1/_t2 information!\n    result.left._t1 = utils.map(0, 0, 1, this._t1, this._t2);\n    result.left._t2 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t1 = utils.map(t1, 0, 1, this._t1, this._t2);\n    result.right._t2 = utils.map(1, 0, 1, this._t1, this._t2);\n\n    // if we have no t2, we're done\n    if (!t2) {\n      return result;\n    }\n\n    // if we have a t2, split again:\n    t2 = utils.map(t2, t1, 1, 0, 1);\n    return result.right.split(t2).left;\n  }\n\n  extrema() {\n    const result = {};\n    let roots = [];\n\n    this.dims.forEach(\n      function (dim) {\n        let mfn = function (v) {\n          return v[dim];\n        };\n        let p = this.dpoints[0].map(mfn);\n        result[dim] = utils.droots(p);\n        if (this.order === 3) {\n          p = this.dpoints[1].map(mfn);\n          result[dim] = result[dim].concat(utils.droots(p));\n        }\n        result[dim] = result[dim].filter(function (t) {\n          return t >= 0 && t <= 1;\n        });\n        roots = roots.concat(result[dim].sort(utils.numberSort));\n      }.bind(this)\n    );\n\n    result.values = roots.sort(utils.numberSort).filter(function (v, idx) {\n      return roots.indexOf(v) === idx;\n    });\n\n    return result;\n  }\n\n  bbox() {\n    const extrema = this.extrema(),\n      result = {};\n    this.dims.forEach(\n      function (d) {\n        result[d] = utils.getminmax(this, d, extrema[d]);\n      }.bind(this)\n    );\n    return result;\n  }\n\n  overlaps(curve) {\n    const lbbox = this.bbox(),\n      tbbox = curve.bbox();\n    return utils.bboxoverlap(lbbox, tbbox);\n  }\n\n  offset(t, d) {\n    if (typeof d !== \"undefined\") {\n      const c = this.get(t),\n        n = this.normal(t);\n      const ret = {\n        c: c,\n        n: n,\n        x: c.x + n.x * d,\n        y: c.y + n.y * d,\n      };\n      if (this._3d) {\n        ret.z = c.z + n.z * d;\n      }\n      return ret;\n    }\n    if (this._linear) {\n      const nv = this.normal(0),\n        coords = this.points.map(function (p) {\n          const ret = {\n            x: p.x + t * nv.x,\n            y: p.y + t * nv.y,\n          };\n          if (p.z && nv.z) {\n            ret.z = p.z + t * nv.z;\n          }\n          return ret;\n        });\n      return [new Bezier(coords)];\n    }\n    return this.reduce().map(function (s) {\n      if (s._linear) {\n        return s.offset(t)[0];\n      }\n      return s.scale(t);\n    });\n  }\n\n  simple() {\n    if (this.order === 3) {\n      const a1 = utils.angle(this.points[0], this.points[3], this.points[1]);\n      const a2 = utils.angle(this.points[0], this.points[3], this.points[2]);\n      if ((a1 > 0 && a2 < 0) || (a1 < 0 && a2 > 0)) return false;\n    }\n    const n1 = this.normal(0);\n    const n2 = this.normal(1);\n    let s = n1.x * n2.x + n1.y * n2.y;\n    if (this._3d) {\n      s += n1.z * n2.z;\n    }\n    return abs(acos(s)) < pi / 3;\n  }\n\n  reduce() {\n    // TODO: examine these var types in more detail...\n    let i,\n      t1 = 0,\n      t2 = 0,\n      step = 0.01,\n      segment,\n      pass1 = [],\n      pass2 = [];\n    // first pass: split on extrema\n    let extrema = this.extrema().values;\n    if (extrema.indexOf(0) === -1) {\n      extrema = [0].concat(extrema);\n    }\n    if (extrema.indexOf(1) === -1) {\n      extrema.push(1);\n    }\n\n    for (t1 = extrema[0], i = 1; i < extrema.length; i++) {\n      t2 = extrema[i];\n      segment = this.split(t1, t2);\n      segment._t1 = t1;\n      segment._t2 = t2;\n      pass1.push(segment);\n      t1 = t2;\n    }\n\n    // second pass: further reduce these segments to simple segments\n    pass1.forEach(function (p1) {\n      t1 = 0;\n      t2 = 0;\n      while (t2 <= 1) {\n        for (t2 = t1 + step; t2 <= 1 + step; t2 += step) {\n          segment = p1.split(t1, t2);\n          if (!segment.simple()) {\n            t2 -= step;\n            if (abs(t1 - t2) < step) {\n              // we can never form a reduction\n              return [];\n            }\n            segment = p1.split(t1, t2);\n            segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n            segment._t2 = utils.map(t2, 0, 1, p1._t1, p1._t2);\n            pass2.push(segment);\n            t1 = t2;\n            break;\n          }\n        }\n      }\n      if (t1 < 1) {\n        segment = p1.split(t1, 1);\n        segment._t1 = utils.map(t1, 0, 1, p1._t1, p1._t2);\n        segment._t2 = p1._t2;\n        pass2.push(segment);\n      }\n    });\n    return pass2;\n  }\n\n  translate(v, d1, d2) {\n    d2 = typeof d2 === \"number\" ? d2 : d1;\n\n    // TODO: make this take curves with control points outside\n    //       of the start-end interval into account\n\n    const o = this.order;\n    let d = this.points.map((_, i) => (1 - i / o) * d1 + (i / o) * d2);\n    return new Bezier(\n      this.points.map((p, i) => ({\n        x: p.x + v.x * d[i],\n        y: p.y + v.y * d[i],\n      }))\n    );\n  }\n\n  scale(d) {\n    const order = this.order;\n    let distanceFn = false;\n    if (typeof d === \"function\") {\n      distanceFn = d;\n    }\n    if (distanceFn && order === 2) {\n      return this.raise().scale(distanceFn);\n    }\n\n    // TODO: add special handling for non-linear degenerate curves.\n\n    const clockwise = this.clockwise;\n    const points = this.points;\n\n    if (this._linear) {\n      return this.translate(\n        this.normal(0),\n        distanceFn ? distanceFn(0) : d,\n        distanceFn ? distanceFn(1) : d\n      );\n    }\n\n    const r1 = distanceFn ? distanceFn(0) : d;\n    const r2 = distanceFn ? distanceFn(1) : d;\n    const v = [this.offset(0, 10), this.offset(1, 10)];\n    const np = [];\n    const o = utils.lli4(v[0], v[0].c, v[1], v[1].c);\n\n    if (!o) {\n      throw new Error(\"cannot scale this curve. Try reducing it first.\");\n    }\n\n    // move all points by distance 'd' wrt the origin 'o',\n    // and move end points by fixed distance along normal.\n    [0, 1].forEach(function (t) {\n      const p = (np[t * order] = utils.copy(points[t * order]));\n      p.x += (t ? r2 : r1) * v[t].n.x;\n      p.y += (t ? r2 : r1) * v[t].n.y;\n    });\n\n    if (!distanceFn) {\n      // move control points to lie on the intersection of the offset\n      // derivative vector, and the origin-through-control vector\n      [0, 1].forEach((t) => {\n        if (order === 2 && !!t) return;\n        const p = np[t * order];\n        const d = this.derivative(t);\n        const p2 = { x: p.x + d.x, y: p.y + d.y };\n        np[t + 1] = utils.lli4(p, p2, o, points[t + 1]);\n      });\n      return new Bezier(np);\n    }\n\n    // move control points by \"however much necessary to\n    // ensure the correct tangent to endpoint\".\n    [0, 1].forEach(function (t) {\n      if (order === 2 && !!t) return;\n      var p = points[t + 1];\n      var ov = {\n        x: p.x - o.x,\n        y: p.y - o.y,\n      };\n      var rc = distanceFn ? distanceFn((t + 1) / order) : d;\n      if (distanceFn && !clockwise) rc = -rc;\n      var m = sqrt(ov.x * ov.x + ov.y * ov.y);\n      ov.x /= m;\n      ov.y /= m;\n      np[t + 1] = {\n        x: p.x + rc * ov.x,\n        y: p.y + rc * ov.y,\n      };\n    });\n    return new Bezier(np);\n  }\n\n  outline(d1, d2, d3, d4) {\n    d2 = d2 === undefined ? d1 : d2;\n\n    if (this._linear) {\n      // TODO: find the actual extrema, because they might\n      //       be before the start, or past the end.\n\n      const n = this.normal(0);\n      const start = this.points[0];\n      const end = this.points[this.points.length - 1];\n      let s, mid, e;\n\n      if (d3 === undefined) {\n        d3 = d1;\n        d4 = d2;\n      }\n\n      s = { x: start.x + n.x * d1, y: start.y + n.y * d1 };\n      e = { x: end.x + n.x * d3, y: end.y + n.y * d3 };\n      mid = { x: (s.x + e.x) / 2, y: (s.y + e.y) / 2 };\n      const fline = [s, mid, e];\n\n      s = { x: start.x - n.x * d2, y: start.y - n.y * d2 };\n      e = { x: end.x - n.x * d4, y: end.y - n.y * d4 };\n      mid = { x: (s.x + e.x) / 2, y: (s.y + e.y) / 2 };\n      const bline = [e, mid, s];\n\n      const ls = utils.makeline(bline[2], fline[0]);\n      const le = utils.makeline(fline[2], bline[0]);\n      const segments = [ls, new Bezier(fline), le, new Bezier(bline)];\n      return new PolyBezier(segments);\n    }\n\n    const reduced = this.reduce(),\n      len = reduced.length,\n      fcurves = [];\n\n    let bcurves = [],\n      p,\n      alen = 0,\n      tlen = this.length();\n\n    const graduated = typeof d3 !== \"undefined\" && typeof d4 !== \"undefined\";\n\n    function linearDistanceFunction(s, e, tlen, alen, slen) {\n      return function (v) {\n        const f1 = alen / tlen,\n          f2 = (alen + slen) / tlen,\n          d = e - s;\n        return utils.map(v, 0, 1, s + f1 * d, s + f2 * d);\n      };\n    }\n\n    // form curve oulines\n    reduced.forEach(function (segment) {\n      const slen = segment.length();\n      if (graduated) {\n        fcurves.push(\n          segment.scale(linearDistanceFunction(d1, d3, tlen, alen, slen))\n        );\n        bcurves.push(\n          segment.scale(linearDistanceFunction(-d2, -d4, tlen, alen, slen))\n        );\n      } else {\n        fcurves.push(segment.scale(d1));\n        bcurves.push(segment.scale(-d2));\n      }\n      alen += slen;\n    });\n\n    // reverse the \"return\" outline\n    bcurves = bcurves\n      .map(function (s) {\n        p = s.points;\n        if (p[3]) {\n          s.points = [p[3], p[2], p[1], p[0]];\n        } else {\n          s.points = [p[2], p[1], p[0]];\n        }\n        return s;\n      })\n      .reverse();\n\n    // form the endcaps as lines\n    const fs = fcurves[0].points[0],\n      fe = fcurves[len - 1].points[fcurves[len - 1].points.length - 1],\n      bs = bcurves[len - 1].points[bcurves[len - 1].points.length - 1],\n      be = bcurves[0].points[0],\n      ls = utils.makeline(bs, fs),\n      le = utils.makeline(fe, be),\n      segments = [ls].concat(fcurves).concat([le]).concat(bcurves);\n\n    return new PolyBezier(segments);\n  }\n\n  outlineshapes(d1, d2, curveIntersectionThreshold) {\n    d2 = d2 || d1;\n    const outline = this.outline(d1, d2).curves;\n    const shapes = [];\n    for (let i = 1, len = outline.length; i < len / 2; i++) {\n      const shape = utils.makeshape(\n        outline[i],\n        outline[len - i],\n        curveIntersectionThreshold\n      );\n      shape.startcap.virtual = i > 1;\n      shape.endcap.virtual = i < len / 2 - 1;\n      shapes.push(shape);\n    }\n    return shapes;\n  }\n\n  intersects(curve, curveIntersectionThreshold) {\n    if (!curve) return this.selfintersects(curveIntersectionThreshold);\n    if (curve.p1 && curve.p2) {\n      return this.lineIntersects(curve);\n    }\n    if (curve instanceof Bezier) {\n      curve = curve.reduce();\n    }\n    return this.curveintersects(\n      this.reduce(),\n      curve,\n      curveIntersectionThreshold\n    );\n  }\n\n  lineIntersects(line) {\n    const mx = min(line.p1.x, line.p2.x),\n      my = min(line.p1.y, line.p2.y),\n      MX = max(line.p1.x, line.p2.x),\n      MY = max(line.p1.y, line.p2.y);\n    return utils.roots(this.points, line).filter((t) => {\n      var p = this.get(t);\n      return utils.between(p.x, mx, MX) && utils.between(p.y, my, MY);\n    });\n  }\n\n  selfintersects(curveIntersectionThreshold) {\n    // \"simple\" curves cannot intersect with their direct\n    // neighbour, so for each segment X we check whether\n    // it intersects [0:x-2][x+2:last].\n\n    const reduced = this.reduce(),\n      len = reduced.length - 2,\n      results = [];\n\n    for (let i = 0, result, left, right; i < len; i++) {\n      left = reduced.slice(i, i + 1);\n      right = reduced.slice(i + 2);\n      result = this.curveintersects(left, right, curveIntersectionThreshold);\n      results.push(...result);\n    }\n    return results;\n  }\n\n  curveintersects(c1, c2, curveIntersectionThreshold) {\n    const pairs = [];\n    // step 1: pair off any overlapping segments\n    c1.forEach(function (l) {\n      c2.forEach(function (r) {\n        if (l.overlaps(r)) {\n          pairs.push({ left: l, right: r });\n        }\n      });\n    });\n    // step 2: for each pairing, run through the convergence algorithm.\n    let intersections = [];\n    pairs.forEach(function (pair) {\n      const result = utils.pairiteration(\n        pair.left,\n        pair.right,\n        curveIntersectionThreshold\n      );\n      if (result.length > 0) {\n        intersections = intersections.concat(result);\n      }\n    });\n    return intersections;\n  }\n\n  arcs(errorThreshold) {\n    errorThreshold = errorThreshold || 0.5;\n    return this._iterate(errorThreshold, []);\n  }\n\n  _error(pc, np1, s, e) {\n    const q = (e - s) / 4,\n      c1 = this.get(s + q),\n      c2 = this.get(e - q),\n      ref = utils.dist(pc, np1),\n      d1 = utils.dist(pc, c1),\n      d2 = utils.dist(pc, c2);\n    return abs(d1 - ref) + abs(d2 - ref);\n  }\n\n  _iterate(errorThreshold, circles) {\n    let t_s = 0,\n      t_e = 1,\n      safety;\n    // we do a binary search to find the \"good `t` closest to no-longer-good\"\n    do {\n      safety = 0;\n\n      // step 1: start with the maximum possible arc\n      t_e = 1;\n\n      // points:\n      let np1 = this.get(t_s),\n        np2,\n        np3,\n        arc,\n        prev_arc;\n\n      // booleans:\n      let curr_good = false,\n        prev_good = false,\n        done;\n\n      // numbers:\n      let t_m = t_e,\n        prev_e = 1,\n        step = 0;\n\n      // step 2: find the best possible arc\n      do {\n        prev_good = curr_good;\n        prev_arc = arc;\n        t_m = (t_s + t_e) / 2;\n        step++;\n\n        np2 = this.get(t_m);\n        np3 = this.get(t_e);\n\n        arc = utils.getccenter(np1, np2, np3);\n\n        //also save the t values\n        arc.interval = {\n          start: t_s,\n          end: t_e,\n        };\n\n        let error = this._error(arc, np1, t_s, t_e);\n        curr_good = error <= errorThreshold;\n\n        done = prev_good && !curr_good;\n        if (!done) prev_e = t_e;\n\n        // this arc is fine: we can move 'e' up to see if we can find a wider arc\n        if (curr_good) {\n          // if e is already at max, then we're done for this arc.\n          if (t_e >= 1) {\n            // make sure we cap at t=1\n            arc.interval.end = prev_e = 1;\n            prev_arc = arc;\n            // if we capped the arc segment to t=1 we also need to make sure that\n            // the arc's end angle is correct with respect to the bezier end point.\n            if (t_e > 1) {\n              let d = {\n                x: arc.x + arc.r * cos(arc.e),\n                y: arc.y + arc.r * sin(arc.e),\n              };\n              arc.e += utils.angle({ x: arc.x, y: arc.y }, d, this.get(1));\n            }\n            break;\n          }\n          // if not, move it up by half the iteration distance\n          t_e = t_e + (t_e - t_s) / 2;\n        } else {\n          // this is a bad arc: we need to move 'e' down to find a good arc\n          t_e = t_m;\n        }\n      } while (!done && safety++ < 100);\n\n      if (safety >= 100) {\n        break;\n      }\n\n      // console.log(\"L835: [F] arc found\", t_s, prev_e, prev_arc.x, prev_arc.y, prev_arc.s, prev_arc.e);\n\n      prev_arc = prev_arc ? prev_arc : arc;\n      circles.push(prev_arc);\n      t_s = prev_e;\n    } while (t_e < 1);\n    return circles;\n  }\n}\n\nexport { Bezier };\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BezierJSWrapper_bezierJs;\nimport { Bezier } from 'bezier-js';\nimport  { Vec2 }  from '../Vec2.mjs';\nimport  LineSegment2  from './LineSegment2.mjs';\nimport  Rect2  from './Rect2.mjs';\nimport  Parameterized2DShape  from './Parameterized2DShape.mjs';\n/**\n * A lazy-initializing wrapper around Bezier-js.\n *\n * Subclasses may override `at`, `derivativeAt`, and `normal` with functions\n * that do not initialize a `bezier-js` `Bezier`.\n *\n * **Do not use this class directly.** It may be removed/replaced in a future release.\n * @internal\n */\nexport class BezierJSWrapper extends Parameterized2DShape {\n    constructor(bezierJsBezier) {\n        super();\n        _BezierJSWrapper_bezierJs.set(this, null);\n        if (bezierJsBezier) {\n            __classPrivateFieldSet(this, _BezierJSWrapper_bezierJs, bezierJsBezier, \"f\");\n        }\n    }\n    getBezier() {\n        if (!__classPrivateFieldGet(this, _BezierJSWrapper_bezierJs, \"f\")) {\n            __classPrivateFieldSet(this, _BezierJSWrapper_bezierJs, new Bezier(this.getPoints().map((p) => p.xy)), \"f\");\n        }\n        return __classPrivateFieldGet(this, _BezierJSWrapper_bezierJs, \"f\");\n    }\n    signedDistance(point) {\n        // .d: Distance\n        return this.nearestPointTo(point).point.distanceTo(point);\n    }\n    /**\n     * @returns the (more) exact distance from `point` to this.\n     *\n     * @see {@link approximateDistance}\n     */\n    distance(point) {\n        // A Bézier curve has no interior, thus, signed distance is the same as distance.\n        return this.signedDistance(point);\n    }\n    /**\n     * @returns the curve evaluated at `t`.\n     */\n    at(t) {\n        return Vec2.ofXY(this.getBezier().get(t));\n    }\n    /** @returns the curve's directional derivative at `t`. */\n    derivativeAt(t) {\n        return Vec2.ofXY(this.getBezier().derivative(t));\n    }\n    secondDerivativeAt(t) {\n        return Vec2.ofXY(this.getBezier().dderivative(t));\n    }\n    /** @returns the [normal vector](https://en.wikipedia.org/wiki/Normal_(geometry)) to this curve at `t`. */\n    normal(t) {\n        return Vec2.ofXY(this.getBezier().normal(t));\n    }\n    normalAt(t) {\n        return this.normal(t);\n    }\n    tangentAt(t) {\n        return this.derivativeAt(t).normalized();\n    }\n    getTightBoundingBox() {\n        const bbox = this.getBezier().bbox();\n        const width = bbox.x.max - bbox.x.min;\n        const height = bbox.y.max - bbox.y.min;\n        return new Rect2(bbox.x.min, bbox.y.min, width, height);\n    }\n    argIntersectsLineSegment(line) {\n        // Bezier-js has a bug when all control points of a Bezier curve lie on\n        // a line. Our solution involves converting the Bezier into a line, then\n        // finding the parameter value that produced the intersection.\n        //\n        // TODO: This is unnecessarily slow. A better solution would be to fix\n        // the bug upstream.\n        const asLine = LineSegment2.ofSmallestContainingPoints(this.getPoints());\n        if (asLine) {\n            const intersection = asLine.intersectsLineSegment(line);\n            return intersection.map((p) => this.nearestPointTo(p).parameterValue);\n        }\n        const bezier = this.getBezier();\n        return bezier\n            .intersects(line)\n            .map((t) => {\n            // We're using the .intersects(line) function, which is documented\n            // to always return numbers. However, to satisfy the type checker (and\n            // possibly improperly-defined types),\n            if (typeof t === 'string') {\n                t = parseFloat(t);\n            }\n            const point = Vec2.ofXY(this.at(t));\n            // Ensure that the intersection is on the line segment\n            if (point.distanceTo(line.p1) > line.length || point.distanceTo(line.p2) > line.length) {\n                return null;\n            }\n            return t;\n        })\n            .filter((entry) => entry !== null);\n    }\n    splitAt(t) {\n        if (t <= 0 || t >= 1) {\n            return [this];\n        }\n        const bezier = this.getBezier();\n        const split = bezier.split(t);\n        return [\n            new BezierJSWrapperImpl(split.left.points.map((point) => Vec2.ofXY(point)), split.left),\n            new BezierJSWrapperImpl(split.right.points.map((point) => Vec2.ofXY(point)), split.right),\n        ];\n    }\n    nearestPointTo(point) {\n        // One implementation could be similar to this:\n        //   const projection = this.getBezier().project(point);\n        //   return {\n        //    point: Vec2.ofXY(projection),\n        //    parameterValue: projection.t!,\n        //   };\n        // However, Bezier-js is rather impercise (and relies on a lookup table).\n        // Thus, we instead use Newton's Method:\n        // We want to find t such that f(t) = |B(t) - p|² is minimized.\n        // Expanding,\n        //   f(t)  = (Bₓ(t) - pₓ)² + (Bᵧ(t) - pᵧ)²\n        // ⇒ f'(t) = Dₜ(Bₓ(t) - pₓ)² + Dₜ(Bᵧ(t) - pᵧ)²\n        // ⇒ f'(t) = 2(Bₓ(t) - pₓ)(Bₓ'(t)) + 2(Bᵧ(t) - pᵧ)(Bᵧ'(t))\n        //         = 2Bₓ(t)Bₓ'(t) - 2pₓBₓ'(t) + 2Bᵧ(t)Bᵧ'(t) - 2pᵧBᵧ'(t)\n        // ⇒ f''(t)= 2Bₓ'(t)Bₓ'(t) + 2Bₓ(t)Bₓ''(t) - 2pₓBₓ''(t) + 2Bᵧ'(t)Bᵧ'(t)\n        //         + 2Bᵧ(t)Bᵧ''(t) - 2pᵧBᵧ''(t)\n        // Because f'(t) = 0 at relative extrema, we can use Newton's Method\n        // to improve on an initial guess.\n        const sqrDistAt = (t) => point.squareDistanceTo(this.at(t));\n        const yIntercept = sqrDistAt(0);\n        let t = 0;\n        let minSqrDist = yIntercept;\n        // Start by testing a few points:\n        const pointsToTest = 4;\n        for (let i = 0; i < pointsToTest; i++) {\n            const testT = i / (pointsToTest - 1);\n            const testMinSqrDist = sqrDistAt(testT);\n            if (testMinSqrDist < minSqrDist) {\n                t = testT;\n                minSqrDist = testMinSqrDist;\n            }\n        }\n        // To use Newton's Method, we need to evaluate the second derivative of the distance\n        // function:\n        const secondDerivativeAt = (t) => {\n            // f''(t) = 2Bₓ'(t)Bₓ'(t) + 2Bₓ(t)Bₓ''(t) - 2pₓBₓ''(t)\n            //        + 2Bᵧ'(t)Bᵧ'(t) + 2Bᵧ(t)Bᵧ''(t) - 2pᵧBᵧ''(t)\n            const b = this.at(t);\n            const bPrime = this.derivativeAt(t);\n            const bPrimePrime = this.secondDerivativeAt(t);\n            return (2 * bPrime.x * bPrime.x +\n                2 * b.x * bPrimePrime.x -\n                2 * point.x * bPrimePrime.x +\n                2 * bPrime.y * bPrime.y +\n                2 * b.y * bPrimePrime.y -\n                2 * point.y * bPrimePrime.y);\n        };\n        // Because we're zeroing f'(t), we also need to be able to compute it:\n        const derivativeAt = (t) => {\n            // f'(t) = 2Bₓ(t)Bₓ'(t) - 2pₓBₓ'(t) + 2Bᵧ(t)Bᵧ'(t) - 2pᵧBᵧ'(t)\n            const b = this.at(t);\n            const bPrime = this.derivativeAt(t);\n            return (2 * b.x * bPrime.x - 2 * point.x * bPrime.x + 2 * b.y * bPrime.y - 2 * point.y * bPrime.y);\n        };\n        const iterate = () => {\n            const slope = secondDerivativeAt(t);\n            if (slope === 0)\n                return;\n            // We intersect a line through the point on f'(t) at t with the x-axis:\n            //    y = m(x - x₀) + y₀\n            // ⇒  x - x₀ = (y - y₀) / m\n            // ⇒  x = (y - y₀) / m + x₀\n            //\n            // Thus, when zeroed,\n            //   tN = (0 - f'(t)) / m + t\n            const newT = (0 - derivativeAt(t)) / slope + t;\n            //const distDiff = sqrDistAt(newT) - sqrDistAt(t);\n            //console.assert(distDiff <= 0, `${-distDiff} >= 0`);\n            t = newT;\n            if (t > 1) {\n                t = 1;\n            }\n            else if (t < 0) {\n                t = 0;\n            }\n        };\n        for (let i = 0; i < 12; i++) {\n            iterate();\n        }\n        return { parameterValue: t, point: this.at(t) };\n    }\n    intersectsBezier(other) {\n        const intersections = this.getBezier().intersects(other.getBezier());\n        if (!intersections || intersections.length === 0) {\n            return [];\n        }\n        const result = [];\n        for (const intersection of intersections) {\n            // From http://pomax.github.io/bezierjs/#intersect-curve,\n            // .intersects returns an array of 't1/t2' pairs, where curve1.at(t1) gives the point.\n            const match = /^([-0-9.eE]+)\\/([-0-9.eE]+)$/.exec(intersection);\n            if (!match) {\n                throw new Error(`Incorrect format returned by .intersects: ${intersections} should be array of \"number/number\"!`);\n            }\n            const t = parseFloat(match[1]);\n            result.push({\n                parameterValue: t,\n                point: this.at(t),\n            });\n        }\n        return result;\n    }\n    toString() {\n        return `Bézier(${this.getPoints()\n            .map((point) => point.toString())\n            .join(', ')})`;\n    }\n}\n_BezierJSWrapper_bezierJs = new WeakMap();\n/**\n * Private concrete implementation of `BezierJSWrapper`, used by methods above that need to return a wrapper\n * around a `Bezier`.\n */\nclass BezierJSWrapperImpl extends BezierJSWrapper {\n    constructor(controlPoints, curve) {\n        super(curve);\n        this.controlPoints = controlPoints;\n    }\n    getPoints() {\n        return this.controlPoints;\n    }\n}\nexport default BezierJSWrapper;\n", "import  BezierJSWrapper  from './BezierJSWrapper.mjs';\nimport  Rect2  from './Rect2.mjs';\n/**\n * A wrapper around [`bezier-js`](https://github.com/Pomax/bezierjs)'s cubic Bezier.\n */\nclass CubicBezier extends BezierJSWrapper {\n    constructor(\n    // Start point\n    p0, \n    // Control point 1\n    p1, \n    // Control point 2\n    p2, \n    // End point\n    p3) {\n        super();\n        this.p0 = p0;\n        this.p1 = p1;\n        this.p2 = p2;\n        this.p3 = p3;\n    }\n    getPoints() {\n        return [this.p0, this.p1, this.p2, this.p3];\n    }\n    /** Returns an overestimate of this shape's bounding box. */\n    getLooseBoundingBox() {\n        return Rect2.bboxOf([this.p0, this.p1, this.p2, this.p3]);\n    }\n}\nexport default CubicBezier;\n", "/**\n * Solves an equation of the form ax² + bx + c = 0.\n * The larger solution is returned first.\n *\n * If there are no solutions, returns `[NaN, NaN]`. If there is one solution,\n * repeats the solution twice in the result.\n */\nconst solveQuadratic = (a, b, c) => {\n    // See also https://en.wikipedia.org/wiki/Quadratic_formula\n    if (a === 0) {\n        let solution;\n        if (b === 0) {\n            solution = c === 0 ? 0 : NaN;\n        }\n        else {\n            // Then we have bx + c = 0\n            // which implies bx = -c.\n            // Thus, x = -c/b\n            solution = -c / b;\n        }\n        return [solution, solution];\n    }\n    const discriminant = b * b - 4 * a * c;\n    if (discriminant < 0) {\n        return [NaN, NaN];\n    }\n    const rootDiscriminant = Math.sqrt(discriminant);\n    const solution1 = (-b + rootDiscriminant) / (2 * a);\n    const solution2 = (-b - rootDiscriminant) / (2 * a);\n    if (solution1 > solution2) {\n        return [solution1, solution2];\n    }\n    else {\n        return [solution2, solution1];\n    }\n};\nexport default solveQuadratic;\n", "import  { Vec2 }  from '../Vec2.mjs';\nimport  solveQuadratic  from '../polynomial/solveQuadratic.mjs';\nimport  BezierJSWrapper  from './BezierJSWrapper.mjs';\nimport  Rect2  from './Rect2.mjs';\n/**\n * Represents a 2D [Bézier curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).\n *\n * Example:\n * ```ts,runnable,console\n * import { QuadraticBezier, Vec2 } from '@js-draw/math';\n *\n * const startPoint = Vec2.of(4, 3);\n * const controlPoint = Vec2.of(1, 1);\n * const endPoint = Vec2.of(1, 3);\n *\n * const curve = new QuadraticBezier(\n *   startPoint,\n *   controlPoint,\n *   endPoint,\n * );\n *\n * console.log('Curve:', curve);\n * ```\n *\n * **Note**: Some Bézier operations internally use the `bezier-js` library.\n */\nexport class QuadraticBezier extends BezierJSWrapper {\n    constructor(\n    // Start point\n    p0, \n    // Control point\n    p1, \n    // End point\n    p2) {\n        super();\n        this.p0 = p0;\n        this.p1 = p1;\n        this.p2 = p2;\n    }\n    /**\n     * Returns a component of a quadratic Bézier curve at t, where p0,p1,p2 are either all x or\n     * all y components of the target curve.\n     */\n    static componentAt(t, p0, p1, p2) {\n        return p0 + t * (-2 * p0 + 2 * p1) + t * t * (p0 - 2 * p1 + p2);\n    }\n    static derivativeComponentAt(t, p0, p1, p2) {\n        return -2 * p0 + 2 * p1 + 2 * t * (p0 - 2 * p1 + p2);\n    }\n    static secondDerivativeComponentAt(t, p0, p1, p2) {\n        return 2 * (p0 - 2 * p1 + p2);\n    }\n    /**\n     * @returns the curve evaluated at `t`.\n     *\n     * `t` should be a number in `[0, 1]`.\n     */\n    at(t) {\n        if (t === 0)\n            return this.p0;\n        if (t === 1)\n            return this.p2;\n        const p0 = this.p0;\n        const p1 = this.p1;\n        const p2 = this.p2;\n        return Vec2.of(QuadraticBezier.componentAt(t, p0.x, p1.x, p2.x), QuadraticBezier.componentAt(t, p0.y, p1.y, p2.y));\n    }\n    derivativeAt(t) {\n        const p0 = this.p0;\n        const p1 = this.p1;\n        const p2 = this.p2;\n        return Vec2.of(QuadraticBezier.derivativeComponentAt(t, p0.x, p1.x, p2.x), QuadraticBezier.derivativeComponentAt(t, p0.y, p1.y, p2.y));\n    }\n    secondDerivativeAt(t) {\n        const p0 = this.p0;\n        const p1 = this.p1;\n        const p2 = this.p2;\n        return Vec2.of(QuadraticBezier.secondDerivativeComponentAt(t, p0.x, p1.x, p2.x), QuadraticBezier.secondDerivativeComponentAt(t, p0.y, p1.y, p2.y));\n    }\n    normal(t) {\n        const tangent = this.derivativeAt(t);\n        return tangent.orthog().normalized();\n    }\n    /** @returns an overestimate of this shape's bounding box. */\n    getLooseBoundingBox() {\n        return Rect2.bboxOf([this.p0, this.p1, this.p2]);\n    }\n    /**\n     * @returns the *approximate* distance from `point` to this curve.\n     */\n    approximateDistance(point) {\n        // We want to minimize f(t) = |B(t) - p|².\n        // Expanding,\n        //   f(t)  = (Bₓ(t) - pₓ)² + (Bᵧ(t) - pᵧ)²\n        // ⇒ f'(t) = Dₜ(Bₓ(t) - pₓ)² + Dₜ(Bᵧ(t) - pᵧ)²\n        //\n        // Considering just one component,\n        //  Dₜ(Bₓ(t) - pₓ)² = 2(Bₓ(t) - pₓ)(DₜBₓ(t))\n        //                  = 2(Bₓ(t)DₜBₓ(t) - pₓBₓ(t))\n        //   = 2(p0ₓ + (t)(-2p0ₓ + 2p1ₓ) + (t²)(p0ₓ - 2p1ₓ + p2ₓ) - pₓ)((-2p0ₓ + 2p1ₓ) + 2(t)(p0ₓ - 2p1ₓ + p2ₓ))\n        //     - (pₓ)((-2p0ₓ + 2p1ₓ) + (t)(p0ₓ - 2p1ₓ + p2ₓ))\n        const A = this.p0.x - point.x;\n        const B = -2 * this.p0.x + 2 * this.p1.x;\n        const C = this.p0.x - 2 * this.p1.x + this.p2.x;\n        // Let A = p0ₓ - pₓ, B = -2p0ₓ + 2p1ₓ, C = p0ₓ - 2p1ₓ + p2ₓ. We then have,\n        //  Dₜ(Bₓ(t) - pₓ)²\n        //    = 2(A + tB + t²C)(B + 2tC) - (pₓ)(B + 2tC)\n        //    = 2(AB + tB² + t²BC + 2tCA + 2tCtB + 2tCt²C) - pₓB - pₓ2tC\n        //    = 2(AB + tB² + 2tCA + t²BC + 2t²CB + 2C²t³) - pₓB - pₓ2tC\n        //    = 2AB + 2t(B² + 2CA) + 2t²(BC + 2CB) + 4C²t³ - pₓB - pₓ2tC\n        //    = 2AB + 2t(B² + 2CA - pₓC) + 2t²(BC + 2CB) + 4C²t³ - pₓB\n        //\n        const D = this.p0.y - point.y;\n        const E = -2 * this.p0.y + 2 * this.p1.y;\n        const F = this.p0.y - 2 * this.p1.y + this.p2.y;\n        // Using D = p0ᵧ - pᵧ, E = -2p0ᵧ + 2p1ᵧ, F = p0ᵧ - 2p1ᵧ + p2ᵧ, we thus have,\n        //  f'(t) = 2AB + 2t(B² + 2CA - pₓC) + 2t²(BC + 2CB) + 4C²t³ - pₓB\n        //        + 2DE + 2t(E² + 2FD - pᵧF) + 2t²(EF + 2FE) + 4F²t³ - pᵧE\n        const a = 2 * A * B + 2 * D * E - point.x * B - point.y * E;\n        const b = 2 * B * B + 2 * E * E + 2 * C * A + 2 * F * D - point.x * C - point.y * F;\n        const c = 2 * E * F + 2 * B * C + 2 * C * B + 2 * F * E;\n        //const d = 4 * C * C + 4 * F * F;\n        // Thus,\n        // f'(t) = a + bt + ct² + dt³\n        const fDerivAtZero = a;\n        const f2ndDerivAtZero = b;\n        const f3rdDerivAtZero = 2 * c;\n        // Using the first few terms of a Maclaurin series to approximate f'(t),\n        // f'(t) ≈ f'(0) + t f''(0) + t² f'''(0) / 2\n        let [min1, min2] = solveQuadratic(f3rdDerivAtZero / 2, f2ndDerivAtZero, fDerivAtZero);\n        // If the quadratic has no solutions, approximate.\n        if (isNaN(min1)) {\n            min1 = 0.25;\n        }\n        if (isNaN(min2)) {\n            min2 = 0.75;\n        }\n        const at1 = this.at(min1);\n        const at2 = this.at(min2);\n        const sqrDist1 = at1.squareDistanceTo(point);\n        const sqrDist2 = at2.squareDistanceTo(point);\n        const sqrDist3 = this.at(0).squareDistanceTo(point);\n        const sqrDist4 = this.at(1).squareDistanceTo(point);\n        return Math.sqrt(Math.min(sqrDist1, sqrDist2, sqrDist3, sqrDist4));\n    }\n    getPoints() {\n        return [this.p0, this.p1, this.p2];\n    }\n}\nexport default QuadraticBezier;\n", "import  { Vec2 }  from '../Vec2.mjs';\nimport  Parameterized2DShape  from './Parameterized2DShape.mjs';\nimport  Rect2  from './Rect2.mjs';\n/**\n * Like a {@link Point2}, but with additional functionality (e.g. SDF).\n *\n * Access the internal `Point2` using the `p` property.\n */\nclass PointShape2D extends Parameterized2DShape {\n    constructor(p) {\n        super();\n        this.p = p;\n    }\n    signedDistance(point) {\n        return this.p.distanceTo(point);\n    }\n    argIntersectsLineSegment(lineSegment, epsilon) {\n        if (lineSegment.containsPoint(this.p, epsilon)) {\n            return [0];\n        }\n        return [];\n    }\n    getTightBoundingBox() {\n        return new Rect2(this.p.x, this.p.y, 0, 0);\n    }\n    at(_t) {\n        return this.p;\n    }\n    /**\n     * Returns an arbitrary unit-length vector.\n     */\n    normalAt(_t) {\n        // Return a vector that makes sense.\n        return Vec2.unitY;\n    }\n    tangentAt(_t) {\n        return Vec2.unitX;\n    }\n    splitAt(_t) {\n        return [this];\n    }\n    nearestPointTo(_point) {\n        return {\n            point: this.p,\n            parameterValue: 0,\n        };\n    }\n}\nexport default PointShape2D;\n", "/** Cleans up stringified numbers */\nexport const cleanUpNumber = (text) => {\n    // Regular expression substitions can be somewhat expensive. Only do them\n    // if necessary.\n    if (text.indexOf('e') > 0) {\n        // Round to zero.\n        if (text.match(/[eE][-]\\d{2,}$/)) {\n            return '0';\n        }\n    }\n    const lastChar = text.charAt(text.length - 1);\n    if (lastChar === '0' || lastChar === '.') {\n        // Remove trailing zeroes\n        text = text.replace(/([.]\\d*[^0])0+$/, '$1');\n        text = text.replace(/[.]0+$/, '.');\n        // Remove trailing period\n        text = text.replace(/[.]$/, '');\n    }\n    const firstChar = text.charAt(0);\n    if (firstChar === '0' || firstChar === '-') {\n        // Remove unnecessary leading zeroes.\n        text = text.replace(/^(0+)[.]/, '.');\n        text = text.replace(/^-(0+)[.]/, '-.');\n        text = text.replace(/^(-?)0+$/, '$10');\n    }\n    if (text === '-0') {\n        return '0';\n    }\n    return text;\n};\nexport default cleanUpNumber;\n", "import  cleanUpNumber  from './cleanUpNumber.mjs';\n/**\n * Converts `num` to a string, removing trailing digits that were likely caused by\n * precision errors.\n *\n * @example\n * ```ts,runnable,console\n * import { toRoundedString } from '@js-draw/math';\n *\n * console.log('Rounded: ', toRoundedString(1.000000011));\n * ```\n */\nexport const toRoundedString = (num) => {\n    // Try to remove rounding errors. If the number ends in at least three/four zeroes\n    // (or nines) just one or two digits, it's probably a rounding error.\n    const fixRoundingUpExp = /^([-]?\\d*\\.\\d{3,})0{4,}\\d{1,4}$/;\n    const hasRoundingDownExp = /^([-]?)(\\d*)\\.(\\d{3,}9{4,})\\d{1,4}$/;\n    let text = num.toString(10);\n    if (text.indexOf('.') === -1) {\n        return text;\n    }\n    const roundingDownMatch = hasRoundingDownExp.exec(text);\n    if (roundingDownMatch) {\n        const negativeSign = roundingDownMatch[1];\n        const postDecimalString = roundingDownMatch[3];\n        const lastDigit = parseInt(postDecimalString.charAt(postDecimalString.length - 1), 10);\n        const postDecimal = parseInt(postDecimalString, 10);\n        const preDecimal = parseInt(roundingDownMatch[2], 10);\n        const origPostDecimalString = roundingDownMatch[3];\n        let newPostDecimal = (postDecimal + 10 - lastDigit).toString();\n        let carry = 0;\n        if (newPostDecimal.length > postDecimal.toString().length) {\n            // Left-shift\n            newPostDecimal = newPostDecimal.substring(1);\n            carry = 1;\n        }\n        // parseInt(...).toString() removes leading zeroes. Add them back.\n        while (newPostDecimal.length < origPostDecimalString.length) {\n            newPostDecimal = carry.toString(10) + newPostDecimal;\n            carry = 0;\n        }\n        text = `${negativeSign + (preDecimal + carry).toString()}.${newPostDecimal}`;\n    }\n    text = text.replace(fixRoundingUpExp, '$1');\n    return cleanUpNumber(text);\n};\nexport default toRoundedString;\n", "export const numberRegex = /^([-]?)(\\d*)[.](\\d+)$/;\n", "import  { numberRegex }  from './constants.mjs';\n/**\n * Returns the length of `numberAsString` after a decimal point.\n *\n * For example,\n * ```ts\n * getLenAfterDecimal('1.001') // -> 3\n * ```\n */\nexport const getLenAfterDecimal = (numberAsString) => {\n    const numberMatch = numberRegex.exec(numberAsString);\n    if (!numberMatch) {\n        // If not a match, either the number is exponential notation (or is something\n        // like NaN or Infinity)\n        if (numberAsString.search(/[eE]/) !== -1 || /^[a-zA-Z]+$/.exec(numberAsString)) {\n            return -1;\n            // Or it has no decimal point\n        }\n        else {\n            return 0;\n        }\n    }\n    const afterDecimalLen = numberMatch[3].length;\n    return afterDecimalLen;\n};\nexport default getLenAfterDecimal;\n", "import  cleanUpNumber  from './cleanUpNumber.mjs';\nimport  { numberRegex }  from './constants.mjs';\nimport  getLenAfterDecimal  from './getLenAfterDecimal.mjs';\nimport  toRoundedString  from './toRoundedString.mjs';\n// [reference] should be a string representation of a base-10 number (no exponential (e.g. 10e10))\nexport const toStringOfSamePrecision = (num, ...references) => {\n    const text = num.toString(10);\n    const textMatch = numberRegex.exec(text);\n    if (!textMatch) {\n        return text;\n    }\n    let decimalPlaces = -1;\n    for (const reference of references) {\n        decimalPlaces = Math.max(getLenAfterDecimal(reference), decimalPlaces);\n    }\n    if (decimalPlaces === -1) {\n        return toRoundedString(num);\n    }\n    // Make text's after decimal length match [afterDecimalLen].\n    let postDecimal = textMatch[3].substring(0, decimalPlaces);\n    let preDecimal = textMatch[2];\n    const nextDigit = textMatch[3].charAt(decimalPlaces);\n    if (nextDigit !== '') {\n        const asNumber = parseInt(nextDigit, 10);\n        if (asNumber >= 5) {\n            // Don't attempt to parseInt() an empty string.\n            if (postDecimal.length > 0) {\n                const leadingZeroMatch = /^(0+)(\\d*)$/.exec(postDecimal);\n                let leadingZeroes = '';\n                let postLeading = postDecimal;\n                if (leadingZeroMatch) {\n                    leadingZeroes = leadingZeroMatch[1];\n                    postLeading = leadingZeroMatch[2];\n                }\n                postDecimal = (parseInt(postDecimal) + 1).toString();\n                // If postDecimal got longer, remove leading zeroes if possible\n                if (postDecimal.length > postLeading.length && leadingZeroes.length > 0) {\n                    leadingZeroes = leadingZeroes.substring(1);\n                }\n                postDecimal = leadingZeroes + postDecimal;\n            }\n            if (postDecimal.length === 0 || postDecimal.length > decimalPlaces) {\n                preDecimal = (parseInt(preDecimal) + 1).toString();\n                postDecimal = postDecimal.substring(1);\n            }\n        }\n    }\n    const negativeSign = textMatch[1];\n    return cleanUpNumber(`${negativeSign}${preDecimal}.${postDecimal}`);\n};\nexport default toStringOfSamePrecision;\n", "import  { Vec2 }  from '../Vec2.mjs';\n/**\n * Implements Gift Wrapping, in $O(nh)$. This algorithm is not the most efficient in the worst case.\n *\n * See https://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n * and https://www.cs.jhu.edu/~misha/Spring16/06.pdf\n */\nconst convexHull2Of = (points) => {\n    if (points.length === 0) {\n        return [];\n    }\n    // 1. Start with a vertex on the hull\n    const lowestPoint = points.reduce((lowest, current) => (current.y < lowest.y ? current : lowest), points[0]);\n    const vertices = [lowestPoint];\n    let toProcess = [...points.filter((p) => !p.eq(lowestPoint))];\n    let lastBaseDirection = Vec2.of(-1, 0);\n    // 2. Find the point with greatest angle from the vertex:\n    //\n    //  . .     .\n    //   . .   /  <- Notice that **all** other points are to the\n    //       /       **left** of the vector from the current\n    //    ./         vertex to the new point.\n    while (toProcess.length > 0) {\n        const lastVertex = vertices[vertices.length - 1];\n        let smallestDotProductSoFar = lastBaseDirection.dot(lowestPoint.minus(lastVertex).normalizedOrZero());\n        let furthestPointSoFar = lowestPoint;\n        for (const point of toProcess) {\n            // Maximizing the angle is the same as minimizing the dot product:\n            //              point.minus(lastVertex)\n            //             ^\n            //            /\n            //           /\n            //        ϑ /\n            //   <-----. lastBaseDirection\n            const currentDotProduct = lastBaseDirection.dot(point.minus(lastVertex).normalizedOrZero());\n            if (currentDotProduct <= smallestDotProductSoFar) {\n                furthestPointSoFar = point;\n                smallestDotProductSoFar = currentDotProduct;\n            }\n        }\n        toProcess = toProcess.filter((p) => !p.eq(furthestPointSoFar));\n        const newBaseDirection = furthestPointSoFar.minus(lastVertex).normalized();\n        // If the last vertex is on the same edge as the current, there's no need to include\n        // the previous one.\n        if (Math.abs(newBaseDirection.dot(lastBaseDirection)) === 1 && vertices.length > 1) {\n            vertices.pop();\n        }\n        // Stoping condition: We've gone in a full circle.\n        if (furthestPointSoFar.eq(lowestPoint)) {\n            break;\n        }\n        else {\n            vertices.push(furthestPointSoFar);\n            lastBaseDirection = lastVertex.minus(furthestPointSoFar).normalized();\n        }\n    }\n    return vertices;\n};\nexport default convexHull2Of;\n", "import  LineSegment2  from './LineSegment2.mjs';\nimport  Rect2  from './Rect2.mjs';\nimport  { Vec2 }  from '../Vec2.mjs';\nimport  CubicBezier  from './CubicBezier.mjs';\nimport  QuadraticBezier  from './QuadraticBezier.mjs';\nimport  PointShape2D  from './PointShape2D.mjs';\nimport  toRoundedString  from '../rounding/toRoundedString.mjs';\nimport  toStringOfSamePrecision  from '../rounding/toStringOfSamePrecision.mjs';\nimport  convexHull2Of  from '../utils/convexHull2Of.mjs';\n/** Identifiers for different path commands. These commands can make up a {@link Path}. */\nexport var PathCommandType;\n(function (PathCommandType) {\n    PathCommandType[PathCommandType[\"LineTo\"] = 0] = \"LineTo\";\n    PathCommandType[PathCommandType[\"MoveTo\"] = 1] = \"MoveTo\";\n    PathCommandType[PathCommandType[\"CubicBezierTo\"] = 2] = \"CubicBezierTo\";\n    PathCommandType[PathCommandType[\"QuadraticBezierTo\"] = 3] = \"QuadraticBezierTo\";\n})(PathCommandType || (PathCommandType = {}));\n/** Returns a positive number if `a` comes after `b`, 0 if equal, and negative otherwise. */\nexport const compareCurveIndices = (a, b) => {\n    const indexCompare = a.curveIndex - b.curveIndex;\n    if (indexCompare === 0) {\n        return a.parameterValue - b.parameterValue;\n    }\n    else {\n        return indexCompare;\n    }\n};\n/**\n * Returns a version of `index` with its parameter value incremented by `stepBy`\n * (which can be either positive or negative).\n */\nexport const stepCurveIndexBy = (index, stepBy) => {\n    if (index.parameterValue + stepBy > 1) {\n        return { curveIndex: index.curveIndex + 1, parameterValue: index.parameterValue + stepBy - 1 };\n    }\n    if (index.parameterValue + stepBy < 0) {\n        if (index.curveIndex === 0) {\n            return { curveIndex: 0, parameterValue: 0 };\n        }\n        return { curveIndex: index.curveIndex - 1, parameterValue: index.parameterValue + stepBy + 1 };\n    }\n    return { curveIndex: index.curveIndex, parameterValue: index.parameterValue + stepBy };\n};\n/**\n * Represents a union of lines and curves.\n *\n * To create a path from a string, see {@link fromString}.\n *\n * @example\n * ```ts,runnable,console\n * import {Path, Mat33, Vec2, LineSegment2} from '@js-draw/math';\n *\n * // Creates a path from an SVG path string.\n * // In this case,\n * // 1. Move to (0,0)\n * // 2. Line to (100,0)\n * const path = Path.fromString('M0,0 L100,0');\n *\n * // Logs the distance from (10,0) to the curve 1 unit\n * // away from path. This curve forms a stroke with the path at\n * // its center.\n * const strokeRadius = 1;\n * console.log(path.signedDistance(Vec2.of(10,0), strokeRadius));\n *\n * // Log a version of the path that's scaled by a factor of 4.\n * console.log(path.transformedBy(Mat33.scaling2D(4)).toString());\n *\n * // Log all intersections of a stroked version of the path with\n * // a vertical line segment.\n * // (Try removing the `strokeRadius` parameter).\n * const segment = new LineSegment2(Vec2.of(5, -100), Vec2.of(5, 100));\n * console.log(path.intersection(segment, strokeRadius).map(i => i.point));\n * ```\n */\nexport class Path {\n    /**\n     * Creates a new `Path` that starts at `startPoint` and is made up of the path commands,\n     * `parts`.\n     *\n     * See also {@link fromString}\n     */\n    constructor(startPoint, parts) {\n        this.startPoint = startPoint;\n        this.cachedGeometry = null;\n        this.cachedPolylineApproximation = null;\n        this.cachedStringVersion = null;\n        this.parts = parts;\n        // Initial bounding box contains one point: the start point.\n        this.bbox = Rect2.bboxOf([startPoint]);\n        // Convert into a representation of the geometry (cache for faster intersection\n        // calculation)\n        for (const part of this.parts) {\n            this.bbox = this.bbox.union(Path.computeBBoxForSegment(startPoint, part));\n        }\n    }\n    /**\n     * Computes and returns the full bounding box for this path.\n     *\n     * If a slight over-estimate of a path's bounding box is sufficient, use\n     * {@link bbox} instead.\n     */\n    getExactBBox() {\n        const bboxes = [];\n        for (const part of this.geometry) {\n            bboxes.push(part.getTightBoundingBox());\n        }\n        return Rect2.union(...bboxes);\n    }\n    // Lazy-loads and returns this path's geometry\n    get geometry() {\n        if (this.cachedGeometry) {\n            return this.cachedGeometry;\n        }\n        let startPoint = this.startPoint;\n        const geometry = [];\n        for (const part of this.parts) {\n            let exhaustivenessCheck;\n            switch (part.kind) {\n                case PathCommandType.CubicBezierTo:\n                    geometry.push(new CubicBezier(startPoint, part.controlPoint1, part.controlPoint2, part.endPoint));\n                    startPoint = part.endPoint;\n                    break;\n                case PathCommandType.QuadraticBezierTo:\n                    geometry.push(new QuadraticBezier(startPoint, part.controlPoint, part.endPoint));\n                    startPoint = part.endPoint;\n                    break;\n                case PathCommandType.LineTo:\n                    geometry.push(new LineSegment2(startPoint, part.point));\n                    startPoint = part.point;\n                    break;\n                case PathCommandType.MoveTo:\n                    geometry.push(new PointShape2D(part.point));\n                    startPoint = part.point;\n                    break;\n                default:\n                    exhaustivenessCheck = part;\n                    return exhaustivenessCheck;\n            }\n        }\n        this.cachedGeometry = geometry;\n        return this.cachedGeometry;\n    }\n    /**\n     * Iterates through the start/end points of each component in this path.\n     *\n     * If a start point is equivalent to the end point of the previous segment,\n     * the point is **not** emitted twice.\n     */\n    *startEndPoints() {\n        yield this.startPoint;\n        for (const part of this.parts) {\n            let exhaustivenessCheck;\n            switch (part.kind) {\n                case PathCommandType.CubicBezierTo:\n                    yield part.endPoint;\n                    break;\n                case PathCommandType.QuadraticBezierTo:\n                    yield part.endPoint;\n                    break;\n                case PathCommandType.LineTo:\n                    yield part.point;\n                    break;\n                case PathCommandType.MoveTo:\n                    yield part.point;\n                    break;\n                default:\n                    exhaustivenessCheck = part;\n                    return exhaustivenessCheck;\n            }\n        }\n    }\n    // Approximates this path with a group of line segments.\n    polylineApproximation() {\n        if (this.cachedPolylineApproximation) {\n            return this.cachedPolylineApproximation;\n        }\n        const points = [];\n        for (const part of this.parts) {\n            switch (part.kind) {\n                case PathCommandType.CubicBezierTo:\n                    points.push(part.controlPoint1, part.controlPoint2, part.endPoint);\n                    break;\n                case PathCommandType.QuadraticBezierTo:\n                    points.push(part.controlPoint, part.endPoint);\n                    break;\n                case PathCommandType.MoveTo:\n                case PathCommandType.LineTo:\n                    points.push(part.point);\n                    break;\n            }\n        }\n        const result = [];\n        let prevPoint = this.startPoint;\n        for (const point of points) {\n            result.push(new LineSegment2(prevPoint, point));\n            prevPoint = point;\n        }\n        return result;\n    }\n    static computeBBoxForSegment(startPoint, part) {\n        const points = [startPoint];\n        let exhaustivenessCheck;\n        switch (part.kind) {\n            case PathCommandType.MoveTo:\n            case PathCommandType.LineTo:\n                points.push(part.point);\n                break;\n            case PathCommandType.CubicBezierTo:\n                points.push(part.controlPoint1, part.controlPoint2, part.endPoint);\n                break;\n            case PathCommandType.QuadraticBezierTo:\n                points.push(part.controlPoint, part.endPoint);\n                break;\n            default:\n                exhaustivenessCheck = part;\n                return exhaustivenessCheck;\n        }\n        return Rect2.bboxOf(points);\n    }\n    /**\n     * Returns the signed distance between `point` and a curve `strokeRadius` units\n     * away from this path.\n     *\n     * This returns the **signed distance**, which means that points inside this shape\n     * have their distance negated. For example,\n     * ```ts,runnable,console\n     * import {Path, Vec2} from '@js-draw/math';\n     * console.log(Path.fromString('m0,0 L100,0').signedDistance(Vec2.zero, 1));\n     * ```\n     * would print `-1` because (0,0) is on `m0,0 L100,0` and thus one unit away from its boundary.\n     *\n     * **Note**: `strokeRadius = strokeWidth / 2`\n     */\n    signedDistance(point, strokeRadius) {\n        let minDist = Infinity;\n        for (const part of this.geometry) {\n            const currentDist = part.signedDistance(point) - strokeRadius;\n            if (currentDist < minDist) {\n                minDist = currentDist;\n            }\n        }\n        return minDist;\n    }\n    /**\n     * Let `S` be a closed path a distance `strokeRadius` from this path.\n     *\n     * @returns Approximate intersections of `line` with `S` using ray marching, starting from\n     * \t        both end points of `line` and each point in `additionalRaymarchStartPoints`.\n     */\n    raymarchIntersectionWith(line, strokeRadius, additionalRaymarchStartPoints = []) {\n        // No intersection between bounding boxes: No possible intersection\n        // of the interior.\n        if (!line.bbox.intersects(this.bbox.grownBy(strokeRadius))) {\n            return [];\n        }\n        const lineLength = line.length;\n        const partDistFunctionRecords = [];\n        // Determine distance functions for all parts that the given line could possibly intersect with\n        for (const part of this.geometry) {\n            const bbox = part.getTightBoundingBox().grownBy(strokeRadius);\n            if (!bbox.intersects(line.bbox)) {\n                continue;\n            }\n            // Signed distance function\n            const partDist = (point) => part.signedDistance(point);\n            // Part signed distance function (negative result implies `point` is\n            // inside the shape).\n            const partSdf = (point) => partDist(point) - strokeRadius;\n            // If the line can't possibly intersect the part,\n            if (partSdf(line.p1) > lineLength && partSdf(line.p2) > lineLength) {\n                continue;\n            }\n            partDistFunctionRecords.push({\n                part,\n                distFn: partDist,\n                bbox,\n            });\n        }\n        // If no distance functions, there are no intersections.\n        if (partDistFunctionRecords.length === 0) {\n            return [];\n        }\n        // Returns the minimum distance to a part in this stroke, where only parts that the given\n        // line could intersect are considered.\n        const sdf = (point) => {\n            let minDist = Infinity;\n            let minDistPart = null;\n            const uncheckedDistFunctions = [];\n            // First pass: only curves for which the current point is inside\n            // the bounding box.\n            for (const distFnRecord of partDistFunctionRecords) {\n                const { part, distFn, bbox } = distFnRecord;\n                // Check later if the current point isn't in the bounding box.\n                if (!bbox.containsPoint(point)) {\n                    uncheckedDistFunctions.push(distFnRecord);\n                    continue;\n                }\n                const currentDist = distFn(point);\n                if (currentDist <= minDist) {\n                    minDist = currentDist;\n                    minDistPart = part;\n                }\n            }\n            // Second pass: Everything else\n            for (const { part, distFn, bbox } of uncheckedDistFunctions) {\n                // Skip if impossible for the distance to the target to be lesser than\n                // the current minimum.\n                if (isFinite(minDist) && !bbox.grownBy(minDist).containsPoint(point)) {\n                    continue;\n                }\n                const currentDist = distFn(point);\n                if (currentDist <= minDist) {\n                    minDist = currentDist;\n                    minDistPart = part;\n                }\n            }\n            return [minDistPart, minDist - strokeRadius];\n        };\n        // Raymarch:\n        const maxRaymarchSteps = 8;\n        // Start raymarching from each of these points. This allows detection of multiple\n        // intersections.\n        const startPoints = [line.p1, ...additionalRaymarchStartPoints, line.p2];\n        // Converts a point ON THE LINE to a parameter\n        const pointToParameter = (point) => {\n            // Because line.direction is a unit vector, this computes the length\n            // of the projection of the vector(line.p1->point) onto line.direction.\n            //\n            // Note that this can be negative if the given point is outside of the given\n            // line segment.\n            return point.minus(line.p1).dot(line.direction);\n        };\n        // Sort start points by parameter on the line.\n        // This allows us to determine whether the current value of a parameter\n        // drops down to a value already tested.\n        startPoints.sort((a, b) => {\n            const t_a = pointToParameter(a);\n            const t_b = pointToParameter(b);\n            // Sort in increasing order\n            return t_a - t_b;\n        });\n        const result = [];\n        const stoppingThreshold = strokeRadius / 1000;\n        // Returns the maximum parameter value explored\n        const raymarchFrom = (startPoint, \n        // Direction to march in (multiplies line.direction)\n        directionMultiplier, \n        // Terminate if the current point corresponds to a parameter\n        // below this.\n        minimumLineParameter) => {\n            let currentPoint = startPoint;\n            let [lastPart, lastDist] = sdf(currentPoint);\n            let lastParameter = pointToParameter(currentPoint);\n            if (lastDist > lineLength) {\n                return lastParameter;\n            }\n            const direction = line.direction.times(directionMultiplier);\n            for (let i = 0; i < maxRaymarchSteps; i++) {\n                // Step in the direction of the edge of the shape.\n                const step = lastDist;\n                currentPoint = currentPoint.plus(direction.times(step));\n                lastParameter = pointToParameter(currentPoint);\n                // If we're below the minimum parameter, stop. We've already tried\n                // this.\n                if (lastParameter <= minimumLineParameter) {\n                    return lastParameter;\n                }\n                const [currentPart, signedDist] = sdf(currentPoint);\n                // Ensure we're stepping in the correct direction.\n                // Note that because we could start with a negative distance and work towards a\n                // positive distance, we need absolute values here.\n                if (Math.abs(signedDist) > Math.abs(lastDist)) {\n                    // If not, stop.\n                    return null;\n                }\n                lastDist = signedDist;\n                lastPart = currentPart;\n                // Is the distance close enough that we can stop early?\n                if (Math.abs(lastDist) < stoppingThreshold) {\n                    break;\n                }\n            }\n            // Ensure that the point we ended with is on the line.\n            const isOnLineSegment = lastParameter >= 0 && lastParameter <= lineLength;\n            if (lastPart && isOnLineSegment && Math.abs(lastDist) < stoppingThreshold) {\n                result.push({\n                    point: currentPoint,\n                    parameterValue: lastPart.nearestPointTo(currentPoint).parameterValue,\n                    curve: lastPart,\n                    curveIndex: this.geometry.indexOf(lastPart),\n                });\n                // Slightly increase the parameter value to prevent the same point from being\n                // added to the results twice.\n                const parameterIncrease = strokeRadius / 20 / line.length;\n                lastParameter += isFinite(parameterIncrease) ? parameterIncrease : 0;\n            }\n            return lastParameter;\n        };\n        // The maximum value of the line's parameter explored so far (0 corresponds to\n        // line.p1)\n        let maxLineT = 0;\n        // Raymarch for each start point.\n        //\n        // Use a for (i from 0 to length) loop because startPoints may be added\n        // during iteration.\n        for (let i = 0; i < startPoints.length; i++) {\n            const startPoint = startPoints[i];\n            // Try raymarching in both directions.\n            maxLineT = Math.max(maxLineT, raymarchFrom(startPoint, 1, maxLineT) ?? maxLineT);\n            maxLineT = Math.max(maxLineT, raymarchFrom(startPoint, -1, maxLineT) ?? maxLineT);\n        }\n        return result;\n    }\n    /**\n     * Returns a list of intersections with this path. If `strokeRadius` is given,\n     * intersections are approximated with the surface `strokeRadius` away from this.\n     *\n     * If `strokeRadius > 0`, the resultant `parameterValue` has no defined value.\n     *\n     * **Note**: `strokeRadius` is half of a stroke's width.\n     */\n    intersection(line, strokeRadius) {\n        let result = [];\n        // Is any intersection between shapes within the bounding boxes impossible?\n        if (!line.bbox.intersects(this.bbox.grownBy(strokeRadius ?? 0))) {\n            return [];\n        }\n        if (this.parts.length === 0) {\n            return new Path(this.startPoint, [\n                { kind: PathCommandType.MoveTo, point: this.startPoint },\n            ]).intersection(line, strokeRadius);\n        }\n        let index = 0;\n        for (const part of this.geometry) {\n            const intersections = part.argIntersectsLineSegment(line);\n            for (const intersection of intersections) {\n                result.push({\n                    curve: part,\n                    curveIndex: index,\n                    point: part.at(intersection),\n                    parameterValue: intersection,\n                });\n            }\n            index++;\n        }\n        // If given a non-zero strokeWidth, attempt to raymarch.\n        // Even if raymarching, we need to collect starting points.\n        // We use the above-calculated intersections for this.\n        const doRaymarching = strokeRadius && strokeRadius > 1e-8;\n        if (doRaymarching) {\n            // Starting points for raymarching (in addition to the end points of the line).\n            const startPoints = result.map((intersection) => intersection.point);\n            result = this.raymarchIntersectionWith(line, strokeRadius, startPoints);\n        }\n        return result;\n    }\n    /**\n     * @returns the nearest point on this path to the given `point`.\n     */\n    nearestPointTo(point) {\n        // Find the closest point on this\n        let closestSquareDist = Infinity;\n        let closestPartIndex = 0;\n        let closestParameterValue = 0;\n        let closestPoint = this.startPoint;\n        for (let i = 0; i < this.geometry.length; i++) {\n            const current = this.geometry[i];\n            const nearestPoint = current.nearestPointTo(point);\n            const sqareDist = nearestPoint.point.squareDistanceTo(point);\n            if (i === 0 || sqareDist < closestSquareDist) {\n                closestPartIndex = i;\n                closestSquareDist = sqareDist;\n                closestParameterValue = nearestPoint.parameterValue;\n                closestPoint = nearestPoint.point;\n            }\n        }\n        return {\n            curve: this.geometry[closestPartIndex],\n            curveIndex: closestPartIndex,\n            parameterValue: closestParameterValue,\n            point: closestPoint,\n        };\n    }\n    at(index) {\n        if (index.curveIndex === 0 && index.parameterValue === 0) {\n            return this.startPoint;\n        }\n        return this.geometry[index.curveIndex].at(index.parameterValue);\n    }\n    tangentAt(index) {\n        return this.geometry[index.curveIndex].tangentAt(index.parameterValue);\n    }\n    /** Splits this path in two near the given `point`. */\n    splitNear(point, options) {\n        const nearest = this.nearestPointTo(point);\n        return this.splitAt(nearest, options);\n    }\n    /**\n     * Returns a copy of this path with `deleteFrom` until `deleteUntil` replaced with `insert`.\n     *\n     * This method is analogous to {@link Array.toSpliced}.\n     */\n    spliced(deleteFrom, deleteTo, insert, options) {\n        const isBeforeOrEqual = (a, b) => {\n            return (a.curveIndex < b.curveIndex ||\n                (a.curveIndex === b.curveIndex && a.parameterValue <= b.parameterValue));\n        };\n        if (isBeforeOrEqual(deleteFrom, deleteTo)) {\n            //          deleteFrom        deleteTo\n            //      <---------|             |-------------->\n            //      x                                      x\n            //  startPoint                             endPoint\n            const firstSplit = this.splitAt(deleteFrom, options);\n            const secondSplit = this.splitAt(deleteTo, options);\n            const before = firstSplit[0];\n            const after = secondSplit[secondSplit.length - 1];\n            return insert ? before.union(insert).union(after) : before.union(after);\n        }\n        else {\n            // In this case, we need to handle wrapping at the start/end.\n            //          deleteTo        deleteFrom\n            //      <---------|    keep     |-------------->\n            //      x                                      x\n            //  startPoint                             endPoint\n            const splitAtFrom = this.splitAt([deleteFrom], options);\n            const beforeFrom = splitAtFrom[0];\n            // We need splitNear, rather than splitAt, because beforeFrom does not have\n            // the same indexing as this.\n            const splitAtTo = beforeFrom.splitNear(this.at(deleteTo), options);\n            const betweenBoth = splitAtTo[splitAtTo.length - 1];\n            return insert ? betweenBoth.union(insert) : betweenBoth;\n        }\n    }\n    // @internal\n    splitAt(splitAt, options) {\n        if (!Array.isArray(splitAt)) {\n            splitAt = [splitAt];\n        }\n        splitAt = [...splitAt];\n        splitAt.sort(compareCurveIndices);\n        //\n        // Bounds checking & reversal.\n        //\n        while (splitAt.length > 0 &&\n            splitAt[splitAt.length - 1].curveIndex >= this.parts.length - 1 &&\n            splitAt[splitAt.length - 1].parameterValue >= 1) {\n            splitAt.pop();\n        }\n        splitAt.reverse(); // .reverse() <-- We're `.pop`ing from the end\n        while (splitAt.length > 0 &&\n            splitAt[splitAt.length - 1].curveIndex <= 0 &&\n            splitAt[splitAt.length - 1].parameterValue <= 0) {\n            splitAt.pop();\n        }\n        if (splitAt.length === 0 || this.parts.length === 0) {\n            return [this];\n        }\n        const expectedSplitCount = splitAt.length + 1;\n        const mapNewPoint = options?.mapNewPoint ?? ((p) => p);\n        const result = [];\n        let currentStartPoint = this.startPoint;\n        let currentPath = [];\n        //\n        // Splitting\n        //\n        let { curveIndex, parameterValue } = splitAt.pop();\n        for (let i = 0; i < this.parts.length; i++) {\n            if (i !== curveIndex) {\n                currentPath.push(this.parts[i]);\n            }\n            else {\n                let part = this.parts[i];\n                let geom = this.geometry[i];\n                while (i === curveIndex) {\n                    let newPathStart;\n                    const newPath = [];\n                    switch (part.kind) {\n                        case PathCommandType.MoveTo:\n                            currentPath.push({\n                                kind: part.kind,\n                                point: part.point,\n                            });\n                            newPathStart = part.point;\n                            break;\n                        case PathCommandType.LineTo:\n                            {\n                                const split = geom.splitAt(parameterValue);\n                                currentPath.push({\n                                    kind: part.kind,\n                                    point: mapNewPoint(split[0].p2),\n                                });\n                                newPathStart = split[0].p2;\n                                if (split.length > 1) {\n                                    console.assert(split.length === 2);\n                                    newPath.push({\n                                        kind: part.kind,\n                                        // Don't map: For lines, the end point of the split is\n                                        // the same as the end point of the original:\n                                        point: split[1].p2,\n                                    });\n                                    geom = split[1];\n                                }\n                            }\n                            break;\n                        case PathCommandType.QuadraticBezierTo:\n                        case PathCommandType.CubicBezierTo:\n                            {\n                                const split = geom.splitAt(parameterValue);\n                                let isFirstPart = split.length === 2;\n                                for (const segment of split) {\n                                    geom = segment;\n                                    const targetArray = isFirstPart ? currentPath : newPath;\n                                    const controlPoints = segment.getPoints();\n                                    if (part.kind === PathCommandType.CubicBezierTo) {\n                                        targetArray.push({\n                                            kind: part.kind,\n                                            controlPoint1: mapNewPoint(controlPoints[1]),\n                                            controlPoint2: mapNewPoint(controlPoints[2]),\n                                            endPoint: mapNewPoint(controlPoints[3]),\n                                        });\n                                    }\n                                    else {\n                                        targetArray.push({\n                                            kind: part.kind,\n                                            controlPoint: mapNewPoint(controlPoints[1]),\n                                            endPoint: mapNewPoint(controlPoints[2]),\n                                        });\n                                    }\n                                    // We want the start of the new path to match the start of the\n                                    // FIRST Bézier in the NEW path.\n                                    if (!isFirstPart) {\n                                        newPathStart = controlPoints[0];\n                                    }\n                                    isFirstPart = false;\n                                }\n                            }\n                            break;\n                        default: {\n                            const exhaustivenessCheck = part;\n                            return exhaustivenessCheck;\n                        }\n                    }\n                    result.push(new Path(currentStartPoint, [...currentPath]));\n                    currentStartPoint = mapNewPoint(newPathStart);\n                    console.assert(!!currentStartPoint, 'should have a start point');\n                    currentPath = newPath;\n                    part = newPath[newPath.length - 1] ?? part;\n                    const nextSplit = splitAt.pop();\n                    if (!nextSplit) {\n                        break;\n                    }\n                    else {\n                        curveIndex = nextSplit.curveIndex;\n                        if (i === curveIndex) {\n                            const originalPoint = this.at(nextSplit);\n                            parameterValue = geom.nearestPointTo(originalPoint).parameterValue;\n                            currentPath = [];\n                        }\n                        else {\n                            parameterValue = nextSplit.parameterValue;\n                        }\n                    }\n                }\n            }\n        }\n        result.push(new Path(currentStartPoint, currentPath));\n        console.assert(result.length === expectedSplitCount, `should split into splitAt.length + 1 splits (was ${result.length}, expected ${expectedSplitCount})`);\n        return result;\n    }\n    /**\n     * Replaces all `MoveTo` commands with `LineTo` commands and connects the end point of this\n     * path to the start point.\n     */\n    asClosed() {\n        const newParts = [];\n        let hasChanges = false;\n        for (const part of this.parts) {\n            if (part.kind === PathCommandType.MoveTo) {\n                newParts.push({\n                    kind: PathCommandType.LineTo,\n                    point: part.point,\n                });\n                hasChanges = true;\n            }\n            else {\n                newParts.push(part);\n            }\n        }\n        if (!this.getEndPoint().eq(this.startPoint)) {\n            newParts.push({\n                kind: PathCommandType.LineTo,\n                point: this.startPoint,\n            });\n            hasChanges = true;\n        }\n        if (!hasChanges) {\n            return this;\n        }\n        const result = new Path(this.startPoint, newParts);\n        console.assert(result.getEndPoint().eq(result.startPoint));\n        return result;\n    }\n    static mapPathCommand(part, mapping) {\n        switch (part.kind) {\n            case PathCommandType.MoveTo:\n            case PathCommandType.LineTo:\n                return {\n                    kind: part.kind,\n                    point: mapping(part.point),\n                };\n                break;\n            case PathCommandType.CubicBezierTo:\n                return {\n                    kind: part.kind,\n                    controlPoint1: mapping(part.controlPoint1),\n                    controlPoint2: mapping(part.controlPoint2),\n                    endPoint: mapping(part.endPoint),\n                };\n                break;\n            case PathCommandType.QuadraticBezierTo:\n                return {\n                    kind: part.kind,\n                    controlPoint: mapping(part.controlPoint),\n                    endPoint: mapping(part.endPoint),\n                };\n                break;\n        }\n        const exhaustivenessCheck = part;\n        return exhaustivenessCheck;\n    }\n    mapPoints(mapping) {\n        const startPoint = mapping(this.startPoint);\n        const newParts = [];\n        for (const part of this.parts) {\n            newParts.push(Path.mapPathCommand(part, mapping));\n        }\n        return new Path(startPoint, newParts);\n    }\n    transformedBy(affineTransfm) {\n        if (affineTransfm.isIdentity()) {\n            return this;\n        }\n        return this.mapPoints((point) => affineTransfm.transformVec2(point));\n    }\n    /**\n     * @internal -- TODO: This method may have incorrect output in some cases.\n     */\n    closedContainsPoint(point) {\n        const bbox = this.getExactBBox();\n        if (!bbox.containsPoint(point)) {\n            return false;\n        }\n        const pointOutside = point.plus(Vec2.of(bbox.width, 0));\n        const asClosed = this.asClosed();\n        const lineToOutside = new LineSegment2(point, pointOutside);\n        const intersections = asClosed.intersection(lineToOutside);\n        const filteredIntersections = intersections.filter((intersection, index) => {\n            if (index === 0)\n                return true; // No previous\n            const previousIntersection = intersections[index - 1];\n            const isRepeatedIntersection = previousIntersection.parameterValue >= 1 && intersection.parameterValue <= 0;\n            return !isRepeatedIntersection;\n        });\n        return filteredIntersections.length % 2 === 1;\n    }\n    /**\n     * @returns `true` if this path (interpreted as a closed path) contains the given rectangle.\n     */\n    closedContainsRect(rect) {\n        if (!this.bbox.containsRect(rect))\n            return false;\n        if (!rect.corners.every((corner) => this.closedContainsPoint(corner)))\n            return false;\n        for (const edge of rect.getEdges()) {\n            if (this.intersection(edge).length) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Creates a new path by joining [other] to the end of this path\n    union(other, \n    // allowReverse: true iff reversing other or this is permitted if it means\n    //               no moveTo command is necessary when unioning the paths.\n    options = { allowReverse: true }) {\n        if (!other) {\n            return this;\n        }\n        if (Array.isArray(other)) {\n            return new Path(this.startPoint, [...this.parts, ...other]);\n        }\n        const thisEnd = this.getEndPoint();\n        let newParts = [];\n        if (thisEnd.eq(other.startPoint)) {\n            newParts = this.parts.concat(other.parts);\n        }\n        else if (options.allowReverse && this.startPoint.eq(other.getEndPoint())) {\n            return other.union(this, { allowReverse: false });\n        }\n        else if (options.allowReverse && this.startPoint.eq(other.startPoint)) {\n            return this.union(other.reversed(), { allowReverse: false });\n        }\n        else {\n            newParts = [\n                ...this.parts,\n                {\n                    kind: PathCommandType.MoveTo,\n                    point: other.startPoint,\n                },\n                ...other.parts,\n            ];\n        }\n        return new Path(this.startPoint, newParts);\n    }\n    /**\n     * @returns a version of this path with the direction reversed.\n     *\n     * Example:\n     * ```ts,runnable,console\n     * import {Path} from '@js-draw/math';\n     * console.log(Path.fromString('m0,0l1,1').reversed()); // -> M1,1 L0,0\n     * ```\n     */\n    reversed() {\n        const newStart = this.getEndPoint();\n        const newParts = [];\n        let lastPoint = this.startPoint;\n        for (const part of this.parts) {\n            switch (part.kind) {\n                case PathCommandType.LineTo:\n                case PathCommandType.MoveTo:\n                    newParts.push({\n                        kind: part.kind,\n                        point: lastPoint,\n                    });\n                    lastPoint = part.point;\n                    break;\n                case PathCommandType.CubicBezierTo:\n                    newParts.push({\n                        kind: part.kind,\n                        controlPoint1: part.controlPoint2,\n                        controlPoint2: part.controlPoint1,\n                        endPoint: lastPoint,\n                    });\n                    lastPoint = part.endPoint;\n                    break;\n                case PathCommandType.QuadraticBezierTo:\n                    newParts.push({\n                        kind: part.kind,\n                        controlPoint: part.controlPoint,\n                        endPoint: lastPoint,\n                    });\n                    lastPoint = part.endPoint;\n                    break;\n                default: {\n                    const exhaustivenessCheck = part;\n                    return exhaustivenessCheck;\n                }\n            }\n        }\n        newParts.reverse();\n        return new Path(newStart, newParts);\n    }\n    /** Computes and returns the end point of this path */\n    getEndPoint() {\n        if (this.parts.length === 0) {\n            return this.startPoint;\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        if (lastPart.kind === PathCommandType.QuadraticBezierTo ||\n            lastPart.kind === PathCommandType.CubicBezierTo) {\n            return lastPart.endPoint;\n        }\n        else {\n            return lastPart.point;\n        }\n    }\n    /**\n     * Like {@link closedRoughlyIntersects} except takes stroke width into account.\n     *\n     * This is intended to be a very fast and rough approximation. Use {@link intersection}\n     * and {@link signedDistance} for more accurate (but much slower) intersection calculations.\n     *\n     * **Note**: Unlike other methods, this accepts `strokeWidth` (and not `strokeRadius`).\n     *\n     * `strokeRadius` is half of `strokeWidth`.\n     */\n    roughlyIntersects(rect, strokeWidth = 0) {\n        if (this.parts.length === 0) {\n            return rect.containsPoint(this.startPoint);\n        }\n        const isClosed = this.startPoint.eq(this.getEndPoint());\n        if (isClosed && strokeWidth === 0) {\n            return this.closedRoughlyIntersects(rect);\n        }\n        if (rect.containsRect(this.bbox)) {\n            return true;\n        }\n        // Does the rectangle intersect the bounding boxes of any of this' parts?\n        let startPoint = this.startPoint;\n        for (const part of this.parts) {\n            const bbox = Path.computeBBoxForSegment(startPoint, part).grownBy(strokeWidth);\n            if (part.kind === PathCommandType.LineTo || part.kind === PathCommandType.MoveTo) {\n                startPoint = part.point;\n            }\n            else {\n                startPoint = part.endPoint;\n            }\n            if (rect.intersects(bbox)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Treats this as a closed path and returns true if part of `rect` is *roughly* within\n     * this path's interior.\n     *\n     * **Note**: Assumes that this is a closed, non-self-intersecting path.\n     */\n    closedRoughlyIntersects(rect) {\n        if (rect.containsRect(this.bbox)) {\n            return true;\n        }\n        // Choose a point outside of the path.\n        const startPt = this.bbox.topLeft.minus(Vec2.of(1, 1));\n        const testPts = rect.corners;\n        const polygon = this.polylineApproximation();\n        for (const point of testPts) {\n            const testLine = new LineSegment2(point, startPt);\n            let intersectionCount = 0;\n            for (const line of polygon) {\n                if (line.intersects(testLine)) {\n                    intersectionCount++;\n                }\n            }\n            // Odd? The point is within the polygon!\n            if (intersectionCount % 2 === 1) {\n                return true;\n            }\n        }\n        // Grow the rectangle for possible additional precision.\n        const grownRect = rect.grownBy(Math.min(rect.size.x, rect.size.y));\n        const edges = [];\n        for (const subrect of grownRect.divideIntoGrid(4, 4)) {\n            edges.push(...subrect.getEdges());\n        }\n        for (const edge of edges) {\n            for (const line of polygon) {\n                if (edge.intersects(line)) {\n                    return true;\n                }\n            }\n        }\n        // Even? Probably no intersection.\n        return false;\n    }\n    /** @returns true if all points on this are equivalent to the points on `other` */\n    eq(other, tolerance) {\n        if (other.parts.length !== this.parts.length) {\n            return false;\n        }\n        for (let i = 0; i < this.parts.length; i++) {\n            const part1 = this.parts[i];\n            const part2 = other.parts[i];\n            switch (part1.kind) {\n                case PathCommandType.LineTo:\n                case PathCommandType.MoveTo:\n                    if (part1.kind !== part2.kind) {\n                        return false;\n                    }\n                    else if (!part1.point.eq(part2.point, tolerance)) {\n                        return false;\n                    }\n                    break;\n                case PathCommandType.CubicBezierTo:\n                    if (part1.kind !== part2.kind) {\n                        return false;\n                    }\n                    else if (!part1.controlPoint1.eq(part2.controlPoint1, tolerance) ||\n                        !part1.controlPoint2.eq(part2.controlPoint2, tolerance) ||\n                        !part1.endPoint.eq(part2.endPoint, tolerance)) {\n                        return false;\n                    }\n                    break;\n                case PathCommandType.QuadraticBezierTo:\n                    if (part1.kind !== part2.kind) {\n                        return false;\n                    }\n                    else if (!part1.controlPoint.eq(part2.controlPoint, tolerance) ||\n                        !part1.endPoint.eq(part2.endPoint, tolerance)) {\n                        return false;\n                    }\n                    break;\n                default: {\n                    const exhaustivenessCheck = part1;\n                    return exhaustivenessCheck;\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns a path that outlines `rect`.\n     *\n     * If `lineWidth` is given, the resultant path traces a `lineWidth` thick\n     * border around `rect`. Otherwise, the resultant path is just the border\n     * of `rect`.\n     */\n    static fromRect(rect, lineWidth = null) {\n        const commands = [];\n        let corners;\n        let startPoint;\n        if (lineWidth !== null) {\n            // Vector from the top left corner or bottom right corner to the edge of the\n            // stroked region.\n            const cornerToEdge = Vec2.of(lineWidth, lineWidth).times(0.5);\n            const innerRect = Rect2.fromCorners(rect.topLeft.plus(cornerToEdge), rect.bottomRight.minus(cornerToEdge));\n            const outerRect = Rect2.fromCorners(rect.topLeft.minus(cornerToEdge), rect.bottomRight.plus(cornerToEdge));\n            corners = [innerRect.corners[3], ...innerRect.corners, ...outerRect.corners.reverse()];\n            startPoint = outerRect.corners[3];\n        }\n        else {\n            corners = rect.corners.slice(1);\n            startPoint = rect.corners[0];\n        }\n        for (const corner of corners) {\n            commands.push({\n                kind: PathCommandType.LineTo,\n                point: corner,\n            });\n        }\n        // Close the shape\n        commands.push({\n            kind: PathCommandType.LineTo,\n            point: startPoint,\n        });\n        return new Path(startPoint, commands);\n    }\n    /**\n     * Convert to an [SVG path representation](https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths).\n     *\n     * If `useNonAbsCommands` is given, relative path commands (e.g. `l10,0`) are to be used instead of\n     * absolute commands (e.g. `L10,0`).\n     *\n     * See also {@link fromString}.\n     */\n    toString(useNonAbsCommands, ignoreCache = false) {\n        if (this.cachedStringVersion && !ignoreCache) {\n            return this.cachedStringVersion;\n        }\n        if (useNonAbsCommands === undefined) {\n            // Hueristic: Try to determine whether converting absolute to relative commands is worth it.\n            useNonAbsCommands = Math.abs(this.bbox.topLeft.x) > 10 && Math.abs(this.bbox.topLeft.y) > 10;\n        }\n        const result = Path.toString(this.startPoint, this.parts, !useNonAbsCommands);\n        this.cachedStringVersion = result;\n        return result;\n    }\n    serialize() {\n        return this.toString();\n    }\n    // @param onlyAbsCommands - True if we should avoid converting absolute coordinates to relative offsets -- such\n    //   conversions can lead to smaller output strings, but also take time.\n    static toString(startPoint, parts, onlyAbsCommands) {\n        const result = [];\n        let prevPoint;\n        const addCommand = (command, ...points) => {\n            const absoluteCommandParts = [];\n            const relativeCommandParts = [];\n            const makeAbsCommand = !prevPoint || onlyAbsCommands;\n            const roundedPrevX = prevPoint ? toRoundedString(prevPoint.x) : '';\n            const roundedPrevY = prevPoint ? toRoundedString(prevPoint.y) : '';\n            for (const point of points) {\n                const xComponent = toRoundedString(point.x);\n                const yComponent = toRoundedString(point.y);\n                // Relative commands are often shorter as strings than absolute commands.\n                if (!makeAbsCommand) {\n                    const xComponentRelative = toStringOfSamePrecision(point.x - prevPoint.x, xComponent, roundedPrevX, roundedPrevY);\n                    const yComponentRelative = toStringOfSamePrecision(point.y - prevPoint.y, yComponent, roundedPrevX, roundedPrevY);\n                    // No need for an additional separator if it starts with a '-'\n                    if (yComponentRelative.charAt(0) === '-') {\n                        relativeCommandParts.push(`${xComponentRelative}${yComponentRelative}`);\n                    }\n                    else {\n                        relativeCommandParts.push(`${xComponentRelative},${yComponentRelative}`);\n                    }\n                }\n                else {\n                    absoluteCommandParts.push(`${xComponent},${yComponent}`);\n                }\n            }\n            let commandString;\n            if (makeAbsCommand) {\n                commandString = `${command}${absoluteCommandParts.join(' ')}`;\n            }\n            else {\n                commandString = `${command.toLowerCase()}${relativeCommandParts.join(' ')}`;\n            }\n            // Don't add no-ops.\n            if (commandString === 'l0,0' || commandString === 'm0,0') {\n                return;\n            }\n            result.push(commandString);\n            if (points.length > 0) {\n                prevPoint = points[points.length - 1];\n            }\n        };\n        // Don't add two moveTos in a row (this can happen if\n        // the start point corresponds to a moveTo _and_ the first command is\n        // also a moveTo)\n        if (parts[0]?.kind !== PathCommandType.MoveTo) {\n            addCommand('M', startPoint);\n        }\n        let exhaustivenessCheck;\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            switch (part.kind) {\n                case PathCommandType.MoveTo:\n                    addCommand('M', part.point);\n                    break;\n                case PathCommandType.LineTo:\n                    addCommand('L', part.point);\n                    break;\n                case PathCommandType.CubicBezierTo:\n                    addCommand('C', part.controlPoint1, part.controlPoint2, part.endPoint);\n                    break;\n                case PathCommandType.QuadraticBezierTo:\n                    addCommand('Q', part.controlPoint, part.endPoint);\n                    break;\n                default:\n                    exhaustivenessCheck = part;\n                    return exhaustivenessCheck;\n            }\n        }\n        return result.join('');\n    }\n    /**\n     * Create a `Path` from a subset of the SVG path specification.\n     *\n     * Currently, this does not support elliptical arcs or `s` and `t` command\n     * shorthands. See https://github.com/personalizedrefrigerator/js-draw/pull/19.\n     *\n     * @example\n     * ```ts,runnable,console\n     * import { Path } from '@js-draw/math';\n     *\n     * const path = Path.fromString('m0,0l100,100');\n     * console.log(path.toString(true)); // true: Prefer relative to absolute path commands\n     * ```\n     */\n    static fromString(pathString) {\n        // TODO: Support elliptical arcs, and the `s`, `t` command shorthands.\n        //\n        // See the MDN reference:\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d\n        // and\n        // https://www.w3.org/TR/SVG2/paths.html\n        // Remove linebreaks\n        pathString = pathString.split('\\n').join(' ');\n        let lastPos = Vec2.zero;\n        let firstPos = null;\n        let startPos = null;\n        let isFirstCommand = true;\n        const commands = [];\n        const moveTo = (point) => {\n            // The first moveTo/lineTo is already handled by the [startPoint] parameter of the Path constructor.\n            if (isFirstCommand) {\n                isFirstCommand = false;\n                return;\n            }\n            commands.push({\n                kind: PathCommandType.MoveTo,\n                point,\n            });\n        };\n        const lineTo = (point) => {\n            if (isFirstCommand) {\n                isFirstCommand = false;\n                return;\n            }\n            commands.push({\n                kind: PathCommandType.LineTo,\n                point,\n            });\n        };\n        const cubicBezierTo = (cp1, cp2, end) => {\n            commands.push({\n                kind: PathCommandType.CubicBezierTo,\n                controlPoint1: cp1,\n                controlPoint2: cp2,\n                endPoint: end,\n            });\n        };\n        const quadraticBeierTo = (controlPoint, endPoint) => {\n            commands.push({\n                kind: PathCommandType.QuadraticBezierTo,\n                controlPoint,\n                endPoint,\n            });\n        };\n        const commandArgCounts = {\n            m: 1,\n            l: 1,\n            c: 3,\n            q: 2,\n            z: 0,\n            h: 1,\n            v: 1,\n        };\n        // Each command: Command character followed by anything that isn't a command character\n        const commandExp = /([MZLHVCSQTA])\\s*([^MZLHVCSQTA]*)/gi;\n        let current;\n        while ((current = commandExp.exec(pathString)) !== null) {\n            const argParts = current[2]\n                .trim()\n                .split(/[^0-9Ee.-]/)\n                .filter((part) => part.length > 0)\n                .reduce((accumualtor, current) => {\n                // As of 09/2022, iOS Safari doesn't support support lookbehind in regular\n                // expressions. As such, we need an alternative.\n                // Because '-' can be used as a path separator, unless preceeded by an 'e' (as in 1e-5),\n                // we need special cases:\n                current = current.replace(/([^eE])[-]/g, '$1 -');\n                const parts = current.split(' -');\n                if (parts[0] !== '') {\n                    accumualtor.push(parts[0]);\n                }\n                accumualtor.push(...parts.slice(1).map((part) => `-${part}`));\n                return accumualtor;\n            }, []);\n            let numericArgs = argParts.map((arg) => parseFloat(arg));\n            let commandChar = current[1].toLowerCase();\n            let uppercaseCommand = current[1] !== commandChar;\n            // Convert commands that don't take points into commands that do.\n            if (commandChar === 'v' || commandChar === 'h') {\n                numericArgs = numericArgs.reduce((accumulator, current) => {\n                    if (commandChar === 'v') {\n                        return accumulator.concat(uppercaseCommand ? lastPos.x : 0, current);\n                    }\n                    else {\n                        return accumulator.concat(current, uppercaseCommand ? lastPos.y : 0);\n                    }\n                }, []);\n                commandChar = 'l';\n            }\n            else if (commandChar === 'z') {\n                if (firstPos) {\n                    numericArgs = [firstPos.x, firstPos.y];\n                    firstPos = lastPos;\n                }\n                else {\n                    continue;\n                }\n                // 'z' always acts like an uppercase lineTo(startPos)\n                uppercaseCommand = true;\n                commandChar = 'l';\n            }\n            const commandArgCount = commandArgCounts[commandChar] ?? 0;\n            const allArgs = numericArgs\n                .reduce((accumulator, current, index, parts) => {\n                if (index % 2 !== 0) {\n                    const currentAsFloat = current;\n                    const prevAsFloat = parts[index - 1];\n                    return accumulator.concat(Vec2.of(prevAsFloat, currentAsFloat));\n                }\n                else {\n                    return accumulator;\n                }\n            }, [])\n                .map((coordinate, index) => {\n                // Lowercase commands are relative, uppercase commands use absolute\n                // positioning\n                let newPos;\n                if (uppercaseCommand) {\n                    newPos = coordinate;\n                }\n                else {\n                    newPos = lastPos.plus(coordinate);\n                }\n                if ((index + 1) % commandArgCount === 0) {\n                    lastPos = newPos;\n                }\n                return newPos;\n            });\n            if (allArgs.length % commandArgCount !== 0) {\n                throw new Error([\n                    `Incorrect number of arguments: got ${JSON.stringify(allArgs)} with a length of ${allArgs.length} ≠ ${commandArgCount}k, k ∈ ℤ.`,\n                    `The number of arguments to ${commandChar} must be a multiple of ${commandArgCount}!`,\n                    `Command: ${current[0]}`,\n                ].join('\\n'));\n            }\n            for (let argPos = 0; argPos < allArgs.length; argPos += commandArgCount) {\n                const args = allArgs.slice(argPos, argPos + commandArgCount);\n                switch (commandChar.toLowerCase()) {\n                    case 'm':\n                        if (argPos === 0) {\n                            moveTo(args[0]);\n                        }\n                        else {\n                            lineTo(args[0]);\n                        }\n                        break;\n                    case 'l':\n                        lineTo(args[0]);\n                        break;\n                    case 'c':\n                        cubicBezierTo(args[0], args[1], args[2]);\n                        break;\n                    case 'q':\n                        quadraticBeierTo(args[0], args[1]);\n                        break;\n                    default:\n                        throw new Error(`Unknown path command ${commandChar}`);\n                }\n                isFirstCommand = false;\n            }\n            if (allArgs.length > 0) {\n                firstPos ??= allArgs[0];\n                startPos ??= firstPos;\n                lastPos = allArgs[allArgs.length - 1];\n            }\n        }\n        const result = new Path(startPos ?? Vec2.zero, commands);\n        result.cachedStringVersion = pathString;\n        return result;\n    }\n    static fromConvexHullOf(points) {\n        if (points.length === 0) {\n            return Path.empty;\n        }\n        const hull = convexHull2Of(points);\n        const commands = hull.slice(1).map((p) => ({\n            kind: PathCommandType.LineTo,\n            point: p,\n        }));\n        // Close -- connect back to the start\n        commands.push({\n            kind: PathCommandType.LineTo,\n            point: hull[0],\n        });\n        return new Path(hull[0], commands);\n    }\n}\n// @internal TODO: At present, this isn't really an empty path.\nPath.empty = new Path(Vec2.zero, []);\nexport default Path;\n", "import  Vec3  from './Vec3.mjs';\n/**\n * Represents a color.\n *\n * @example\n * ```ts,runnable,console\n * import { Color4 } from '@js-draw/math';\n *\n * console.log('Red:', Color4.fromString('#f00'));\n * console.log('Also red:', Color4.ofRGB(1, 0, 0), Color4.red);\n * console.log('Mixing red and blue:', Color4.red.mix(Color4.blue, 0.5));\n * console.log('To string:', Color4.orange.toHexString());\n * ```\n */\nexport class Color4 {\n    constructor(\n    /** Red component. Should be in the range [0, 1]. */\n    r, \n    /** Green component. ${\\tt g} \\in [0, 1]$ */\n    g, \n    /** Blue component. ${\\tt b} \\in [0, 1]$ */\n    b, \n    /** Alpha/transparent component. ${\\tt a} \\in [0, 1]$. 0 = transparent */\n    a) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n        this.hexString = null;\n    }\n    /**\n     * Create a color from red, green, blue components. The color is fully opaque (`a = 1.0`).\n     *\n     * Each component should be in the range [0, 1].\n     */\n    static ofRGB(red, green, blue) {\n        return Color4.ofRGBA(red, green, blue, 1.0);\n    }\n    /**\n     * Creates a color from red, green, blue, and transparency components. Each component should\n     * be in the range $[0, 1]$.\n     */\n    static ofRGBA(red, green, blue, alpha) {\n        red = Math.max(0, Math.min(red, 1));\n        green = Math.max(0, Math.min(green, 1));\n        blue = Math.max(0, Math.min(blue, 1));\n        alpha = Math.max(0, Math.min(alpha, 1));\n        return new Color4(red, green, blue, alpha);\n    }\n    /**\n     * Creates a color from an RGB (or RGBA) array.\n     *\n     * This is similar to {@link ofRGB} and {@link ofRGBA}, but, by default, takes values\n     * that range from 0 to 255.\n     *\n     * If the array values instead range from 0-1, pass `maxValue` as `1`.\n     */\n    static fromRGBArray(array, maxValue = 255) {\n        const red = array[0];\n        const green = array[1] ?? red;\n        const blue = array[2] ?? red;\n        let alpha = 255;\n        if (3 < array.length) {\n            alpha = array[3];\n        }\n        return Color4.ofRGBA(red / maxValue, green / maxValue, blue / maxValue, alpha / maxValue);\n    }\n    /**\n     * Creates a `Color4` from a three or four-component hexadecimal\n     * [color string](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet).\n     *\n     * Example:\n     * ```ts,runnable,console\n     * import { Color4 } from '@js-draw/math';\n     * console.log(Color4.fromHex('#ff0'));\n     * ```\n     */\n    static fromHex(hexString) {\n        // Remove starting '#' (if present)\n        hexString = (hexString.match(/^[#]?(.*)$/) ?? [])[1];\n        hexString = hexString.toUpperCase();\n        if (!hexString.match(/^[0-9A-F]+$/)) {\n            throw new Error(`${hexString} is not in a valid format.`);\n        }\n        // RGBA or RGB\n        if (hexString.length === 3 || hexString.length === 4) {\n            // Each character is a component\n            const components = hexString.split('');\n            // Convert to RRGGBBAA or RRGGBB format\n            hexString = components.map((component) => `${component}0`).join('');\n        }\n        if (hexString.length === 6) {\n            // Alpha component\n            hexString += 'FF';\n        }\n        const components = [];\n        for (let i = 2; i <= hexString.length; i += 2) {\n            const chunk = hexString.substring(i - 2, i);\n            components.push(parseInt(chunk, 16) / 255);\n        }\n        if (components.length !== 4) {\n            throw new Error(`Unable to parse ${hexString}: Wrong number of components.`);\n        }\n        return Color4.ofRGBA(components[0], components[1], components[2], components[3]);\n    }\n    /** Like {@link fromHex}, but can handle additional colors if an `HTMLCanvasElement` is available. */\n    static fromString(text) {\n        if (text.startsWith('#')) {\n            return Color4.fromHex(text);\n        }\n        if (text === 'none' || text === 'transparent') {\n            return Color4.transparent;\n        }\n        if (text === '') {\n            return Color4.black;\n        }\n        // rgba?: Match both rgb and rgba strings.\n        // ([,0-9.]+): Match any string of only numeric, '.' and ',' characters.\n        const rgbRegex = /^rgba?\\(([,0-9.]+)\\)$/i;\n        const rgbMatch = text.replace(/\\s*/g, '').match(rgbRegex);\n        if (rgbMatch) {\n            const componentsListStr = rgbMatch[1];\n            const componentsList = JSON.parse(`[ ${componentsListStr} ]`);\n            if (componentsList.length === 3) {\n                return Color4.ofRGB(componentsList[0] / 255, componentsList[1] / 255, componentsList[2] / 255);\n            }\n            else if (componentsList.length === 4) {\n                return Color4.ofRGBA(componentsList[0] / 255, componentsList[1] / 255, componentsList[2] / 255, componentsList[3]);\n            }\n            else {\n                throw new Error(`RGB string, ${text}, has wrong number of components: ${componentsList.length}`);\n            }\n        }\n        // Otherwise, try to use an HTMLCanvasElement to determine the color.\n        // Note: We may be unable to create an HTMLCanvasElement if running as a unit test.\n        const canvas = document.createElement('canvas');\n        canvas.width = 1;\n        canvas.height = 1;\n        const ctx = canvas.getContext('2d');\n        // Default to black if no canvas is available.\n        if (!ctx) {\n            return Color4.black;\n        }\n        ctx.fillStyle = text;\n        ctx.fillRect(0, 0, 1, 1);\n        const data = ctx.getImageData(0, 0, 1, 1);\n        const red = data.data[0] / 255;\n        const green = data.data[1] / 255;\n        const blue = data.data[2] / 255;\n        const alpha = data.data[3] / 255;\n        return Color4.ofRGBA(red, green, blue, alpha);\n    }\n    /** @returns true if `this` and `other` are approximately equal. */\n    eq(other) {\n        if (other == null) {\n            return false;\n        }\n        // If both completely transparent,\n        if (this.a === 0 && other.a === 0) {\n            return true;\n        }\n        return this.toHexString() === other.toHexString();\n    }\n    /**\n     * If `fractionTo` is not in the range $[0, 1]$, it will be clamped to the nearest number\n     * in that range. For example, `a.mix(b, -1)` is equivalent to `a.mix(b, 0)`.\n     *\n     * @returns a color `fractionTo` of the way from this color to `other`.\n     *\n     * @example\n     * ```ts\n     * Color4.ofRGB(1, 0, 0).mix(Color4.ofRGB(0, 1, 0), 0.1) // -> Color4(0.9, 0.1, 0)\n     * ```\n     */\n    mix(other, fractionTo) {\n        fractionTo = Math.min(Math.max(fractionTo, 0), 1);\n        const fractionOfThis = 1 - fractionTo;\n        return new Color4(this.r * fractionOfThis + other.r * fractionTo, this.g * fractionOfThis + other.g * fractionTo, this.b * fractionOfThis + other.b * fractionTo, this.a * fractionOfThis + other.a * fractionTo);\n    }\n    /** Returns a new color with a different opacity. */\n    withAlpha(a) {\n        return new Color4(this.r, this.g, this.b, a);\n    }\n    /**\n     * Ignoring this color's alpha component, returns a vector with components,\n     * $$\n     * \\begin{pmatrix} \\colorbox{#F44}{\\tt r} \\\\ \\colorbox{#4F4}{\\tt g} \\\\ \\colorbox{#44F}{\\tt b} \\end{pmatrix}\n     * $$\n     */\n    get rgb() {\n        return Vec3.of(this.r, this.g, this.b);\n    }\n    /**\n     * Returns the [relative luminance](https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef)\n     * of this color in the sRGB color space.\n     *\n     * Ignores the alpha component.\n     */\n    relativeLuminance() {\n        // References:\n        // - https://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        // - https://stackoverflow.com/a/9733420\n        // Normalize the components, as per above\n        const components = [this.r, this.g, this.b].map((component) => {\n            if (component < 0.03928) {\n                return component / 12.92;\n            }\n            else {\n                return Math.pow((component + 0.055) / 1.055, 2.4);\n            }\n        });\n        // From w3.org,\n        // > For the sRGB colorspace, the relative luminance of a color is\n        // > defined as L = 0.2126 * R + 0.7152 * G + 0.0722 * B\n        // where R, G, B are defined in components above.\n        return 0.2126 * components[0] + 0.7152 * components[1] + 0.0722 * components[2];\n    }\n    /**\n     * Returns the [contrast ratio](https://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef)\n     * between `colorA` and `colorB`.\n     */\n    static contrastRatio(colorA, colorB) {\n        const L1 = colorA.relativeLuminance();\n        const L2 = colorB.relativeLuminance();\n        return (Math.max(L1, L2) + 0.05) / (Math.min(L1, L2) + 0.05);\n    }\n    /**\n     * @returns the component-wise average of `colors`, or `Color4.transparent` if `colors` is empty.\n     */\n    static average(colors) {\n        let averageA = 0;\n        let averageR = 0;\n        let averageG = 0;\n        let averageB = 0;\n        for (const color of colors) {\n            averageA += color.a;\n            averageR += color.r;\n            averageG += color.g;\n            averageB += color.b;\n        }\n        if (colors.length > 0) {\n            averageA /= colors.length;\n            averageR /= colors.length;\n            averageG /= colors.length;\n            averageB /= colors.length;\n        }\n        return new Color4(averageR, averageG, averageB, averageA);\n    }\n    /**\n     * Converts to (hue, saturation, value).\n     * See also https://en.wikipedia.org/wiki/HSL_and_HSV#General_approach\n     *\n     * The resultant hue is represented in radians and is thus in $[0, 2\\pi]$.\n     */\n    asHSV() {\n        // Ref: https://en.wikipedia.org/wiki/HSL_and_HSV#General_approach\n        //\n        // HUE:\n        // First, consider the unit cube. Rotate it such that one vertex is at the origin\n        // of a plane and its three neighboring vertices are equidistant from that plane:\n        //\n        //         /\\\n        //       /  | \\\n        //   2 /    3   \\ 1\n        //     \\    |   /\n        //       \\  | /\n        //   .     \\/      .\n        //\n        //        .\n        //\n        // Let z be up and (x, y, 0) be in the plane.\n        //\n        // Label vectors 1,2,3 with R, G, and B, respectively. Let R's projection into the plane\n        // lie along the x axis.\n        //\n        // Because R is a unit vector and R, G, B are equidistant from the plane, they must\n        // form 30-60-90 triangles, which have side lengths proportional to (1, √3, 2)\n        //\n        //       /|\n        //    1/  | (√3)/2\n        //    /   |\n        //      1/2\n        //\n        const minComponent = Math.min(this.r, this.g, this.b);\n        const maxComponent = Math.max(this.r, this.g, this.b);\n        const chroma = maxComponent - minComponent;\n        let hue;\n        // See https://en.wikipedia.org/wiki/HSL_and_HSV#General_approach\n        if (chroma === 0) {\n            hue = 0;\n        }\n        else if (this.r >= this.g && this.r >= this.b) {\n            hue = ((this.g - this.b) / chroma) % 6;\n        }\n        else if (this.g >= this.r && this.g >= this.b) {\n            hue = (this.b - this.r) / chroma + 2;\n        }\n        else {\n            hue = (this.r - this.g) / chroma + 4;\n        }\n        // Convert to degree representation, then to radians.\n        hue *= 60;\n        hue *= Math.PI / 180;\n        // Ensure positivity.\n        if (hue < 0) {\n            hue += Math.PI * 2;\n        }\n        const value = maxComponent;\n        const saturation = value > 0 ? chroma / value : 0;\n        return Vec3.of(hue, saturation, value);\n    }\n    /**\n     * Creates a new `Color4` from a representation [in $HSV$](https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB).\n     *\n     * [Algorithm](https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB).\n     *\n     * Note that hue must be given **in radians**. While non-standard, this is consistent with\n     * {@link asHSV}.\n     *\n     * `hue` and `value` should range from 0 to 1.\n     *\n     * @param hue $H \\in [0, 2\\pi]$\n     * @param saturation $S_V \\in [0, 1]$\n     * @param value $V \\in [0, 1]$\n     */\n    static fromHSV(hue, saturation, value) {\n        if (hue < 0) {\n            hue += Math.PI * 2;\n        }\n        hue %= Math.PI * 2;\n        // Clamp value and saturation to [0, 1]\n        value = Math.max(0, Math.min(1, value));\n        saturation = Math.max(0, Math.min(1, saturation));\n        // Formula from https://en.wikipedia.org/wiki/HSL_and_HSV#HSV_to_RGB\n        // Saturation can be thought of as scaled chroma. Unapply the scaling.\n        // See https://en.wikipedia.org/wiki/HSL_and_HSV#Saturation\n        const chroma = value * saturation;\n        // Determines which edge of the projected color cube\n        const huePrime = hue / (Math.PI / 3);\n        const secondLargestComponent = chroma * (1 - Math.abs((huePrime % 2) - 1));\n        let rgb;\n        if (huePrime < 1) {\n            rgb = [chroma, secondLargestComponent, 0];\n        }\n        else if (huePrime < 2) {\n            rgb = [secondLargestComponent, chroma, 0];\n        }\n        else if (huePrime < 3) {\n            rgb = [0, chroma, secondLargestComponent];\n        }\n        else if (huePrime < 4) {\n            rgb = [0, secondLargestComponent, chroma];\n        }\n        else if (huePrime < 5) {\n            rgb = [secondLargestComponent, 0, chroma];\n        }\n        else {\n            rgb = [chroma, 0, secondLargestComponent];\n        }\n        const adjustment = value - chroma;\n        return Color4.ofRGB(rgb[0] + adjustment, rgb[1] + adjustment, rgb[2] + adjustment);\n    }\n    /**\n     * Equivalent to `ofRGB(rgb.x, rgb.y, rgb.z)`.\n     *\n     * All components should be in the range `[0, 1]` (0 to 1 inclusive).\n     */\n    static fromRGBVector(rgb, alpha) {\n        return Color4.ofRGBA(rgb.x, rgb.y, rgb.z, alpha ?? 1);\n    }\n    /**\n     * @returns a hexadecimal color string representation of `this`, in the form `#rrggbbaa`.\n     *\n     * @example\n     * ```\n     * Color4.red.toHexString(); // -> #ff0000ff\n     * ```\n     */\n    toHexString() {\n        if (this.hexString) {\n            return this.hexString;\n        }\n        const componentToHex = (component) => {\n            const res = Math.round(255 * component).toString(16);\n            if (res.length === 1) {\n                return `0${res}`;\n            }\n            return res;\n        };\n        const alpha = componentToHex(this.a);\n        const red = componentToHex(this.r);\n        const green = componentToHex(this.g);\n        const blue = componentToHex(this.b);\n        if (alpha === 'ff') {\n            return `#${red}${green}${blue}`;\n        }\n        this.hexString = `#${red}${green}${blue}${alpha}`;\n        return this.hexString;\n    }\n    toString() {\n        return this.toHexString();\n    }\n}\nColor4.transparent = Color4.ofRGBA(0, 0, 0, 0);\nColor4.red = Color4.ofRGB(1.0, 0.0, 0.0);\nColor4.orange = Color4.ofRGB(1.0, 0.65, 0.0);\nColor4.green = Color4.ofRGB(0.0, 1.0, 0.0);\nColor4.blue = Color4.ofRGB(0.0, 0.0, 1.0);\nColor4.purple = Color4.ofRGB(0.5, 0.2, 0.5);\nColor4.yellow = Color4.ofRGB(1, 1, 0.1);\nColor4.clay = Color4.ofRGB(0.8, 0.4, 0.2);\nColor4.black = Color4.ofRGB(0, 0, 0);\nColor4.gray = Color4.ofRGB(0.5, 0.5, 0.5);\nColor4.white = Color4.ofRGB(1, 1, 1);\nexport default Color4;\n", "import { Vec2 } from '@js-draw/math';\nconst describeTransformation = (\n// The location of the object before being transformed\norigin, \n// The transformation\ntransform, \n// If true, moving the object right, for example, reads as \"moved left\"\ninvertDirections, localizationTable) => {\n    // Describe the transformation's affect on the viewport (note that transformation transforms\n    // the **elements** within the viewport). Assumes the transformation only does rotation/scale/translation.\n    const linearTransformedVec = transform.transformVec3(Vec2.unitX);\n    const affineTransformedVec = transform.transformVec2(origin);\n    const scale = linearTransformedVec.magnitude();\n    const clockwiseRotation = -(180 / Math.PI) * linearTransformedVec.angle();\n    const translation = affineTransformedVec.minus(origin);\n    const result = [];\n    if (scale > 1.2) {\n        result.push(localizationTable.zoomedIn);\n    }\n    else if (scale < 0.8) {\n        result.push(localizationTable.zoomedOut);\n    }\n    if (Math.floor(Math.abs(clockwiseRotation)) > 0) {\n        const roundedRotation = Math.round(invertDirections ? -clockwiseRotation : clockwiseRotation);\n        result.push(localizationTable.rotatedBy(roundedRotation));\n    }\n    const minTranslation = 1e-4;\n    if (translation.x > minTranslation) {\n        result.push(invertDirections ? localizationTable.movedLeft : localizationTable.movedRight);\n    }\n    else if (translation.x < -minTranslation) {\n        result.push(invertDirections ? localizationTable.movedRight : localizationTable.movedLeft);\n    }\n    if (translation.y < -minTranslation) {\n        result.push(invertDirections ? localizationTable.movedDown : localizationTable.movedUp);\n    }\n    else if (translation.y > minTranslation) {\n        result.push(invertDirections ? localizationTable.movedUp : localizationTable.movedDown);\n    }\n    return result.join('; ');\n};\nexport default describeTransformation;\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _inverseTransform, _a;\nimport  Command  from './commands/Command.mjs';\nimport { Mat33, Rect2, Vec2, Vec3 } from '@js-draw/math';\nimport  describeTransformation  from './util/describeTransformation.mjs';\nexport class ViewportTransform extends Command {\n}\nexport class Viewport {\n    // @internal\n    constructor(onTransformChangeCallback) {\n        this.onTransformChangeCallback = onTransformChangeCallback;\n        this.resetTransform(Mat33.identity);\n        this.screenRect = Rect2.empty;\n    }\n    /**\n     * @returns a temporary copy of `this` that does not notify when modified. This is\n     * useful when rendering with a temporarily different viewport.\n     */\n    getTemporaryClone() {\n        const result = new Viewport(() => { });\n        result.transform = this.transform;\n        result.inverseTransform = this.inverseTransform;\n        result.screenRect = this.screenRect;\n        return result;\n    }\n    /** Resizes the screen rect to the given size. @internal */\n    updateScreenSize(screenSize) {\n        this.screenRect = this.screenRect.resizedTo(screenSize);\n    }\n    /** Get the screen's visible region transformed into canvas space. */\n    get visibleRect() {\n        return this.screenRect.transformedBoundingBox(this.inverseTransform);\n    }\n    /** @returns the given point, but in canvas coordinates */\n    screenToCanvas(screenPoint) {\n        return this.inverseTransform.transformVec2(screenPoint);\n    }\n    /** @returns the given point transformed into screen coordinates. */\n    canvasToScreen(canvasPoint) {\n        return this.transform.transformVec2(canvasPoint);\n    }\n    /**\n     * @returns a command that transforms the canvas by `transform`.\n     *\n     * For example, `Viewport.transformBy(moveRight).apply(editor)` would move the canvas to the right\n     * (and thus the viewport to the left):\n     * ```ts,runnable\n     * import { Editor, Viewport, Mat33, Vec2 } from 'js-draw';\n     * const editor = new Editor(document.body);\n     * const moveRight = Mat33.translation(Vec2.unitX.times(500));\n     * // Move the **canvas** right by 500 units:\n     * Viewport.transformBy(moveRight).apply(editor);\n     * ```\n     */\n    static transformBy(transform) {\n        return new Viewport.ViewportTransform(transform);\n    }\n    /**\n     * Updates the transformation directly. Using `transformBy` is preferred.\n     * @param newTransform - should map from canvas coordinates to screen coordinates.\n     */\n    resetTransform(newTransform = Mat33.identity) {\n        const oldTransform = this.transform;\n        this.transform = newTransform;\n        this.inverseTransform = newTransform.inverse();\n        this.onTransformChangeCallback?.(oldTransform, newTransform);\n    }\n    get screenToCanvasTransform() {\n        return this.inverseTransform;\n    }\n    get canvasToScreenTransform() {\n        return this.transform;\n    }\n    /** @returns the size of the visible region in pixels (screen units). */\n    getScreenRectSize() {\n        return this.screenRect.size;\n    }\n    /** Alias for `getScreenRectSize`. @deprecated */\n    getResolution() {\n        return this.getScreenRectSize();\n    }\n    /** @returns the amount a vector on the canvas is scaled to become a vector on the screen. */\n    getScaleFactor() {\n        // Use transformVec3 to avoid translating the vector\n        return this.transform.transformVec3(Vec3.unitX).magnitude();\n    }\n    /**\n     * @returns `getScaleFactor()` rounded to the nearest power of 10.\n     * For example, if `getScaleFactor()` returns 101, `getScaleFactorToNearestPowerOfTen()`\n     * should return `100` because `100` is the nearest power of 10 to 101.\n     */\n    getScaleFactorToNearestPowerOfTen() {\n        return this.getScaleFactorToNearestPowerOf(10);\n    }\n    getScaleFactorToNearestPowerOf(powerOf) {\n        const scaleFactor = this.getScaleFactor();\n        return Math.pow(powerOf, Math.round(Math.log(scaleFactor) / Math.log(powerOf)));\n    }\n    /** Returns the size of a grid cell (in canvas units) as used by {@link snapToGrid}. */\n    static getGridSize(scaleFactor) {\n        return 50 / scaleFactor;\n    }\n    /**\n     * Snaps `canvasPos` to the nearest grid cell corner.\n     *\n     * @see {@link getGridSize}.\n     */\n    snapToGrid(canvasPos) {\n        const scaleFactor = this.getScaleFactorToNearestPowerOf(2);\n        const snapCoordinate = (coordinate) => {\n            const roundFactor = 1 / Viewport.getGridSize(scaleFactor);\n            const snapped = Math.round(coordinate * roundFactor) / roundFactor;\n            return snapped;\n        };\n        const snappedCanvasPos = Vec2.of(snapCoordinate(canvasPos.x), snapCoordinate(canvasPos.y));\n        return snappedCanvasPos;\n    }\n    /** Returns the size of one screen pixel in canvas units. */\n    getSizeOfPixelOnCanvas() {\n        return 1 / this.getScaleFactor();\n    }\n    /**\n     * @returns the angle of the canvas in radians.\n     * This is the angle by which the canvas is rotated relative to the screen.\n     *\n     * Returns an angle in the range $[-\\pi, \\pi]$ (the same range as {@link Vec3.angle}).\n     */\n    getRotationAngle() {\n        return this.transform.transformVec3(Vec3.unitX).angle();\n    }\n    // The separate function type definition seems necessary here.\n    // See https://stackoverflow.com/a/58163623/17055750.\n    static roundPoint(point, tolerance) {\n        const scaleFactor = 10 ** Math.floor(Math.log10(tolerance));\n        const roundComponent = (component) => {\n            return Math.round(component / scaleFactor) * scaleFactor;\n        };\n        if (typeof point === 'number') {\n            return roundComponent(point);\n        }\n        return point.map(roundComponent);\n    }\n    /** Round a point with a tolerance of ±1 screen unit. */\n    roundPoint(point) {\n        return Viewport.roundPoint(point, 1 / this.getScaleFactor());\n    }\n    // `roundAmount`: An integer >= 0, larger numbers cause less rounding. Smaller numbers cause more\n    // (as such `roundAmount = 0` does the most rounding).\n    static roundScaleRatio(scaleRatio, roundAmount = 1) {\n        if (Math.abs(scaleRatio) <= 1e-12) {\n            return 0;\n        }\n        // Represent as k 10ⁿ for some n, k ∈ ℤ.\n        const decimalComponent = 10 ** Math.floor(Math.log10(Math.abs(scaleRatio)));\n        const roundAmountFactor = 2 ** roundAmount;\n        scaleRatio =\n            (Math.round((scaleRatio / decimalComponent) * roundAmountFactor) / roundAmountFactor) *\n                decimalComponent;\n        return scaleRatio;\n    }\n    // Computes and returns an affine transformation that makes `toMakeVisible` visible and roughly centered on the screen.\n    computeZoomToTransform(toMakeVisible, allowZoomIn = true, allowZoomOut = true) {\n        let transform = Mat33.identity;\n        // Invalid size? (Would divide by zero)\n        if (toMakeVisible.w === 0 || toMakeVisible.h === 0) {\n            // Create a new rectangle with a valid size\n            let newSize = Math.max(toMakeVisible.w, toMakeVisible.h);\n            // Choose a reasonable default size, but don't zoom.\n            if (newSize === 0) {\n                newSize = 50;\n                allowZoomIn = false;\n                allowZoomOut = false;\n            }\n            toMakeVisible = new Rect2(toMakeVisible.x, toMakeVisible.y, newSize, newSize);\n        }\n        if (isNaN(toMakeVisible.size.magnitude())) {\n            throw new Error(`${toMakeVisible.toString()} rectangle has NaN size! Cannot zoom to!`);\n        }\n        // Try to move the selection within the center 4/5ths of the viewport.\n        const recomputeTargetRect = () => {\n            // transform transforms objects on the canvas. As such, we need to invert it\n            // to transform the viewport.\n            const visibleRect = this.visibleRect.transformedBoundingBox(transform.inverse());\n            return visibleRect.transformedBoundingBox(Mat33.scaling2D(4 / 5, visibleRect.center));\n        };\n        let targetRect = recomputeTargetRect();\n        const largerThanTarget = targetRect.w < toMakeVisible.w || targetRect.h < toMakeVisible.h;\n        // Ensure that toMakeVisible is at least 1/3rd of the visible region.\n        const muchSmallerThanTarget = toMakeVisible.maxDimension / targetRect.maxDimension < 1 / 3;\n        if ((largerThanTarget && allowZoomOut) || (muchSmallerThanTarget && allowZoomIn)) {\n            const multiplier = Math.max(toMakeVisible.w / targetRect.w, toMakeVisible.h / targetRect.h);\n            const visibleRectTransform = Mat33.scaling2D(multiplier, targetRect.topLeft);\n            const viewportContentTransform = visibleRectTransform.inverse();\n            transform = transform.rightMul(viewportContentTransform);\n        }\n        targetRect = recomputeTargetRect();\n        // Ensure that the center of the region is visible\n        if (!targetRect.containsRect(toMakeVisible)) {\n            // target position - current position\n            const translation = toMakeVisible.center.minus(targetRect.center);\n            const visibleRectTransform = Mat33.translation(translation);\n            const viewportContentTransform = visibleRectTransform.inverse();\n            transform = transform.rightMul(viewportContentTransform);\n        }\n        if (!transform.invertable()) {\n            console.warn('Unable to zoom to ', toMakeVisible, '! Computed transform', transform, 'is singular.');\n            transform = Mat33.identity;\n        }\n        return transform;\n    }\n    // Returns a Command that transforms the view such that `toMakeVisible` is visible, and perhaps\n    // centered in the viewport.\n    //\n    // If the content is already roughly centered in the screen and at a reasonable zoom level,\n    // the resultant command does nothing.\n    //\n    // @see {@link computeZoomToTransform}\n    zoomTo(toMakeVisible, allowZoomIn = true, allowZoomOut = true) {\n        const transform = this.computeZoomToTransform(toMakeVisible, allowZoomIn, allowZoomOut);\n        return new Viewport.ViewportTransform(transform);\n    }\n}\n// Command that translates/scales the viewport.\nViewport.ViewportTransform = (_a = class extends ViewportTransform {\n        constructor(transform) {\n            super();\n            this.transform = transform;\n            _inverseTransform.set(this, void 0);\n            __classPrivateFieldSet(this, _inverseTransform, transform.inverse(), \"f\");\n        }\n        apply(editor) {\n            const viewport = editor.viewport;\n            viewport.resetTransform(viewport.transform.rightMul(this.transform));\n            editor.queueRerender();\n        }\n        unapply(editor) {\n            const viewport = editor.viewport;\n            viewport.resetTransform(viewport.transform.rightMul(__classPrivateFieldGet(this, _inverseTransform, \"f\")));\n            editor.queueRerender();\n        }\n        description(editor, localizationTable) {\n            return describeTransformation(editor.viewport.visibleRect.center, this.transform, true, localizationTable);\n        }\n    },\n    _inverseTransform = new WeakMap(),\n    _a);\nexport default Viewport;\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _SerializableCommand_commandTypeId;\nimport  Command  from './Command.mjs';\n/**\n * A command that can be serialized to or deserialized from JSON. To allow a command to be deserialized, {@link SerializableCommand.register}\n * must be called for each {@link SerializableCommand}.\n *\n * This is used to [allow collaborative editing](https://github.com/personalizedrefrigerator/js-draw/tree/main/docs/examples/example-collaborative).\n */\nclass SerializableCommand extends Command {\n    /** @param commandTypeId - A unique identifier for this command. */\n    constructor(commandTypeId) {\n        super();\n        _SerializableCommand_commandTypeId.set(this, void 0);\n        if (!(commandTypeId in SerializableCommand.deserializationCallbacks)) {\n            throw new Error(`Command ${commandTypeId} must have a registered deserialization callback. To do this, call SerializableCommand.register.`);\n        }\n        __classPrivateFieldSet(this, _SerializableCommand_commandTypeId, commandTypeId, \"f\");\n    }\n    // Convert this command to an object that can be passed to `JSON.stringify`.\n    //\n    // Do not rely on the stability of the optupt of this function — it can change\n    // form without a major version increase.\n    serialize() {\n        return {\n            data: this.serializeToJSON(),\n            commandType: __classPrivateFieldGet(this, _SerializableCommand_commandTypeId, \"f\"),\n        };\n    }\n    // Convert a `string` containing JSON data (or the output of `JSON.parse`) into a\n    // `Command`.\n    //\n    // Implementations should assume that `data` is untrusted.\n    static deserialize(data, editor) {\n        const json = typeof data === 'string' ? JSON.parse(data) : data;\n        const commandType = json.commandType;\n        if (!(commandType in SerializableCommand.deserializationCallbacks)) {\n            throw new Error(`Unrecognised command type ${commandType}!`);\n        }\n        return SerializableCommand.deserializationCallbacks[commandType](json.data, editor);\n    }\n    // Register a deserialization callback. This must be called at least once for every subclass of\n    // `SerializableCommand`.\n    static register(commandTypeId, deserialize) {\n        SerializableCommand.deserializationCallbacks[commandTypeId] = deserialize;\n    }\n}\n_SerializableCommand_commandTypeId = new WeakMap();\nSerializableCommand.deserializationCallbacks = {};\nexport default SerializableCommand;\n", "import  SerializableCommand  from './SerializableCommand.mjs';\n/**\n * A command that requires a component that may or may not be present in the editor when\n * the command is created.\n */\nexport default class UnresolvedSerializableCommand extends SerializableCommand {\n    constructor(commandId, componentID, component) {\n        super(commandId);\n        this.component = component ?? null;\n        this.componentID = componentID;\n    }\n    resolveComponent(image) {\n        if (this.component) {\n            return;\n        }\n        const component = image.lookupElement(this.componentID);\n        if (!component) {\n            throw new Error(`Unable to resolve component with ID ${this.componentID}`);\n        }\n        this.component = component;\n    }\n}\n", "// Note: Arrow functions cannot be used for type assertions. See\n// https://github.com/microsoft/TypeScript/issues/34523\n/**\n * Compile-time assertion that a branch of code is unreachable.\n * @internal\n */\nexport function assertUnreachable(key) {\n    // See https://stackoverflow.com/a/39419171/17055750\n    throw new Error(`Should be unreachable. Key: ${key}.`);\n}\n/**\n * Throws an exception if the typeof given value is not a number or `value` is NaN.\n *\n * @example\n * ```ts\n * const foo: unknown = 3;\n * assertIsNumber(foo);\n *\n * assertIsNumber('hello, world'); // throws an Error.\n * ```\n */\nexport function assertIsNumber(value, allowNaN = false) {\n    if (typeof value !== 'number' || (!allowNaN && isNaN(value))) {\n        throw new Error('Given value is not a number');\n    }\n}\n/** Throws an `Error` if the given `value` is not a `string`. */\nexport function assertIsString(value) {\n    if (typeof value !== 'string') {\n        throw new Error('Given value is not a string');\n    }\n}\nexport function assertIsArray(values) {\n    if (!Array.isArray(values)) {\n        throw new Error('Asserting isArray: Given entity is not an array');\n    }\n}\n/**\n * Throws if any of `values` is not of type number.\n */\nexport function assertIsNumberArray(values, allowNaN = false) {\n    assertIsArray(values);\n    assertIsNumber(values.length);\n    for (const value of values) {\n        assertIsNumber(value, allowNaN);\n    }\n}\n/**\n * Throws if any of `values` is not of type `string`.\n */\nexport function assertIsStringArray(values) {\n    assertIsArray(values);\n    assertIsNumber(values.length);\n    for (const value of values) {\n        assertIsString(value);\n    }\n}\n/**\n * Throws an exception if `typeof value` is not a boolean.\n */\nexport function assertIsBoolean(value) {\n    if (typeof value !== 'boolean') {\n        throw new Error('Given value is not a boolean');\n    }\n}\nexport function assertTruthy(value) {\n    if (!value) {\n        throw new Error(`${JSON.stringify(value)} is not truthy`);\n    }\n}\nexport function assertIsObject(value) {\n    if (typeof value !== 'object') {\n        throw new Error(`AssertIsObject: Given entity is not an object (type = ${typeof value})`);\n    }\n}\n", "var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\nvar _a;\nimport  SerializableCommand  from '../commands/SerializableCommand.mjs';\nimport  EditorImage  from '../image/EditorImage.mjs';\nimport { Mat33, Vec2 } from '@js-draw/math';\nimport  UnresolvedSerializableCommand  from '../commands/UnresolvedCommand.mjs';\nimport  describeTransformation  from '../util/describeTransformation.mjs';\nimport  { assertIsString }  from '../util/assertions.mjs';\nexport var ComponentSizingMode;\n(function (ComponentSizingMode) {\n    /** The default. The compnent gets its size from its bounding box. */\n    ComponentSizingMode[ComponentSizingMode[\"BoundingBox\"] = 0] = \"BoundingBox\";\n    /** Causes the component to fill the entire visible region of the screen */\n    ComponentSizingMode[ComponentSizingMode[\"FillScreen\"] = 1] = \"FillScreen\";\n    /**\n     * Displays the component anywhere (arbitrary location) on the\n     * canvas. (Ignoring the bounding box).\n     *\n     * These components may be ignored unless a full render is done.\n     *\n     * Intended for compnents that need to be rendered on a full export,\n     * but won't be visible to the user.\n     *\n     * For example, a metadata component.\n     */\n    ComponentSizingMode[ComponentSizingMode[\"Anywhere\"] = 2] = \"Anywhere\";\n})(ComponentSizingMode || (ComponentSizingMode = {}));\n/**\n * A base class for everything that can be added to an {@link EditorImage}.\n *\n * In addition to the `abstract` methods, there are a few methods that should be\n * overridden when creating a selectable/erasable subclass:\n * - {@link keyPoints}: Overriding this may improve how the component interacts with the selection tool.\n * - {@link withRegionErased}: Override/implement this to allow the component to be partially erased\n *    by the partial stroke eraser.\n */\nclass AbstractComponent {\n    constructor(\n    // A unique identifier for the type of component\n    componentKind, initialZIndex) {\n        this.componentKind = componentKind;\n        // Stores data attached by a loader.\n        this.loadSaveData = {};\n        this.lastChangedTime = new Date().getTime();\n        if (initialZIndex !== undefined) {\n            this.zIndex = initialZIndex;\n        }\n        else {\n            this.zIndex = AbstractComponent.zIndexCounter++;\n        }\n        // Create a unique ID.\n        this.id = `${new Date().getTime()}-${Math.random()}`;\n        if (AbstractComponent.deserializationCallbacks[componentKind] === undefined) {\n            throw new Error(`Component ${componentKind} has not been registered using AbstractComponent.registerComponent`);\n        }\n    }\n    // Returns a unique ID for this element.\n    // @see { @link EditorImage.lookupElement }\n    getId() {\n        return this.id;\n    }\n    // Store the deserialization callback (or lack of it) for [componentKind].\n    // If components are registered multiple times (as may be done in automated tests),\n    // the most recent deserialization callback is used.\n    static registerComponent(componentKind, deserialize) {\n        this.deserializationCallbacks[componentKind] = deserialize ?? null;\n    }\n    /**\n     * Attach data that can be used while exporting the component (e.g. to SVG).\n     *\n     * This is intended for use by an {@link ImageLoader}.\n     */\n    attachLoadSaveData(key, data) {\n        if (!this.loadSaveData[key]) {\n            this.loadSaveData[key] = [];\n        }\n        this.loadSaveData[key].push(data);\n    }\n    /** See {@link attachLoadSaveData} */\n    getLoadSaveData() {\n        return this.loadSaveData;\n    }\n    getZIndex() {\n        return this.zIndex;\n    }\n    /**\n     * @returns the bounding box of this. This can be a slight overestimate if doing so\n     * \t\t\tsignificantly improves performance.\n     */\n    getBBox() {\n        return this.contentBBox;\n    }\n    /**\n     * @returns the bounding box of this. Unlike `getBBox`, this should **not** be a rough estimate.\n     */\n    getExactBBox() {\n        return this.getBBox();\n    }\n    /**\n     * Returns information about how this component should be displayed\n     * (e.g. fill the screen or get its size from {@link getBBox}).\n     *\n     * {@link EditorImage.queueRerenderOf} must be called to apply changes to\n     * the output of this method if this component has already been added to an\n     * {@link EditorImage}.\n     */\n    getSizingMode() {\n        return ComponentSizingMode.BoundingBox;\n    }\n    /**\n     * **Optimization**\n     *\n     * Should return `true` if this component covers the entire `visibleRect`\n     * and would prevent anything below this component from being visible.\n     *\n     * Should return `false` otherwise.\n     */\n    occludesEverythingBelowWhenRenderedInRect(_visibleRect) {\n        return false;\n    }\n    /** Called when this component is added to the given image. */\n    onAddToImage(_image) { }\n    onRemoveFromImage() { }\n    /**\n     * @returns true if this component intersects `rect` -- it is entirely contained\n     *  within the rectangle or one of the rectangle's edges intersects this component.\n     *\n     * The default implementation assumes that `this.getExactBBox()` returns a tight bounding box\n     * -- that any horiziontal/vertical line that intersects this' boounding box also\n     * intersects a point in this component. If this is not the case, components must override\n     * this function.\n     */\n    intersectsRect(rect) {\n        // If this component intersects the given rectangle,\n        // it is either contained entirely within rect or intersects one of rect's edges.\n        // If contained within,\n        if (rect.containsRect(this.getExactBBox())) {\n            return true;\n        }\n        // Otherwise check if it intersects one of the rectangle's edges.\n        const testLines = rect.getEdges();\n        return testLines.some((edge) => this.intersects(edge));\n    }\n    /**\n     * Returns a selection of points within this object. Each contiguous section\n     * of this object should have a point in the returned array.\n     *\n     * Subclasses should override this method if the center of the bounding box is\n     * not contained within the object.\n     */\n    keyPoints() {\n        return [this.getBBox().center];\n    }\n    // @returns true iff this component can be selected (e.g. by the selection tool.)\n    isSelectable() {\n        return true;\n    }\n    // @returns true iff this component should be added to the background, rather than the\n    // foreground of the image.\n    isBackground() {\n        return false;\n    }\n    // @returns an approximation of the proportional time it takes to render this component.\n    // This is intended to be a rough estimate, but, for example, a stroke with two points sould have\n    // a renderingWeight approximately twice that of a stroke with one point.\n    getProportionalRenderingTime() {\n        return 1;\n    }\n    /**\n     * Returns a command that, when applied, transforms this by [affineTransfm] and\n     * updates the editor.\n     *\n     * The transformed component is also moved to the top (use\n     * {@link AbstractComponent#setZIndexAndTransformBy} to avoid this behavior).\n     */\n    transformBy(affineTransfm) {\n        return new AbstractComponent.TransformElementCommand(affineTransfm, this.getId(), this);\n    }\n    // Returns a command that updates this component's z-index.\n    setZIndex(newZIndex) {\n        return new AbstractComponent.TransformElementCommand(Mat33.identity, this.getId(), this, newZIndex);\n    }\n    /**\n     * Combines {@link transformBy} and {@link setZIndex} into a single command.\n     *\n     * @param newZIndex - The z-index this component should have after applying this command.\n     * @param originalZIndex - @internal The z-index the component should revert to after unapplying\n     *                         this command.\n     */\n    setZIndexAndTransformBy(affineTransfm, newZIndex, originalZIndex) {\n        return new AbstractComponent.TransformElementCommand(affineTransfm, this.getId(), this, newZIndex, originalZIndex);\n    }\n    // Returns a copy of this component.\n    clone() {\n        const clone = this.createClone();\n        for (const attachmentKey in this.loadSaveData) {\n            for (const val of this.loadSaveData[attachmentKey]) {\n                clone.attachLoadSaveData(attachmentKey, val);\n            }\n        }\n        return clone;\n    }\n    /**\n     * Creates a copy of this component with a particular `id`.\n     * This is used internally by {@link Duplicate} when deserializing.\n     *\n     * @internal -- users of the library shouldn't need this.\n     */\n    cloneWithId(cloneId) {\n        const clone = this.clone();\n        clone.id = cloneId;\n        return clone;\n    }\n    // Convert the component to an object that can be passed to\n    // `JSON.stringify`.\n    //\n    // Do not rely on the output of this function to take a particular form —\n    // this function's output can change form without a major version increase.\n    serialize() {\n        const data = this.serializeToJSON();\n        if (data === null) {\n            throw new Error(`${this} cannot be serialized.`);\n        }\n        return {\n            name: this.componentKind,\n            zIndex: this.zIndex,\n            id: this.id,\n            loadSaveData: this.loadSaveData,\n            data,\n        };\n    }\n    // Returns true if `data` is not deserializable. May return false even if [data]\n    // is not deserializable.\n    static isNotDeserializable(json) {\n        if (typeof json === 'string') {\n            json = JSON.parse(json);\n        }\n        if (typeof json !== 'object') {\n            return true;\n        }\n        if (!this.deserializationCallbacks[json?.name]) {\n            return true;\n        }\n        if (!json.data) {\n            return true;\n        }\n        return false;\n    }\n    // Convert a string or an object produced by `JSON.parse` into an `AbstractComponent`.\n    static deserialize(json) {\n        if (typeof json === 'string') {\n            json = JSON.parse(json);\n        }\n        if (AbstractComponent.isNotDeserializable(json)) {\n            throw new Error(`Element with data ${json} cannot be deserialized.`);\n        }\n        assertIsString(json.id);\n        const instance = this.deserializationCallbacks[json.name](json.data);\n        instance.id = json.id;\n        if (isFinite(json.zIndex)) {\n            instance.zIndex = json.zIndex;\n            // Ensure that new components will be added on top.\n            AbstractComponent.zIndexCounter = Math.max(AbstractComponent.zIndexCounter, instance.zIndex + 1);\n        }\n        // TODO: What should we do with json.loadSaveData?\n        //       If we attach it to [instance], we create a potential security risk — loadSaveData\n        //       is often used to store unrecognised attributes so they can be preserved on output.\n        //       ...but what if we're deserializing data sent across the network?\n        return instance;\n    }\n}\n// Topmost z-index\n// TODO: Should be a property of the EditorImage.\nAbstractComponent.zIndexCounter = 0;\nAbstractComponent.deserializationCallbacks = {};\nAbstractComponent.transformElementCommandId = 'transform-element';\nAbstractComponent.TransformElementCommand = (_a = class extends UnresolvedSerializableCommand {\n        // Construct a new TransformElementCommand. `component`, while optional, should\n        // be provided if available. If not provided, it will be fetched from the editor's\n        // document when the command is applied.\n        constructor(affineTransfm, componentID, component, targetZIndex, origZIndex) {\n            super(AbstractComponent.transformElementCommandId, componentID, component);\n            this.affineTransfm = affineTransfm;\n            this.origZIndex = origZIndex;\n            this.targetZIndex = targetZIndex ?? AbstractComponent.zIndexCounter++;\n            // Ensure that we keep drawing on top even after changing the z-index.\n            if (this.targetZIndex >= AbstractComponent.zIndexCounter) {\n                AbstractComponent.zIndexCounter = this.targetZIndex + 1;\n            }\n            if (component && origZIndex === undefined) {\n                this.origZIndex = component.getZIndex();\n            }\n        }\n        resolveComponent(image) {\n            if (this.component) {\n                return;\n            }\n            super.resolveComponent(image);\n            this.origZIndex ??= this.component.getZIndex();\n        }\n        updateTransform(editor, newTransfm, targetZIndex) {\n            if (!this.component) {\n                throw new Error('this.component is undefined or null!');\n            }\n            // Any parent should have only one direct child.\n            const parent = editor.image.findParent(this.component);\n            let hadParent = false;\n            if (parent) {\n                parent.remove();\n                hadParent = true;\n            }\n            this.component.applyTransformation(newTransfm);\n            this.component.zIndex = targetZIndex;\n            this.component.lastChangedTime = new Date().getTime();\n            // Ensure that new components are automatically drawn above the current component.\n            if (targetZIndex >= AbstractComponent.zIndexCounter) {\n                AbstractComponent.zIndexCounter = targetZIndex + 1;\n            }\n            // Add the element back to the document.\n            if (hadParent) {\n                EditorImage.addComponent(this.component).apply(editor);\n            }\n        }\n        apply(editor) {\n            this.resolveComponent(editor.image);\n            this.updateTransform(editor, this.affineTransfm, this.targetZIndex);\n            editor.queueRerender();\n        }\n        unapply(editor) {\n            this.resolveComponent(editor.image);\n            this.updateTransform(editor, this.affineTransfm.inverse(), this.origZIndex);\n            editor.queueRerender();\n        }\n        description(_editor, localizationTable) {\n            return localizationTable.transformedElements(1, describeTransformation(Vec2.zero, this.affineTransfm, false, localizationTable));\n        }\n        serializeToJSON() {\n            return {\n                id: this.componentID,\n                transfm: this.affineTransfm.toArray(),\n                targetZIndex: this.targetZIndex,\n                origZIndex: this.origZIndex,\n            };\n        }\n    },\n    __setFunctionName(_a, \"TransformElementCommand\"),\n    (() => {\n        SerializableCommand.register(AbstractComponent.transformElementCommandId, (json, editor) => {\n            const elem = editor.image.lookupElement(json.id) ?? undefined;\n            const transform = new Mat33(...json.transfm);\n            const targetZIndex = json.targetZIndex;\n            const origZIndex = json.origZIndex ?? undefined;\n            return new AbstractComponent.TransformElementCommand(transform, json.id, elem, targetZIndex, origZIndex);\n        });\n    })(),\n    _a);\nexport default AbstractComponent;\n", "// Code shared with Joplin (from when it was MIT licensed)\n// (js-draw was originally intended to be part of Joplin).\n/**\n * Handles notifying listeners of events.\n *\n * `EventKeyType` is used to distinguish events (e.g. a `ClickEvent` vs a `TouchEvent`)\n * while `EventMessageType` is the type of the data sent with an event (can be `void`).\n *\n * @example\n * ```\n * const dispatcher = new EventDispatcher<'event1'|'event2'|'event3', void>();\n * dispatcher.on('event1', () => {\n *   console.log('Event 1 triggered.');\n * });\n * dispatcher.dispatch('event1');\n * ```\n *\n */\nexport default class EventDispatcher {\n    constructor() {\n        this.listeners = {};\n    }\n    dispatch(eventName, event) {\n        const listenerList = this.listeners[eventName];\n        if (listenerList) {\n            for (let i = 0; i < listenerList.length; i++) {\n                listenerList[i](event);\n            }\n        }\n    }\n    on(eventName, callback) {\n        if (!this.listeners[eventName])\n            this.listeners[eventName] = [];\n        this.listeners[eventName].push(callback);\n        return {\n            // Retuns false if the listener has already been removed, true otherwise.\n            remove: () => {\n                const originalListeners = this.listeners[eventName];\n                this.off(eventName, callback);\n                return originalListeners.length !== this.listeners[eventName].length;\n            },\n        };\n    }\n    /** Removes an event listener. This is equivalent to calling `.remove()` on the object returned by `.on`. */\n    off(eventName, callback) {\n        const listeners = this.listeners[eventName];\n        if (!listeners)\n            return;\n        // Replace the current list of listeners with a new, shortened list.\n        // This allows any iterators over this.listeners to continue iterating\n        // without skipping elements.\n        this.listeners[eventName] = listeners.filter((otherCallback) => otherCallback !== callback);\n    }\n}\n", "var __setFunctionName = (this && this.__setFunctionName) || function (f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\nvar _a, _b, _c;\nimport  Viewport  from '../Viewport.mjs';\nimport  AbstractComponent, { ComponentSizingMode }  from '../components/AbstractComponent.mjs';\nimport { Rect2, Vec2, Mat33, Color4 } from '@js-draw/math';\nimport  SerializableCommand  from '../commands/SerializableCommand.mjs';\nimport  EventDispatcher  from '../EventDispatcher.mjs';\nimport  { assertIsBoolean, assertIsNumber, assertIsNumberArray }  from '../util/assertions.mjs';\nimport  Command  from '../commands/Command.mjs';\n// @internal Sort by z-index, low to high\nexport const sortLeavesByZIndex = (leaves) => {\n    leaves.sort((a, b) => a.getContent().getZIndex() - b.getContent().getZIndex());\n};\nexport var EditorImageEventType;\n(function (EditorImageEventType) {\n    // @internal\n    EditorImageEventType[EditorImageEventType[\"ExportViewportChanged\"] = 0] = \"ExportViewportChanged\";\n    // @internal\n    EditorImageEventType[EditorImageEventType[\"AutoresizeModeChanged\"] = 1] = \"AutoresizeModeChanged\";\n    // Type for events fired whenever components are added to the image\n    EditorImageEventType[EditorImageEventType[\"ComponentAdded\"] = 2] = \"ComponentAdded\";\n    // Type for events fired whenever components are removed from the image\n    EditorImageEventType[EditorImageEventType[\"ComponentRemoved\"] = 3] = \"ComponentRemoved\";\n})(EditorImageEventType || (EditorImageEventType = {}));\nlet debugMode = false;\n/**\n * Handles lookup/storage of elements in the image.\n *\n * `js-draw` images are made up of a collection of {@link AbstractComponent}s (which\n * includes {@link Stroke}s, {@link TextComponent}s, etc.). An `EditorImage`\n * is the data structure that stores these components.\n *\n * Here's how to do a few common operations:\n * - **Get all components in a {@link @js-draw/math!Rect2 | Rect2}**:\n *    {@link EditorImage.getComponentsIntersecting}.\n * - **Draw an `EditorImage` onto a canvas/SVG**: {@link EditorImage.render}.\n * - **Adding a new component**: {@link EditorImage.addComponent}.\n *\n * **Example**:\n * [[include:doc-pages/inline-examples/image-add-and-lookup.md]]\n */\nclass EditorImage {\n    // @internal\n    constructor() {\n        this.componentCount = 0;\n        this.settingExportRect = false;\n        this.root = new RootImageNode();\n        this.background = new RootImageNode();\n        this.componentsById = new Map();\n        this.notifier = new EventDispatcher();\n        this.importExportViewport = new Viewport(() => {\n            this.onExportViewportChanged();\n        });\n        // Default to a 500x500 image\n        this.importExportViewport.updateScreenSize(Vec2.of(500, 500));\n        this.shouldAutoresizeExportViewport = false;\n    }\n    // Returns all components that make up the background of this image. These\n    // components are rendered below all other components.\n    getBackgroundComponents() {\n        const result = [];\n        const leaves = this.background.getLeaves();\n        sortLeavesByZIndex(leaves);\n        for (const leaf of leaves) {\n            const content = leaf.getContent();\n            if (content) {\n                result.push(content);\n            }\n        }\n        return result;\n    }\n    // Returns the parent of the given element, if it exists.\n    findParent(elem) {\n        return this.background.getChildWithContent(elem) ?? this.root.getChildWithContent(elem);\n    }\n    // Forces a re-render of `elem` when the image is next re-rendered as a whole.\n    // Does nothing if `elem` is not in this.\n    queueRerenderOf(elem) {\n        // TODO: Make more efficient (e.g. increase IDs of all parents,\n        // make cache take into account last modified time instead of IDs, etc.)\n        const parent = this.findParent(elem);\n        if (parent) {\n            parent.remove();\n            this.addComponentDirectly(elem);\n        }\n    }\n    /** @internal */\n    renderWithCache(screenRenderer, cache, viewport) {\n        this.background.render(screenRenderer, viewport.visibleRect);\n        // If in debug mode, avoid rendering with cache to show additional debug information\n        if (!debugMode) {\n            cache.render(screenRenderer, this.root, viewport);\n        }\n        else {\n            this.root.render(screenRenderer, viewport.visibleRect);\n        }\n    }\n    /**\n     * Renders this image to the given `renderer`.\n     *\n     * If `viewport` is non-null, only components that can be seen from that viewport\n     * will be rendered. If `viewport` is `null`, **all** components are rendered.\n     *\n     * **Example**:\n     * [[include:doc-pages/inline-examples/canvas-renderer.md]]\n     */\n    render(renderer, viewport) {\n        this.background.render(renderer, viewport?.visibleRect);\n        this.root.render(renderer, viewport?.visibleRect);\n    }\n    /**\n     * Like {@link renderAll}, but can be stopped early and paused.\n     *\n     * **Note**: If the image is being edited during an async rendering, there is no\n     * guarantee that all nodes will be rendered correctly (some may be missing).\n     *\n     * @internal\n     */\n    async renderAllAsync(renderer, preRenderComponent) {\n        const stoppedEarly = !(await this.background.renderAllAsync(renderer, preRenderComponent));\n        if (!stoppedEarly) {\n            return await this.root.renderAllAsync(renderer, preRenderComponent);\n        }\n        return false;\n    }\n    /**\n     * Renders all nodes, even ones not within the viewport.\n     *\n     * This can be slow for large images\n     * @internal\n     */\n    renderAll(renderer) {\n        this.render(renderer, null);\n    }\n    /**\n     * @returns all elements in the image, sorted by z-index (low to high).\n     *\n     * This can be slow for large images. If you only need all elemenst in part of the image,\n     * consider using {@link getComponentsIntersecting} instead.\n     *\n     * **Note**: The result does not include background elements. See {@link getBackgroundComponents}.\n     */\n    getAllComponents() {\n        const leaves = this.root.getLeaves();\n        sortLeavesByZIndex(leaves);\n        return leaves.map((leaf) => leaf.getContent());\n    }\n    /** @deprecated in favor of {@link getAllComponents} */\n    getAllElements() {\n        return this.getAllComponents();\n    }\n    /** Returns the number of elements added to this image. @internal */\n    estimateNumElements() {\n        return this.componentCount;\n    }\n    /** @deprecated @see getComponentsIntersecting */\n    getElementsIntersectingRegion(region, includeBackground = false) {\n        return this.getComponentsIntersecting(region, includeBackground);\n    }\n    /**\n     * @returns a list of `AbstractComponent`s intersecting `region`, sorted by increasing z-index.\n     *\n     * Components in the background layer are only included if `includeBackground` is `true`.\n     */\n    getComponentsIntersecting(region, includeBackground = false) {\n        let leaves = this.root.getLeavesIntersectingRegion(region);\n        if (includeBackground) {\n            leaves = leaves.concat(this.background.getLeavesIntersectingRegion(region));\n        }\n        sortLeavesByZIndex(leaves);\n        return leaves.map((leaf) => leaf.getContent());\n    }\n    /** Called whenever (just after) an element is completely removed. @internal */\n    onDestroyElement(elem) {\n        this.componentCount--;\n        const componentId = elem.getId();\n        this.componentsById.delete(componentId);\n        this.notifier.dispatch(EditorImageEventType.ComponentRemoved, {\n            kind: EditorImageEventType.ComponentRemoved,\n            image: this,\n            componentId: componentId,\n        });\n        this.autoresizeExportViewport();\n    }\n    /** Called just after an element is added. @internal */\n    onElementAdded(elem) {\n        this.componentCount++;\n        const elementId = elem.getId();\n        this.componentsById.set(elem.getId(), elem);\n        this.notifier.dispatch(EditorImageEventType.ComponentAdded, {\n            kind: EditorImageEventType.ComponentAdded,\n            image: this,\n            componentId: elementId,\n        });\n        this.autoresizeExportViewport();\n    }\n    /**\n     * @returns the AbstractComponent with `id`, if it exists.\n     *\n     * @see {@link AbstractComponent.getId}\n     */\n    lookupElement(id) {\n        return this.componentsById.get(id) ?? null;\n    }\n    addComponentDirectly(elem) {\n        // Because onAddToImage can affect the element's bounding box,\n        // this needs to be called before parentTree.addLeaf.\n        elem.onAddToImage(this);\n        // If a background component, add to the background. Else,\n        // add to the normal component tree.\n        const parentTree = elem.isBackground() ? this.background : this.root;\n        const result = parentTree.addLeaf(elem);\n        this.onElementAdded(elem);\n        return result;\n    }\n    removeElementDirectly(element) {\n        const container = this.findParent(element);\n        container?.remove();\n        if (container) {\n            this.onDestroyElement(element);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Returns a command that adds the given element to the `EditorImage`.\n     * If `applyByFlattening` is true, the content of the wet ink renderer is\n     * rendered onto the main rendering canvas instead of doing a full re-render.\n     *\n     * @see {@link Display.flatten}\n     *\n     * **Example**:\n     *\n     * [[include:doc-pages/inline-examples/adding-a-stroke.md]]\n     */\n    static addComponent(elem, applyByFlattening = false) {\n        return new _a.AddComponentCommand(elem, applyByFlattening);\n    }\n    /** @see EditorImage.addComponent */\n    addComponent(component, applyByFlattening) {\n        return _a.addComponent(component, applyByFlattening);\n    }\n    /** Alias for {@link addComponent}. @deprecated Prefer `.addComponent` */\n    addElement(elem, applyByFlattening) {\n        return this.addComponent(elem, applyByFlattening);\n    }\n    /** Alias for {@link addComponent}. @deprecated Prefer `.addComponent`. */\n    static addElement(elem, applyByFlattening = false) {\n        return this.addComponent(elem, applyByFlattening);\n    }\n    /**\n     * @returns a `Viewport` for rendering the image when importing/exporting.\n     */\n    getImportExportViewport() {\n        return this.importExportViewport;\n    }\n    /**\n     * @see {@link setImportExportRect}\n     */\n    getImportExportRect() {\n        return this.getImportExportViewport().visibleRect;\n    }\n    /**\n     * Sets the import/export rectangle to the given `imageRect`. Disables\n     * autoresize if it was previously enabled.\n     *\n     * **Note**: The import/export rectangle is the same as the size of any\n     * {@link BackgroundComponent}s (and other components that auto-resize).\n     */\n    setImportExportRect(imageRect) {\n        return _a.SetImportExportRectCommand.of(this, imageRect, false);\n    }\n    /** @see {@link setAutoresizeEnabled} */\n    getAutoresizeEnabled() {\n        return this.shouldAutoresizeExportViewport;\n    }\n    /**\n     * Returns a `Command` that sets whether the image should autoresize when\n     * {@link AbstractComponent}s are added/removed.\n     *\n     * @example\n     *\n     * ```ts,runnable\n     * import { Editor } from 'js-draw';\n     *\n     * const editor = new Editor(document.body);\n     * const toolbar = editor.addToolbar();\n     *\n     * // Add a save button to demonstrate what the output looks like\n     * // (it should change size to fit whatever was drawn)\n     * toolbar.addSaveButton(() => {\n     *   document.body.replaceChildren(editor.toSVG({ sanitize: true }));\n     * });\n     *\n     * // Actually using setAutoresizeEnabled:\n     * //\n     * // To set autoresize without announcing for accessibility/making undoable\n     * const addToHistory = false;\n     * editor.dispatchNoAnnounce(editor.image.setAutoresizeEnabled(true), addToHistory);\n     *\n     * // Add to undo history **and** announce for accessibility\n     * //editor.dispatch(editor.image.setAutoresizeEnabled(true), true);\n     * ```\n     */\n    setAutoresizeEnabled(autoresize) {\n        if (autoresize === this.shouldAutoresizeExportViewport) {\n            return Command.empty;\n        }\n        const newBBox = this.root.getBBox();\n        return _a.SetImportExportRectCommand.of(this, newBBox, autoresize);\n    }\n    setAutoresizeEnabledDirectly(shouldAutoresize) {\n        if (shouldAutoresize !== this.shouldAutoresizeExportViewport) {\n            this.shouldAutoresizeExportViewport = shouldAutoresize;\n            this.notifier.dispatch(EditorImageEventType.AutoresizeModeChanged, {\n                kind: EditorImageEventType.AutoresizeModeChanged,\n                image: this,\n            });\n        }\n    }\n    /** Updates the size/position of the viewport */\n    autoresizeExportViewport() {\n        // Only autoresize if in autoresize mode -- otherwise resizing the image\n        // should be done with undoable commands.\n        if (this.shouldAutoresizeExportViewport) {\n            this.setExportRectDirectly(this.root.getBBox());\n        }\n    }\n    /**\n     * Sets the import/export viewport directly, without returning a `Command`.\n     * As such, this is not undoable.\n     *\n     * See setImportExportRect\n     *\n     * Returns true if changes to the viewport were made (and thus\n     * ExportViewportChanged was fired.)\n     */\n    setExportRectDirectly(newRect) {\n        const viewport = this.getImportExportViewport();\n        const lastSize = viewport.getScreenRectSize();\n        const lastTransform = viewport.canvasToScreenTransform;\n        const newTransform = Mat33.translation(newRect.topLeft.times(-1));\n        if (!lastSize.eq(newRect.size) || !lastTransform.eq(newTransform)) {\n            // Prevent the ExportViewportChanged event from being fired\n            // multiple times for the same viewport change: Set settingExportRect\n            // to true.\n            this.settingExportRect = true;\n            viewport.updateScreenSize(newRect.size);\n            viewport.resetTransform(newTransform);\n            this.settingExportRect = false;\n            this.onExportViewportChanged();\n            return true;\n        }\n        return false;\n    }\n    onExportViewportChanged() {\n        // Prevent firing duplicate events -- changes\n        // made by exportViewport.resetTransform may cause this method to be\n        // called.\n        if (!this.settingExportRect) {\n            this.notifier.dispatch(EditorImageEventType.ExportViewportChanged, {\n                kind: EditorImageEventType.ExportViewportChanged,\n                image: this,\n            });\n        }\n    }\n    /**\n     * @internal\n     *\n     * Enables debug mode for **all** `EditorImage`s.\n     *\n     * **Only use for debugging**.\n     *\n     * @internal\n     */\n    static setDebugMode(newDebugMode) {\n        debugMode = newDebugMode;\n    }\n}\n_a = EditorImage;\n// A Command that can access private [EditorImage] functionality\nEditorImage.AddComponentCommand = (_b = class extends SerializableCommand {\n        // If [applyByFlattening], then the rendered content of this element\n        // is present on the display's wet ink canvas. As such, no re-render is necessary\n        // the first time this command is applied (the surfaces are joined instead).\n        constructor(element, applyByFlattening = false) {\n            super('add-element');\n            this.element = element;\n            this.applyByFlattening = applyByFlattening;\n            this.serializedElem = null;\n            // FIXME: The serialized version of this command may be inaccurate if this is\n            //        serialized when this command is not on the top of the undo stack.\n            //\n            // Caching the element's serialized data leads to additional memory usage *and*\n            // sometimes incorrect behavior in collaborative editing.\n            this.serializedElem = null;\n            if (isNaN(element.getBBox().area)) {\n                throw new Error('Elements in the image cannot have NaN bounding boxes');\n            }\n        }\n        apply(editor) {\n            editor.image.addComponentDirectly(this.element);\n            if (!this.applyByFlattening) {\n                editor.queueRerender();\n            }\n            else {\n                this.applyByFlattening = false;\n                editor.display.flatten();\n            }\n        }\n        unapply(editor) {\n            editor.image.removeElementDirectly(this.element);\n            editor.queueRerender();\n        }\n        description(_editor, localization) {\n            return localization.addComponentAction(this.element.description(localization));\n        }\n        serializeToJSON() {\n            return {\n                elemData: this.serializedElem ?? this.element.serialize(),\n            };\n        }\n    },\n    __setFunctionName(_b, \"AddComponentCommand\"),\n    (() => {\n        SerializableCommand.register('add-element', (json, editor) => {\n            const id = json.elemData.id;\n            const foundElem = editor.image.lookupElement(id);\n            const elem = foundElem ?? AbstractComponent.deserialize(json.elemData);\n            const result = new _a.AddComponentCommand(elem);\n            result.serializedElem = json.elemData;\n            return result;\n        });\n    })(),\n    _b);\n// Handles resizing the background import/export region of the image.\nEditorImage.SetImportExportRectCommand = (_c = class extends SerializableCommand {\n        constructor(originalSize, originalTransform, originalAutoresize, newExportRect, newAutoresize) {\n            super(_a.SetImportExportRectCommand.commandId);\n            this.originalSize = originalSize;\n            this.originalTransform = originalTransform;\n            this.originalAutoresize = originalAutoresize;\n            this.newExportRect = newExportRect;\n            this.newAutoresize = newAutoresize;\n        }\n        // Uses `image` to store the original size/transform\n        static of(image, newExportRect, newAutoresize) {\n            const importExportViewport = image.getImportExportViewport();\n            const originalSize = importExportViewport.visibleRect.size;\n            const originalTransform = importExportViewport.canvasToScreenTransform;\n            const originalAutoresize = image.getAutoresizeEnabled();\n            return new _a.SetImportExportRectCommand(originalSize, originalTransform, originalAutoresize, newExportRect, newAutoresize);\n        }\n        apply(editor) {\n            editor.image.setAutoresizeEnabledDirectly(this.newAutoresize);\n            editor.image.setExportRectDirectly(this.newExportRect);\n            editor.queueRerender();\n        }\n        unapply(editor) {\n            const viewport = editor.image.getImportExportViewport();\n            editor.image.setAutoresizeEnabledDirectly(this.originalAutoresize);\n            viewport.updateScreenSize(this.originalSize);\n            viewport.resetTransform(this.originalTransform);\n            editor.queueRerender();\n        }\n        description(_editor, localization) {\n            if (this.newAutoresize !== this.originalAutoresize) {\n                if (this.newAutoresize) {\n                    return localization.enabledAutoresizeOutputCommand;\n                }\n                else {\n                    return localization.disabledAutoresizeOutputCommand;\n                }\n            }\n            return localization.resizeOutputCommand(this.newExportRect);\n        }\n        serializeToJSON() {\n            return {\n                originalSize: this.originalSize.xy,\n                originalTransform: this.originalTransform.toArray(),\n                newRegion: {\n                    x: this.newExportRect.x,\n                    y: this.newExportRect.y,\n                    w: this.newExportRect.w,\n                    h: this.newExportRect.h,\n                },\n                autoresize: this.newAutoresize,\n                originalAutoresize: this.originalAutoresize,\n            };\n        }\n    },\n    __setFunctionName(_c, \"SetImportExportRectCommand\"),\n    _c.commandId = 'set-import-export-rect',\n    (() => {\n        const commandId = _c.commandId;\n        SerializableCommand.register(commandId, (json, _editor) => {\n            assertIsNumber(json.originalSize.x);\n            assertIsNumber(json.originalSize.y);\n            assertIsNumberArray(json.originalTransform);\n            assertIsNumberArray([\n                json.newRegion.x,\n                json.newRegion.y,\n                json.newRegion.w,\n                json.newRegion.h,\n            ]);\n            assertIsBoolean(json.autoresize ?? false);\n            assertIsBoolean(json.originalAutoresize ?? false);\n            const originalSize = Vec2.ofXY(json.originalSize);\n            const originalTransform = new Mat33(...json.originalTransform);\n            const finalRect = new Rect2(json.newRegion.x, json.newRegion.y, json.newRegion.w, json.newRegion.h);\n            const autoresize = json.autoresize ?? false;\n            const originalAutoresize = json.originalAutoresize ?? false;\n            return new _a.SetImportExportRectCommand(originalSize, originalTransform, originalAutoresize, finalRect, autoresize);\n        });\n    })(),\n    _c);\nexport default EditorImage;\n/**\n * Determines the first index in `sortedLeaves` that needs to be rendered\n * (based on occlusion -- everything before that index can be skipped and\n * produce a visually-equivalent image).\n *\n * Does nothing if visibleRect is not provided\n *\n * @internal\n */\nexport const computeFirstIndexToRender = (sortedLeaves, visibleRect) => {\n    let startIndex = 0;\n    if (visibleRect) {\n        for (let i = sortedLeaves.length - 1; i >= 1; i--) {\n            if (\n            // Check for occlusion\n            sortedLeaves[i].getBBox().containsRect(visibleRect) &&\n                sortedLeaves[i].getContent()?.occludesEverythingBelowWhenRenderedInRect(visibleRect)) {\n                startIndex = i;\n                break;\n            }\n        }\n    }\n    return startIndex;\n};\n/**\n * Part of the Editor's image. Does not handle fullscreen/invisible components.\n * @internal\n */\nexport class ImageNode {\n    constructor(parent = null) {\n        this.parent = parent;\n        this.targetChildCount = 30;\n        this.children = [];\n        this.bbox = Rect2.empty;\n        this.content = null;\n        this.id = ImageNode.idCounter++;\n    }\n    getId() {\n        return this.id;\n    }\n    onContentChange() {\n        this.id = ImageNode.idCounter++;\n    }\n    getContent() {\n        return this.content;\n    }\n    getParent() {\n        return this.parent;\n    }\n    // Override this to change how children are considered within a given region.\n    getChildrenIntersectingRegion(region, isTooSmallFilter) {\n        return this.children.filter((child) => {\n            const bbox = child.getBBox();\n            return !isTooSmallFilter?.(bbox) && bbox.intersects(region);\n        });\n    }\n    getChildrenOrSelfIntersectingRegion(region, isTooSmall) {\n        if (this.content && this.bbox.intersects(region) && !isTooSmall?.(this.bbox)) {\n            return [this];\n        }\n        return this.getChildrenIntersectingRegion(region, isTooSmall);\n    }\n    /**\n     * Returns a list of `ImageNode`s with content (and thus no children).\n     * Override getChildrenIntersectingRegion to customize how this method\n     * determines whether/which children are in `region`.\n     *\n     * @paran region - All resultant `ImageNode`s must intersect `region`.\n     * @param isTooSmall - If `isTooSmall` returns true for an image node, that node\n     *                     is excluded from the output.\n     *\n     */\n    getLeavesIntersectingRegion(region, isTooSmall) {\n        const result = [];\n        const workList = [];\n        workList.push(this);\n        while (workList.length > 0) {\n            const current = workList.pop();\n            // Split the children into leaves and non-leaves\n            const processed = current.getChildrenOrSelfIntersectingRegion(region, isTooSmall);\n            for (const item of processed) {\n                if (item.content) {\n                    result.push(item);\n                }\n                else {\n                    // Non-leaves need to be processed\n                    workList.push(item);\n                }\n            }\n        }\n        return result;\n    }\n    // Returns the child of this with the target content or `null` if no\n    // such child exists.\n    //\n    // Note: Relies on all children to have valid bounding boxes.\n    getChildWithContent(target) {\n        const candidates = this.getLeavesIntersectingRegion(target.getBBox());\n        for (const candidate of candidates) {\n            if (candidate.getContent() === target) {\n                return candidate;\n            }\n        }\n        return null;\n    }\n    // Returns a list of leaves with this as an ancestor.\n    // Like getLeavesInRegion, but does not check whether ancestors are in a given rectangle\n    getLeaves() {\n        if (this.content) {\n            return [this];\n        }\n        const result = [];\n        for (const child of this.children) {\n            result.push(...child.getLeaves());\n        }\n        return result;\n    }\n    addLeaf(leaf) {\n        this.onContentChange();\n        if (this.content === null && this.children.length === 0) {\n            this.content = leaf;\n            this.recomputeBBox(true);\n            return this;\n        }\n        if (this.content !== null) {\n            console.assert(this.children.length === 0);\n            const contentNode = new ImageNode(this);\n            contentNode.content = this.content;\n            this.content = null;\n            this.children.push(contentNode);\n            contentNode.recomputeBBox(false);\n        }\n        // If this node is contained within the leaf, make this and the leaf\n        // share a parent.\n        const leafBBox = leaf.getBBox();\n        if (leafBBox.containsRect(this.getBBox())) {\n            const nodeForNewLeaf = new ImageNode(this);\n            if (this.children.length < this.targetChildCount) {\n                this.children.push(nodeForNewLeaf);\n            }\n            else {\n                const nodeForChildren = new ImageNode(this);\n                nodeForChildren.children = this.children;\n                this.children = [nodeForNewLeaf, nodeForChildren];\n                nodeForChildren.updateParents();\n                nodeForChildren.recomputeBBox(true);\n            }\n            return nodeForNewLeaf.addLeaf(leaf);\n        }\n        const containingNodes = this.children.filter((child) => child.getBBox().containsRect(leafBBox));\n        // Does the leaf already fit within one of the children?\n        if (containingNodes.length > 0 && this.children.length >= this.targetChildCount) {\n            // Sort the containers in ascending order by area\n            containingNodes.sort((a, b) => a.getBBox().area - b.getBBox().area);\n            // Choose the smallest child that contains the new element.\n            const result = containingNodes[0].addLeaf(leaf);\n            result.rebalance();\n            return result;\n        }\n        const newNode = ImageNode.createLeafNode(this, leaf);\n        this.children.push(newNode);\n        newNode.recomputeBBox(true);\n        if (this.children.length >= this.targetChildCount) {\n            this.rebalance();\n        }\n        return newNode;\n    }\n    // Creates a new leaf node with the given content.\n    // This only establishes the parent-child linking in one direction. Callers\n    // must add the resultant node to the list of children manually.\n    static createLeafNode(parent, content) {\n        const newNode = new ImageNode(parent);\n        newNode.content = content;\n        return newNode;\n    }\n    getBBox() {\n        return this.bbox;\n    }\n    // Recomputes this' bounding box. If [bubbleUp], also recompute\n    // this' ancestors bounding boxes. This also re-computes this' bounding box\n    // in the z-direction (z-indicies).\n    recomputeBBox(bubbleUp) {\n        const oldBBox = this.bbox;\n        if (this.content !== null) {\n            this.bbox = this.content.getBBox();\n        }\n        else {\n            this.bbox = Rect2.union(...this.children.map((child) => child.getBBox()));\n        }\n        if (bubbleUp && !oldBBox.eq(this.bbox)) {\n            if (this.bbox.containsRect(oldBBox)) {\n                this.parent?.unionBBoxWith(this.bbox);\n            }\n            else {\n                this.parent?.recomputeBBox(true);\n            }\n        }\n        this.checkRep();\n    }\n    // Grows this' bounding box to also include `other`.\n    // Always bubbles up.\n    unionBBoxWith(other) {\n        this.bbox = this.bbox.union(other);\n        this.parent?.unionBBoxWith(other);\n    }\n    updateParents(recursive = false) {\n        for (const child of this.children) {\n            child.parent = this;\n            if (recursive) {\n                child.updateParents(recursive);\n            }\n        }\n    }\n    rebalance() {\n        // If the current node is its parent's only child,\n        if (this.parent && this.parent.children.length === 1) {\n            console.assert(this.parent.content === null);\n            console.assert(this.parent.children[0] === this);\n            // Remove this' parent, if this' parent isn't the root.\n            const oldParent = this.parent;\n            if (oldParent.parent !== null) {\n                const newParent = oldParent.parent;\n                newParent.children = newParent.children.filter((c) => c !== oldParent);\n                oldParent.parent = null;\n                oldParent.children = [];\n                this.parent = newParent;\n                newParent.children.push(this);\n                this.parent.recomputeBBox(false);\n            }\n            else if (this.content === null) {\n                // Remove this and transfer this' children to the parent.\n                this.parent.children = this.children;\n                this.parent.updateParents();\n                this.parent = null;\n            }\n        }\n        // Create virtual containers for children. Handles the case where there\n        // are many small, often non-overlapping children that we still want to be grouped.\n        if (this.children.length > this.targetChildCount * 10) {\n            const grid = this.getBBox().divideIntoGrid(4, 4);\n            const indexToCount = [];\n            while (indexToCount.length < grid.length) {\n                indexToCount.push(0);\n            }\n            for (const child of this.children) {\n                for (let i = 0; i < grid.length; i++) {\n                    if (grid[i].containsRect(child.getBBox())) {\n                        indexToCount[i]++;\n                    }\n                }\n            }\n            let indexWithGreatest = 0;\n            let greatestCount = indexToCount[0];\n            for (let i = 1; i < indexToCount.length; i++) {\n                if (indexToCount[i] > greatestCount) {\n                    indexWithGreatest = i;\n                    greatestCount = indexToCount[i];\n                }\n            }\n            const targetGridSquare = grid[indexWithGreatest];\n            // Avoid clustering if just a few children would be grouped.\n            // Unnecessary clustering can lead to unnecessarily nested nodes.\n            if (greatestCount > 4) {\n                const newChildren = [];\n                const childNodeChildren = [];\n                for (const child of this.children) {\n                    if (targetGridSquare.containsRect(child.getBBox())) {\n                        childNodeChildren.push(child);\n                    }\n                    else {\n                        newChildren.push(child);\n                    }\n                }\n                if (childNodeChildren.length < this.children.length) {\n                    this.children = newChildren;\n                    const child = new ImageNode(this);\n                    this.children.push(child);\n                    child.children = childNodeChildren;\n                    child.updateParents(false);\n                    child.recomputeBBox(false);\n                    child.rebalance();\n                }\n            }\n        }\n        // Empty?\n        if (this.parent && this.children.length === 0 && this.content === null) {\n            this.remove();\n        }\n    }\n    // Removes the parent-to-child link.\n    // Called internally by `.remove`\n    removeChild(child) {\n        this.checkRep();\n        const oldChildCount = this.children.length;\n        this.children = this.children.filter((node) => {\n            return node !== child;\n        });\n        console.assert(this.children.length === oldChildCount - 1, `${oldChildCount - 1} ≠ ${this.children.length} after removing all nodes equal to ${child}. Nodes should only be removed once.`);\n        this.children.forEach((child) => {\n            child.rebalance();\n        });\n        this.recomputeBBox(true);\n        this.rebalance();\n        this.checkRep();\n    }\n    // Remove this node and all of its children\n    remove() {\n        this.content?.onRemoveFromImage();\n        if (!this.parent) {\n            this.content = null;\n            this.children = [];\n            return;\n        }\n        this.parent.removeChild(this);\n        // Remove the child-to-parent link and invalid this\n        this.parent = null;\n        this.content = null;\n        this.children = [];\n        this.checkRep();\n    }\n    // Creates a (potentially incomplete) async rendering of this image.\n    // Returns false if stopped early\n    async renderAllAsync(renderer, \n    // Used to pause/stop the renderer process\n    preRenderComponent) {\n        const leaves = this.getLeaves();\n        sortLeavesByZIndex(leaves);\n        const totalLeaves = leaves.length;\n        for (let leafIndex = 0; leafIndex < totalLeaves; leafIndex++) {\n            const leaf = leaves[leafIndex];\n            const component = leaf.getContent();\n            // Even though leaf was originally a leaf, it might not be any longer --\n            // rendering is async and the tree can change during that time.\n            if (!component) {\n                continue;\n            }\n            const shouldContinue = await preRenderComponent(component, leafIndex, totalLeaves);\n            if (!shouldContinue) {\n                return false;\n            }\n            component.render(renderer, undefined);\n        }\n        return true;\n    }\n    render(renderer, visibleRect) {\n        let leaves;\n        if (visibleRect) {\n            leaves = this.getLeavesIntersectingRegion(visibleRect, (rect) => renderer.isTooSmallToRender(rect));\n        }\n        else {\n            leaves = this.getLeaves();\n        }\n        sortLeavesByZIndex(leaves);\n        // If some components hide others (and we're permitted to simplify,\n        // which is true in the case of visibleRect being defined), then only\n        // draw the non-hidden components:\n        const startIndex = computeFirstIndexToRender(leaves);\n        for (let i = startIndex; i < leaves.length; i++) {\n            const leaf = leaves[i];\n            // Leaves by definition have content\n            leaf.getContent().render(renderer, visibleRect);\n        }\n        // Show debug information\n        if (debugMode && visibleRect) {\n            if (startIndex !== 0) {\n                console.log('EditorImage: skipped ', startIndex, 'nodes due to occlusion');\n            }\n            this.renderDebugBoundingBoxes(renderer, visibleRect);\n        }\n    }\n    // Debug only: Shows bounding boxes of this and all children.\n    renderDebugBoundingBoxes(renderer, visibleRect, depth = 0) {\n        const bbox = this.getBBox();\n        const pixelSize = 1 / (renderer.getSizeOfCanvasPixelOnScreen() || 1);\n        if (bbox.maxDimension < 3 * pixelSize || !bbox.intersects(visibleRect)) {\n            return;\n        }\n        // Render debug information for this\n        renderer.startObject(bbox);\n        // Different styling for leaf nodes\n        const isLeaf = !!this.content;\n        const fill = isLeaf ? Color4.ofRGBA(1, 0, 1, 0.4) : Color4.ofRGBA(0, 1, Math.sin(depth), 0.6);\n        const lineWidth = isLeaf ? 1 * pixelSize : 2 * pixelSize;\n        renderer.drawRect(bbox.intersection(visibleRect), lineWidth, { fill });\n        renderer.endObject();\n        if (bbox.maxDimension > visibleRect.maxDimension / 3) {\n            const textStyle = {\n                fontFamily: 'monospace',\n                size: bbox.minDimension / 20,\n                renderingStyle: { fill: Color4.red },\n            };\n            renderer.drawText(`Depth: ${depth}`, Mat33.translation(bbox.bottomLeft), textStyle);\n        }\n        // Render debug information for children\n        for (const child of this.children) {\n            child.renderDebugBoundingBoxes(renderer, visibleRect, depth + 1);\n        }\n    }\n    checkRep(depth = 0) {\n        // Slow -- disabld by default\n        if (debugMode) {\n            if (this.parent && !this.parent.children.includes(this)) {\n                throw new Error(`Parent does not have this node as a child. (depth: ${depth})`);\n            }\n            let expectedBBox = null;\n            const seenChildren = new Set();\n            for (const child of this.children) {\n                expectedBBox ??= child.getBBox();\n                expectedBBox = expectedBBox.union(child.getBBox());\n                if (child.parent !== this) {\n                    throw new Error(`Child with bbox ${child.getBBox()} and ${child.children.length} has wrong parent (was ${child.parent}).`);\n                }\n                // Children should only be present once\n                if (seenChildren.has(child)) {\n                    throw new Error(`Child ${child} is present twice or more in its parent's child list`);\n                }\n                seenChildren.add(child);\n            }\n            const tolerance = this.bbox.minDimension / 100;\n            if (expectedBBox && !this.bbox.eq(expectedBBox, tolerance)) {\n                throw new Error(`Wrong bounding box ${expectedBBox} \\\\neq ${this.bbox} (depth: ${depth})`);\n            }\n        }\n    }\n}\nImageNode.idCounter = 0;\n/** An `ImageNode` that can properly handle fullscreen/data components. @internal */\nexport class RootImageNode extends ImageNode {\n    constructor() {\n        super(...arguments);\n        // Nodes that will always take up the entire screen\n        this.fullscreenChildren = [];\n        // Nodes that will never be visible unless a full render is done.\n        this.dataComponents = [];\n    }\n    getChildrenIntersectingRegion(region, _isTooSmall) {\n        const result = super.getChildrenIntersectingRegion(region);\n        for (const node of this.fullscreenChildren) {\n            result.push(node);\n        }\n        return result;\n    }\n    getChildrenOrSelfIntersectingRegion(region, _isTooSmall) {\n        const content = this.getContent();\n        // Fullscreen components always intersect/contain\n        if (content && content.getSizingMode() === ComponentSizingMode.FillScreen) {\n            return [this];\n        }\n        return super.getChildrenOrSelfIntersectingRegion(region, _isTooSmall);\n    }\n    getLeaves() {\n        const leaves = super.getLeaves();\n        // Add fullscreen/data components — this method should\n        // return *all* leaves.\n        return this.dataComponents.concat(this.fullscreenChildren, leaves);\n    }\n    removeChild(child) {\n        let removed = false;\n        const checkTargetChild = (component) => {\n            const isTarget = component === child;\n            removed ||= isTarget;\n            return !isTarget;\n        };\n        // Check whether the child is stored in the data/fullscreen\n        // component arrays first.\n        this.dataComponents = this.dataComponents.filter(checkTargetChild);\n        this.fullscreenChildren = this.fullscreenChildren.filter(checkTargetChild);\n        if (!removed) {\n            super.removeChild(child);\n        }\n    }\n    getChildWithContent(target) {\n        const searchExtendedChildren = () => {\n            // Search through all extended children\n            const candidates = this.fullscreenChildren.concat(this.dataComponents);\n            for (const candidate of candidates) {\n                if (candidate.getContent() === target) {\n                    return candidate;\n                }\n            }\n            return null;\n        };\n        // If positioned as if a standard child, search using the superclass first.\n        // Because it could be mislabeled, also search the extended children if the superclass\n        // search fails.\n        if (target.getSizingMode() === ComponentSizingMode.BoundingBox) {\n            return super.getChildWithContent(target) ?? searchExtendedChildren();\n        }\n        // Fall back to the superclass -- it's possible that the component has\n        // changed labels.\n        return super.getChildWithContent(target) ?? searchExtendedChildren();\n    }\n    addLeaf(leafContent) {\n        const sizingMode = leafContent.getSizingMode();\n        if (sizingMode === ComponentSizingMode.BoundingBox) {\n            return super.addLeaf(leafContent);\n        }\n        else if (sizingMode === ComponentSizingMode.FillScreen) {\n            this.onContentChange();\n            const newNode = ImageNode.createLeafNode(this, leafContent);\n            this.fullscreenChildren.push(newNode);\n            return newNode;\n        }\n        else if (sizingMode === ComponentSizingMode.Anywhere) {\n            this.onContentChange();\n            const newNode = ImageNode.createLeafNode(this, leafContent);\n            this.dataComponents.push(newNode);\n            return newNode;\n        }\n        else {\n            const exhaustivenessCheck = sizingMode;\n            throw new Error(`Invalid sizing mode, ${sizingMode}`);\n            return exhaustivenessCheck;\n        }\n    }\n}\n", "// Types related to the image editor\n/** @see {@link EditorNotifier} */\nexport var EditorEventType;\n(function (EditorEventType) {\n    EditorEventType[EditorEventType[\"ToolEnabled\"] = 0] = \"ToolEnabled\";\n    EditorEventType[EditorEventType[\"ToolDisabled\"] = 1] = \"ToolDisabled\";\n    EditorEventType[EditorEventType[\"ToolUpdated\"] = 2] = \"ToolUpdated\";\n    EditorEventType[EditorEventType[\"UndoRedoStackUpdated\"] = 3] = \"UndoRedoStackUpdated\";\n    EditorEventType[EditorEventType[\"CommandDone\"] = 4] = \"CommandDone\";\n    EditorEventType[EditorEventType[\"CommandUndone\"] = 5] = \"CommandUndone\";\n    EditorEventType[EditorEventType[\"ObjectAdded\"] = 6] = \"ObjectAdded\";\n    EditorEventType[EditorEventType[\"ViewportChanged\"] = 7] = \"ViewportChanged\";\n    EditorEventType[EditorEventType[\"DisplayResized\"] = 8] = \"DisplayResized\";\n    EditorEventType[EditorEventType[\"SelectionUpdated\"] = 9] = \"SelectionUpdated\";\n    EditorEventType[EditorEventType[\"ReadOnlyModeToggled\"] = 10] = \"ReadOnlyModeToggled\";\n    /** @internal */\n    EditorEventType[EditorEventType[\"ColorPickerToggled\"] = 11] = \"ColorPickerToggled\";\n    /** @internal */\n    EditorEventType[EditorEventType[\"ColorPickerColorSelected\"] = 12] = \"ColorPickerColorSelected\";\n    /** @deprecated @internal */\n    EditorEventType[EditorEventType[\"ToolbarDropdownShown\"] = 13] = \"ToolbarDropdownShown\";\n})(EditorEventType || (EditorEventType = {}));\n// Types of `EditorUndoStackUpdated` events.\nexport var UndoEventType;\n(function (UndoEventType) {\n    UndoEventType[UndoEventType[\"CommandDone\"] = 0] = \"CommandDone\";\n    UndoEventType[UndoEventType[\"CommandUndone\"] = 1] = \"CommandUndone\";\n    UndoEventType[UndoEventType[\"CommandRedone\"] = 2] = \"CommandRedone\";\n})(UndoEventType || (UndoEventType = {}));\n", "import { Vec2 } from '@js-draw/math';\nexport var PointerDevice;\n(function (PointerDevice) {\n    PointerDevice[PointerDevice[\"Pen\"] = 0] = \"Pen\";\n    PointerDevice[PointerDevice[\"Eraser\"] = 1] = \"Eraser\";\n    PointerDevice[PointerDevice[\"Touch\"] = 2] = \"Touch\";\n    PointerDevice[PointerDevice[\"PrimaryButtonMouse\"] = 3] = \"PrimaryButtonMouse\";\n    PointerDevice[PointerDevice[\"RightButtonMouse\"] = 4] = \"RightButtonMouse\";\n    PointerDevice[PointerDevice[\"Other\"] = 5] = \"Other\";\n})(PointerDevice || (PointerDevice = {}));\n// Provides a snapshot containing information about a pointer. A Pointer\n// object is immutable — it will not be updated when the pointer's information changes.\nexport default class Pointer {\n    constructor(\n    // The (x, y) position of the pointer relative to the top-left corner\n    // of the visible canvas.\n    screenPos, \n    // Position of the pointer relative to the top left corner of the drawing\n    // surface.\n    canvasPos, pressure, isPrimary, down, device, \n    // Unique ID for the pointer\n    id, \n    // Numeric timestamp (milliseconds, as from `performance.now()`).\n    timeStamp) {\n        this.screenPos = screenPos;\n        this.canvasPos = canvasPos;\n        this.pressure = pressure;\n        this.isPrimary = isPrimary;\n        this.down = down;\n        this.device = device;\n        this.id = id;\n        this.timeStamp = timeStamp;\n    }\n    /**\n     * Snaps this pointer to the nearest grid point (rounds the coordinates of this\n     * pointer based on the current zoom). Returns a new Pointer and does not modify\n     * this.\n     */\n    snappedToGrid(viewport) {\n        const snappedCanvasPos = viewport.snapToGrid(this.canvasPos);\n        return this.withCanvasPosition(snappedCanvasPos, viewport);\n    }\n    // Snap this pointer to the X or Y axis (whichever is closer), where (0,0)\n    // is considered to be at `originPointScreen`.\n    // @internal\n    lockedToXYAxesScreen(originPointScreen, viewport) {\n        const current = this.screenPos;\n        const currentFromStart = current.minus(originPointScreen);\n        // Determine whether the last point was closer to being on the\n        // x- or y- axis.\n        const projOntoXAxis = Vec2.unitX.times(currentFromStart.x);\n        const projOntoYAxis = Vec2.unitY.times(currentFromStart.y);\n        let pos;\n        if (currentFromStart.dot(projOntoXAxis) > currentFromStart.dot(projOntoYAxis)) {\n            pos = projOntoXAxis;\n        }\n        else {\n            pos = projOntoYAxis;\n        }\n        pos = pos.plus(originPointScreen);\n        return this.withScreenPosition(pos, viewport);\n    }\n    /** @see {@link withCanvasPosition} */\n    withScreenPosition(screenPos, viewport) {\n        const canvasPos = viewport.screenToCanvas(screenPos);\n        return this.withCanvasPosition(canvasPos, viewport);\n    }\n    /** Returns a copy of this pointer with a changed timestamp. */\n    withTimestamp(timeStamp) {\n        return new Pointer(this.screenPos, this.canvasPos, this.pressure, this.isPrimary, this.down, this.device, this.id, timeStamp);\n    }\n    /**\n     * Returns a copy of this pointer with a new position. The screen position is determined\n     * by the given `canvasPos`.\n     */\n    withCanvasPosition(canvasPos, viewport) {\n        const screenPos = viewport.canvasToScreen(canvasPos);\n        return new Pointer(screenPos, canvasPos, this.pressure, this.isPrimary, this.down, this.device, this.id, this.timeStamp);\n    }\n    // Creates a Pointer from a DOM event. If `relativeTo` is given, (0, 0) in screen coordinates is\n    // considered the top left of `relativeTo`.\n    static ofEvent(evt, isDown, viewport, relativeTo) {\n        let screenPos = Vec2.of(evt.clientX, evt.clientY);\n        if (relativeTo) {\n            const bbox = relativeTo.getBoundingClientRect();\n            screenPos = screenPos.minus(Vec2.of(bbox.left, bbox.top));\n        }\n        const pointerTypeToDevice = {\n            mouse: PointerDevice.PrimaryButtonMouse,\n            pen: PointerDevice.Pen,\n            touch: PointerDevice.Touch,\n        };\n        let device = pointerTypeToDevice[evt.pointerType] ?? PointerDevice.Other;\n        const eraserButtonMask = 0x20;\n        if (device === PointerDevice.Pen && (evt.buttons & eraserButtonMask) !== 0) {\n            device = PointerDevice.Eraser;\n        }\n        const timeStamp = evt.timeStamp;\n        const canvasPos = viewport.roundPoint(viewport.screenToCanvas(screenPos));\n        if (device === PointerDevice.PrimaryButtonMouse) {\n            if (evt.buttons & 0x2) {\n                device = PointerDevice.RightButtonMouse;\n            }\n            // Commented out: Mouse up events seem to not satisfy this condition on mouse up.\n            // else if (!(evt.buttons & 0x1)) {\n            //\tdevice = PointerDevice.Other;\n            //}\n        }\n        return new Pointer(screenPos, canvasPos, evt.pressure ?? null, evt.isPrimary, isDown, device, evt.pointerId, timeStamp);\n    }\n    // Create a new Pointer from a point on the canvas.\n    // Intended for unit tests.\n    static ofCanvasPoint(canvasPos, isDown, viewport, id = 0, device = PointerDevice.Pen, isPrimary = true, pressure = null, timeStamp = null) {\n        const screenPos = viewport.canvasToScreen(canvasPos);\n        timeStamp ??= performance.now();\n        return new Pointer(screenPos, canvasPos, pressure, isPrimary, isDown, device, id, timeStamp);\n    }\n    // Create a new Pointer from a point on the screen.\n    // Intended for unit tests.\n    static ofScreenPoint(screenPos, isDown, viewport, id = 0, device = PointerDevice.Pen, isPrimary = true, pressure = null, timeStamp = null) {\n        const canvasPos = viewport.screenToCanvas(screenPos);\n        timeStamp ??= performance.now();\n        return new Pointer(screenPos, canvasPos, pressure, isPrimary, isDown, device, id, timeStamp);\n    }\n}\n", "/** @internal */\nconst untilNextAnimationFrame = () => {\n    return new Promise((resolve) => {\n        requestAnimationFrame(() => resolve());\n    });\n};\nexport default untilNextAnimationFrame;\n", "export var InputEvtType;\n(function (InputEvtType) {\n    InputEvtType[InputEvtType[\"PointerDownEvt\"] = 0] = \"PointerDownEvt\";\n    InputEvtType[InputEvtType[\"PointerMoveEvt\"] = 1] = \"PointerMoveEvt\";\n    InputEvtType[InputEvtType[\"PointerUpEvt\"] = 2] = \"PointerUpEvt\";\n    InputEvtType[InputEvtType[\"GestureCancelEvt\"] = 3] = \"GestureCancelEvt\";\n    InputEvtType[InputEvtType[\"WheelEvt\"] = 4] = \"WheelEvt\";\n    InputEvtType[InputEvtType[\"KeyPressEvent\"] = 5] = \"KeyPressEvent\";\n    InputEvtType[InputEvtType[\"KeyUpEvent\"] = 6] = \"KeyUpEvent\";\n    InputEvtType[InputEvtType[\"CopyEvent\"] = 7] = \"CopyEvent\";\n    InputEvtType[InputEvtType[\"PasteEvent\"] = 8] = \"PasteEvent\";\n    InputEvtType[InputEvtType[\"ContextMenu\"] = 9] = \"ContextMenu\";\n})(InputEvtType || (InputEvtType = {}));\n// Constructor\nconst keyEventFromHTMLEvent = (kind, event) => {\n    return {\n        kind,\n        key: event.key,\n        code: event.code,\n        ctrlKey: event.ctrlKey || event.metaKey,\n        altKey: event.altKey,\n        shiftKey: event.shiftKey,\n    };\n};\nexport const keyUpEventFromHTMLEvent = (event) => {\n    return keyEventFromHTMLEvent(InputEvtType.KeyUpEvent, event);\n};\nexport const keyPressEventFromHTMLEvent = (event) => {\n    return keyEventFromHTMLEvent(InputEvtType.KeyPressEvent, event);\n};\nexport const isPointerEvt = (event) => {\n    return (event.kind === InputEvtType.PointerDownEvt ||\n        event.kind === InputEvtType.PointerMoveEvt ||\n        event.kind === InputEvtType.PointerUpEvt);\n};\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ReactiveValueImpl_value, _ReactiveValueImpl_onUpdateListeners;\nconst noOpUpdateListenerResult = {\n    remove() { },\n};\n/**\n * An update listener that does nothing. Useful for reactive values\n * that will never change.\n */\nconst noOpSetUpdateListener = () => {\n    return noOpUpdateListenerResult;\n};\n/**\n * A `ReactiveValue` is a value that\n * - updates periodically,\n * - can fire listeners when it updates,\n * - and can be chanined together with other `ReactiveValue`s.\n *\n * A `ReactiveValue` is a read-only view. See {@link MutableReactiveValue} for a\n * read-write view.\n *\n * Static methods in the `ReactiveValue` and `MutableReactiveValue` classes are\n * constructors (e.g. `fromImmutable`).\n *\n * Avoid extending this class from an external library, as that may not be stable.\n */\nexport class ReactiveValue {\n    /** Returns a promise that resolves when this value is next changed. */\n    waitForNextUpdate() {\n        return new Promise((resolve) => {\n            const listener = this.onUpdate((value) => {\n                listener.remove();\n                resolve(value);\n            });\n        });\n    }\n    /** Creates a `ReactiveValue` with an initial value, `initialValue`. */\n    static fromInitialValue(initialValue) {\n        return new ReactiveValueImpl(initialValue);\n    }\n    /** Returns a `ReactiveValue` that is **known** will never change. */\n    static fromImmutable(value) {\n        return {\n            get: () => value,\n            onUpdate: noOpSetUpdateListener,\n            onUpdateAndNow: (callback) => {\n                callback(value);\n                return noOpUpdateListenerResult;\n            },\n            // Never resolves -- immutable.\n            waitForNextUpdate: () => new Promise(() => { }),\n        };\n    }\n    /**\n     * Creates a `ReactiveValue` whose values come from `callback`.\n     *\n     * `callback` is called whenever any of `sourceValues` are updated and initially to\n     * set the initial value of the result.\n     */\n    static fromCallback(callback, sourceValues) {\n        const result = new ReactiveValueImpl(callback());\n        const resultRef = typeof WeakRef !== 'undefined' ? new WeakRef(result) : { deref: () => result };\n        for (const value of sourceValues) {\n            const listener = value.onUpdate(() => {\n                // Use resultRef to allow `result` to be garbage collected\n                // despite this listener.\n                const value = resultRef.deref();\n                if (value) {\n                    value.set(callback());\n                }\n                else {\n                    listener.remove();\n                }\n            });\n        }\n        return result;\n    }\n    static map(source, map, inverseMap) {\n        const result = ReactiveValue.fromInitialValue(map(source.get()));\n        let expectedResultValue = result.get();\n        source.onUpdate((newValue) => {\n            expectedResultValue = map(newValue);\n            result.set(expectedResultValue);\n        });\n        if (inverseMap) {\n            result.onUpdate((newValue) => {\n                // Prevent infinite loops if inverseMap is not a true\n                // inverse.\n                if (newValue !== expectedResultValue) {\n                    source.set(inverseMap(newValue));\n                }\n            });\n        }\n        return result;\n    }\n    static union(values) {\n        return ReactiveValue.fromCallback(() => {\n            return values.map((value) => value.get());\n        }, values);\n    }\n}\nexport class MutableReactiveValue extends ReactiveValue {\n    static fromProperty(sourceValue, propertyName) {\n        const child = ReactiveValue.fromInitialValue(sourceValue.get()[propertyName]);\n        const childRef = typeof WeakRef !== 'undefined' ? new WeakRef(child) : { deref: () => child };\n        // When the source is updated...\n        const sourceListener = sourceValue.onUpdate((newValue) => {\n            const childValue = childRef.deref();\n            if (childValue) {\n                childValue.set(newValue[propertyName]);\n            }\n            else {\n                // TODO: What if `sourceValue` would be dropped before\n                // the child value?\n                sourceListener.remove();\n            }\n        });\n        // When the child is updated, also apply the update to the\n        // parent.\n        child.onUpdate((newValue) => {\n            sourceValue.set({\n                ...sourceValue.get(),\n                [propertyName]: newValue,\n            });\n        });\n        return child;\n    }\n}\n// @internal\nclass ReactiveValueImpl extends MutableReactiveValue {\n    constructor(initialValue) {\n        super();\n        _ReactiveValueImpl_value.set(this, void 0);\n        _ReactiveValueImpl_onUpdateListeners.set(this, void 0);\n        __classPrivateFieldSet(this, _ReactiveValueImpl_value, initialValue, \"f\");\n        __classPrivateFieldSet(this, _ReactiveValueImpl_onUpdateListeners, [], \"f\");\n    }\n    set(newValue) {\n        if (__classPrivateFieldGet(this, _ReactiveValueImpl_value, \"f\") === newValue) {\n            return;\n        }\n        __classPrivateFieldSet(this, _ReactiveValueImpl_value, newValue, \"f\");\n        for (const listener of __classPrivateFieldGet(this, _ReactiveValueImpl_onUpdateListeners, \"f\")) {\n            listener(newValue);\n        }\n    }\n    get() {\n        return __classPrivateFieldGet(this, _ReactiveValueImpl_value, \"f\");\n    }\n    onUpdate(listener) {\n        // **Note**: If memory is a concern, listeners should avoid referencing this\n        // reactive value directly. Doing so allows the value to be garbage collected when\n        // no longer referenced.\n        __classPrivateFieldGet(this, _ReactiveValueImpl_onUpdateListeners, \"f\").push(listener);\n        return {\n            remove: () => {\n                __classPrivateFieldSet(this, _ReactiveValueImpl_onUpdateListeners, __classPrivateFieldGet(this, _ReactiveValueImpl_onUpdateListeners, \"f\").filter((otherListener) => {\n                    return otherListener !== listener;\n                }), \"f\");\n            },\n        };\n    }\n    onUpdateAndNow(callback) {\n        callback(this.get());\n        return this.onUpdate(callback);\n    }\n}\n_ReactiveValueImpl_value = new WeakMap(), _ReactiveValueImpl_onUpdateListeners = new WeakMap();\nexport default ReactiveValue;\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseTool_enabled, _BaseTool_group, _BaseTool_inputMapper, _BaseTool_readOnlyEditorChangeListener;\nimport  { EditorEventType }  from '../types.mjs';\nimport  { InputEvtType, }  from '../inputEvents.mjs';\nimport  { ReactiveValue }  from '../util/ReactiveValue.mjs';\nclass BaseTool {\n    constructor(notifier, description) {\n        this.notifier = notifier;\n        this.description = description;\n        _BaseTool_enabled.set(this, void 0);\n        _BaseTool_group.set(this, null);\n        _BaseTool_inputMapper.set(this, null);\n        _BaseTool_readOnlyEditorChangeListener.set(this, null);\n        __classPrivateFieldSet(this, _BaseTool_enabled, ReactiveValue.fromInitialValue(true), \"f\");\n        __classPrivateFieldGet(this, _BaseTool_enabled, \"f\").onUpdate((enabled) => {\n            // Ensure that at most one tool in the group is enabled.\n            if (enabled) {\n                __classPrivateFieldGet(this, _BaseTool_group, \"f\")?.notifyEnabled(this);\n                this.notifier.dispatch(EditorEventType.ToolEnabled, {\n                    kind: EditorEventType.ToolEnabled,\n                    tool: this,\n                });\n            }\n            else {\n                this.notifier.dispatch(EditorEventType.ToolDisabled, {\n                    kind: EditorEventType.ToolDisabled,\n                    tool: this,\n                });\n            }\n        });\n    }\n    /** Override this to allow this tool to be enabled in a read-only editor */\n    canReceiveInputInReadOnlyEditor() {\n        return false;\n    }\n    setInputMapper(mapper) {\n        __classPrivateFieldSet(this, _BaseTool_inputMapper, mapper, \"f\");\n        if (mapper) {\n            mapper.setEmitListener((event) => this.dispatchEventToCallback(event));\n        }\n    }\n    getInputMapper() {\n        return __classPrivateFieldGet(this, _BaseTool_inputMapper, \"f\");\n    }\n    dispatchEventToCallback(event) {\n        let exhaustivenessCheck;\n        switch (event.kind) {\n            case InputEvtType.PointerDownEvt:\n                return this.onPointerDown(event);\n            case InputEvtType.PointerMoveEvt:\n                this.onPointerMove(event);\n                break;\n            case InputEvtType.PointerUpEvt:\n                return this.onPointerUp(event) ?? false;\n            case InputEvtType.GestureCancelEvt:\n                this.onGestureCancel(event);\n                break;\n            case InputEvtType.WheelEvt:\n                return this.onWheel(event);\n            case InputEvtType.KeyPressEvent:\n                return this.onKeyPress(event);\n            case InputEvtType.KeyUpEvent:\n                return this.onKeyUp(event);\n            case InputEvtType.CopyEvent:\n                return this.onCopy(event);\n            case InputEvtType.PasteEvent:\n                return this.onPaste(event);\n            case InputEvtType.ContextMenu:\n                return this.onContextMenu(event);\n            default:\n                exhaustivenessCheck = event;\n                return exhaustivenessCheck;\n        }\n        return true;\n    }\n    // @internal\n    onEvent(event) {\n        if (__classPrivateFieldGet(this, _BaseTool_inputMapper, \"f\")) {\n            return __classPrivateFieldGet(this, _BaseTool_inputMapper, \"f\").onEvent(event);\n        }\n        return this.dispatchEventToCallback(event);\n    }\n    /**\n     * Returns true iff the tool handled the event and thus should receive additional\n     * events.\n     */\n    onPointerDown(_event) {\n        return false;\n    }\n    onPointerMove(_event) { }\n    /**\n     * Returns true iff there are additional pointers down and the tool should\n     * remain active to handle the additional events.\n     *\n     * For most purposes, this should return `false` or nothing.\n     */\n    onPointerUp(_event) { }\n    onGestureCancel(_event) { }\n    onWheel(_event) {\n        return false;\n    }\n    onCopy(_event) {\n        return false;\n    }\n    onPaste(_event) {\n        return false;\n    }\n    onKeyPress(_event) {\n        return false;\n    }\n    onKeyUp(_event) {\n        return false;\n    }\n    onContextMenu(_event) {\n        return false;\n    }\n    /**\n     * Return true if, while this tool is active, `_event` can be delivered to\n     * another tool that is higher priority than this.\n     * @internal May be renamed\n     */\n    eventCanBeDeliveredToNonActiveTool(_event) {\n        return true;\n    }\n    setEnabled(enabled) {\n        __classPrivateFieldGet(this, _BaseTool_enabled, \"f\").set(enabled);\n    }\n    isEnabled() {\n        return __classPrivateFieldGet(this, _BaseTool_enabled, \"f\").get();\n    }\n    /**\n     * Returns a {@link ReactiveValue} that updates based on whether this tool is\n     * enabled.\n     *\n     * @example\n     * ```ts\n     * const tool = new SomeTool();\n     *\n     * // Watch for changes in enabled status\n     * tool.enabledValue().onUpdate(enabled => doSomething(enabled));\n     * ```\n     */\n    enabledValue() {\n        return __classPrivateFieldGet(this, _BaseTool_enabled, \"f\");\n    }\n    // Connect this tool to a set of other tools, ensuring that at most one\n    // of the tools in the group is enabled.\n    setToolGroup(group) {\n        if (this.isEnabled()) {\n            group.notifyEnabled(this);\n        }\n        __classPrivateFieldSet(this, _BaseTool_group, group, \"f\");\n    }\n    getToolGroup() {\n        if (__classPrivateFieldGet(this, _BaseTool_group, \"f\")) {\n            return __classPrivateFieldGet(this, _BaseTool_group, \"f\");\n        }\n        return null;\n    }\n    // Called when the tool is removed/when the editor is destroyed.\n    // Subclasses that override this method **must call super.onDestroy()**.\n    onDestroy() {\n        __classPrivateFieldGet(this, _BaseTool_readOnlyEditorChangeListener, \"f\")?.remove();\n        __classPrivateFieldSet(this, _BaseTool_readOnlyEditorChangeListener, null, \"f\");\n        __classPrivateFieldSet(this, _BaseTool_group, null, \"f\");\n    }\n}\n_BaseTool_enabled = new WeakMap(), _BaseTool_group = new WeakMap(), _BaseTool_inputMapper = new WeakMap(), _BaseTool_readOnlyEditorChangeListener = new WeakMap();\nexport default BaseTool;\n", "export const defaultCommandLocalization = {\n    updatedViewport: 'Transformed Viewport',\n    transformedElements: (elemCount, action) => `Transformed ${elemCount} element${elemCount === 1 ? '' : 's'} (${action})`,\n    resizeOutputCommand: (newSize) => `Resized image to ${newSize.w}x${newSize.h}`,\n    enabledAutoresizeOutputCommand: 'Enabled output autoresize',\n    disabledAutoresizeOutputCommand: 'Disabled output autoresize',\n    addComponentAction: (componentDescription) => `Added ${componentDescription}`,\n    eraseAction: (componentDescription, numElems) => `Erased ${numElems} ${componentDescription}`,\n    duplicateAction: (componentDescription, numElems) => `Duplicated ${numElems} ${componentDescription}`,\n    unionOf: (actionDescription, actionCount) => `Union: ${actionCount} ${actionDescription}`,\n    inverseOf: (actionDescription) => `Inverse of ${actionDescription}`,\n    elements: 'Elements',\n    erasedNoElements: 'Erased nothing',\n    duplicatedNoElements: 'Duplicated nothing',\n    rotatedBy: (degrees) => `Rotated by ${Math.abs(degrees)} degrees ${degrees < 0 ? 'clockwise' : 'counter-clockwise'}`,\n    movedLeft: 'Moved left',\n    movedUp: 'Moved up',\n    movedDown: 'Moved down',\n    movedRight: 'Moved right',\n    zoomedOut: 'Zoomed out',\n    zoomedIn: 'Zoomed in',\n    andNMoreCommands: (count) => `And ${count} more commands.`,\n    selectedElements: (count) => `Selected ${count} element${count === 1 ? '' : 's'}`,\n};\n", "export const defaultComponentLocalization = {\n    unlabeledImageNode: 'Unlabeled image node',\n    stroke: 'Stroke',\n    svgObject: 'SVG Object',\n    emptyBackground: 'Empty background',\n    gridBackground: 'Grid background',\n    filledBackgroundWithColor: (color) => `Filled background (${color})`,\n    text: (text) => `Text object: ${text}`,\n    imageNode: (description) => `Image: ${description}`,\n    restyledElement: (elementDescription) => `Restyled ${elementDescription}`,\n};\n", "export const defaultTextRendererLocalization = {\n    pathNodeCount: (count) => `There are ${count} visible path objects.`,\n    textNodeCount: (count) => `There are ${count} visible text nodes.`,\n    imageNodeCount: (nodeCount) => `There are ${nodeCount} visible image nodes.`,\n    textNode: (content) => `Text: ${content}`,\n    imageNode: (label) => `Image: ${label}`,\n    unlabeledImageNode: 'Unlabeled image',\n    rerenderAsText: 'Re-render as text',\n};\n", "export const defaultToolbarUtilsLocalization = {\n    help: 'Help',\n    helpHidden: 'Help hidden',\n    next: 'Next',\n    previous: 'Previous',\n    close: 'Close',\n    helpScreenNavigationHelp: 'Click on a control for more information.',\n    helpControlsAccessibilityLabel: 'Controls: Activate a control to show help.',\n};\n", "import  { defaultToolbarUtilsLocalization }  from './utils/localization.mjs';\nexport const defaultToolbarLocalization = {\n    ...defaultToolbarUtilsLocalization,\n    pen: 'Pen',\n    eraser: 'Eraser',\n    select: 'Select',\n    handTool: 'Pan',\n    zoom: 'Zoom',\n    image: 'Image',\n    reformatSelection: 'Format selection',\n    inputAltText: 'Alt text',\n    decreaseImageSize: 'Decrease size',\n    resetImage: 'Reset',\n    chooseFile: 'Choose file',\n    dragAndDropHereOrBrowse: 'Drag and drop here\\nor\\n{{browse}}',\n    submit: 'Submit',\n    addAll: 'Add all',\n    cancel: 'Cancel',\n    resetView: 'Reset view',\n    thicknessLabel: 'Thickness',\n    colorLabel: 'Color',\n    fontLabel: 'Font',\n    textSize: 'Size',\n    resizeImageToSelection: 'Resize image to selection',\n    deleteSelection: 'Delete selection',\n    duplicateSelection: 'Duplicate selection',\n    exit: 'Exit',\n    save: 'Save',\n    undo: 'Undo',\n    redo: 'Redo',\n    fullStrokeEraser: 'Full stroke eraser',\n    selectPenType: 'Pen type',\n    selectShape: 'Shape',\n    pickColorFromScreen: 'Pick color from screen',\n    clickToPickColorAnnouncement: 'Click on the screen to pick a color',\n    colorSelectionCanceledAnnouncement: 'Color selection canceled',\n    selectionTool__lassoSelect: 'Freeform selection',\n    selectionTool__lassoSelect__help: 'When enabled, dragging creates a freeform (lasso) selection.',\n    selectionToolKeyboardShortcuts: 'Selection tool: Use arrow keys to move selected items, lowercase/uppercase ‘i’ and ‘o’ to resize.',\n    documentProperties: 'Page',\n    backgroundColor: 'Background color',\n    imageWidthOption: 'Width',\n    imageHeightOption: 'Height',\n    useGridOption: 'Grid',\n    enableAutoresizeOption: 'Auto-resize',\n    toggleOverflow: 'More',\n    about: 'About',\n    inputStabilization: 'Stabilization',\n    strokeAutocorrect: 'Autocorrect',\n    pressureSensitivity: 'Pressure',\n    touchPanning: 'Scroll with touch',\n    roundedTipPen: 'Round',\n    roundedTipPen2: 'Polyline',\n    flatTipPen: 'Flat',\n    arrowPen: 'Arrow',\n    linePen: 'Line',\n    outlinedRectanglePen: 'Outlined rectangle',\n    filledRectanglePen: 'Filled rectangle',\n    outlinedCirclePen: 'Outlined circle',\n    lockRotation: 'Lock rotation',\n    paste: 'Paste',\n    errorImageHasZeroSize: 'Error: Image has zero size',\n    describeTheImage: 'Image description',\n    fileInput__loading: 'Loading...',\n    fileInput__andNMoreFiles: (n) => `(...${n} more)`,\n    // Help text\n    penDropdown__baseHelpText: 'This tool draws shapes or freehand lines.',\n    penDropdown__colorHelpText: \"Changes the pen's color\",\n    penDropdown__thicknessHelpText: 'Changes the thickness of strokes drawn by the pen.',\n    penDropdown__penTypeHelpText: 'Changes the pen style.\\n\\nEither a “pen” style or “shape” can be chosen. Choosing a “pen” style draws freehand lines. Choosing a “shape” draws shapes.',\n    penDropdown__autocorrectHelpText: 'Converts approximate freehand lines and rectangles to perfect ones.\\n\\nThe pen must be held stationary at the end of a stroke to trigger a correction.',\n    penDropdown__stabilizationHelpText: 'Draws smoother strokes.\\n\\nThis also adds a short delay between the mouse/stylus and the stroke.',\n    penDropdown__pressureSensitivityHelpText: 'Changes the thickness of strokes according to how hard you press, when using a compatible device like a stylus.',\n    handDropdown__baseHelpText: 'This tool is responsible for scrolling, rotating, and zooming the editor.',\n    handDropdown__zoomInHelpText: 'Zooms in.',\n    handDropdown__zoomOutHelpText: 'Zooms out.',\n    handDropdown__resetViewHelpText: 'Resets the zoom level to 100% and resets scroll.',\n    handDropdown__zoomDisplayHelpText: 'Shows the current zoom level. 100% shows the image at its actual size.',\n    handDropdown__touchPanningHelpText: 'When enabled, touchscreen gestures move the image rather than select or draw.',\n    handDropdown__lockRotationHelpText: 'When enabled, prevents touch gestures from rotating the screen.',\n    eraserDropdown__baseHelpText: 'This tool removes strokes, images, and text under the cursor.',\n    eraserDropdown__thicknessHelpText: 'Changes the size of the eraser.',\n    eraserDropdown__fullStrokeEraserHelpText: 'When in full-stroke mode, entire shapes are erased.\\n\\nWhen not in full-stroke mode, shapes can be partially erased.',\n    selectionDropdown__baseHelpText: 'Selects content and manipulates the selection',\n    selectionDropdown__resizeToHelpText: \"Crops the drawing to the size of what's currently selected.\\n\\nIf auto-resize is enabled, it will be disabled.\",\n    selectionDropdown__deleteHelpText: 'Erases selected items.',\n    selectionDropdown__duplicateHelpText: 'Makes a copy of selected items.',\n    selectionDropdown__changeColorHelpText: 'Changes the color of selected items.',\n    pageDropdown__baseHelpText: \"Controls the drawing canvas' background color, pattern, and size.\",\n    pageDropdown__backgroundColorHelpText: 'Changes the background color of the drawing canvas.',\n    pageDropdown__gridCheckboxHelpText: 'Enables/disables a background grid pattern.',\n    pageDropdown__autoresizeCheckboxHelpText: 'When checked, the page grows to fit the drawing.\\n\\nWhen unchecked, the page is visible and its size can be set manually.',\n    pageDropdown__aboutButtonHelpText: 'Shows version, debug, and other information.',\n    colorPickerPipetteHelpText: 'Picks a color from the screen.',\n    colorPickerToggleHelpText: 'Opens/closes the color picker.',\n    closeSidebar: (toolName) => `Close sidebar for ${toolName}`,\n    dropdownShown: (toolName) => `Menu for ${toolName} shown`,\n    dropdownHidden: (toolName) => `Menu for ${toolName} hidden`,\n    zoomLevel: (zoomPercent) => `Zoom: ${zoomPercent}%`,\n    colorChangedAnnouncement: (color) => `Color changed to ${color}`,\n    imageSize: (size, units) => `Image size: ${size} ${units}`,\n    imageLoadError: (message) => `Error loading image: ${message}`,\n};\n", "export const defaultToolLocalization = {\n    penTool: (penId) => `Pen ${penId}`,\n    selectionTool: 'Selection',\n    selectAllTool: 'Select all shortcut',\n    eraserTool: 'Eraser',\n    touchPanTool: 'Touch panning',\n    twoFingerPanZoomTool: 'Panning and zooming',\n    undoRedoTool: 'Undo/Redo',\n    rightClickDragPanTool: 'Right-click drag',\n    pipetteTool: 'Pick color from screen',\n    keyboardPanZoom: 'Keyboard pan/zoom shortcuts',\n    selectionMenu__show: 'Show selection menu',\n    selectionMenu__copyToClipboard: 'Copy to clipboard',\n    selectionMenu__duplicate: 'Duplicate',\n    selectionMenu__delete: 'Delete',\n    selectionMenu__paste: 'Paste',\n    copyPasteError__heading: 'Copy/paste',\n    copyPasteError__description: 'Something went wrong — this tool may not have clipboard access.',\n    copyPasteError__errorDetails: 'Show error',\n    copyPasteError__pasteRetry: 'To retry, please paste into the input box below:',\n    copyPasteError__copyRetry: 'To retry, please copy the text in the input box below:',\n    copyPasteError__copyMe: 'Copy me!',\n    autocorrectedTo: (strokeDescription) => `Autocorrected to ${strokeDescription}`,\n    autocorrectionCanceled: 'Autocorrect cancelled',\n    textTool: 'Text',\n    enterTextToInsert: 'Text to insert',\n    changeTool: 'Change tool',\n    pasteHandler: 'Copy paste handler',\n    soundExplorer: 'Sound-based image exploration',\n    disableAccessibilityExploreTool: 'Disable sound-based exploration',\n    enableAccessibilityExploreTool: 'Enable sound-based exploration',\n    soundExplorerUsageAnnouncement: 'Sound-based image exploration enabled: Click/drag the screen to play a sound representation of different parts of the image.',\n    findLabel: 'Find',\n    toNextMatch: 'Next',\n    closeDialog: 'Close',\n    findDialogShown: 'Find dialog shown',\n    findDialogHidden: 'Find dialog hidden',\n    focusedFoundText: (matchIdx, totalMatches) => `Viewing match ${matchIdx} of ${totalMatches}`,\n    anyDevicePanning: 'Any device panning',\n    copied: (count) => `Copied ${count} item(s)`,\n    pasted: (count) => `Pasted ${count} item(s)`,\n    toolEnabledAnnouncement: (toolName) => `${toolName} enabled`,\n    toolDisabledAnnouncement: (toolName) => `${toolName} disabled`,\n};\n", "import  { defaultCommandLocalization }  from './commands/localization.mjs';\nimport  { defaultComponentLocalization, }  from './components/localization.mjs';\nimport  { defaultTextRendererLocalization, }  from './rendering/localization.mjs';\nimport  { defaultToolbarLocalization }  from './toolbar/localization.mjs';\nimport  { defaultToolLocalization }  from './tools/localization.mjs';\nexport const defaultEditorLocalization = {\n    ...defaultToolbarLocalization,\n    ...defaultToolLocalization,\n    ...defaultCommandLocalization,\n    ...defaultComponentLocalization,\n    ...defaultTextRendererLocalization,\n    accessibilityInputInstructions: [\n        'Press \"t\" to read the contents of the viewport as text.',\n        'Use the arrow keys to move the viewport, click and drag to draw strokes.',\n        'Press \"w\" to zoom in and \"s\" to zoom out.',\n    ].join(' '),\n    loading: (percentage) => `Loading ${percentage}%...`,\n    imageEditor: 'Image Editor',\n    doneLoading: 'Done loading',\n    undoAnnouncement: (commandDescription) => `Undid ${commandDescription}`,\n    redoAnnouncement: (commandDescription) => `Redid ${commandDescription}`,\n    softwareLibraries: 'Libraries',\n    developerInformation: 'Developer information',\n};\n", "import  { defaultEditorLocalization }  from '../localization.mjs';\n// German localization\nconst localization = {\n    ...defaultEditorLocalization,\n    pen: 'Stift',\n    eraser: 'Radierer',\n    select: 'Auswahl',\n    handTool: 'Verschieben',\n    zoom: 'Vergrößerung',\n    image: 'Bild',\n    inputAltText: 'Alt-Text: ',\n    chooseFile: 'Wähle Datei: ',\n    submit: 'Absenden',\n    cancel: 'Abbrechen',\n    resetView: 'Ansicht zurücksetzen',\n    thicknessLabel: 'Dicke: ',\n    colorLabel: 'Farbe: ',\n    fontLabel: 'Schriftart: ',\n    textSize: 'Größe: ',\n    resizeImageToSelection: 'Bildgröße an Auswahl anpassen',\n    deleteSelection: 'Auswahl löschen',\n    duplicateSelection: 'Auswahl duplizieren',\n    undo: 'Rückgängig',\n    redo: 'Wiederholen',\n    pickColorFromScreen: 'Farbe von Bildschirm auswählen',\n    clickToPickColorAnnouncement: 'Klicke auf den Bildschirm, um eine Farbe auszuwählen',\n    selectionToolKeyboardShortcuts: 'Auswahl-Werkzeug: Verwende die Pfeiltasten, um ausgewählte Elemente zu verschieben und ‚i‘ und ‚o‘, um ihre Größe zu ändern.',\n    touchPanning: 'Ansicht mit Touchscreen verschieben',\n    anyDevicePanning: 'Ansicht mit jedem Eingabegerät verschieben',\n    selectPenType: 'Objekt-Typ: ',\n    roundedTipPen: 'Freihand',\n    flatTipPen: 'Stift (druckempfindlich)',\n    arrowPen: 'Pfeil',\n    linePen: 'Linie',\n    outlinedRectanglePen: 'Umrissenes Rechteck',\n    filledRectanglePen: 'Ausgefülltes Rechteck',\n    lockRotation: 'Sperre Rotation',\n    paste: 'Einfügen',\n    dropdownShown: (toolName) => `Dropdown-Menü für ${toolName} angezeigt`,\n    dropdownHidden: (toolName) => `Dropdown-Menü für ${toolName} versteckt`,\n    zoomLevel: (zoomPercent) => `Vergößerung: ${zoomPercent}%`,\n    colorChangedAnnouncement: (color) => `Farbe zu ${color} geändert`,\n    imageSize: (size, units) => `Bild-Größe: ${size} ${units}`,\n    imageLoadError: (message) => `Fehler beim Laden des Bildes: ${message}`,\n    errorImageHasZeroSize: 'Fehler: Bild hat Größe Null',\n    penTool: (penNumber) => `Stift ${penNumber}`,\n    selectionTool: 'Auswahl',\n    eraserTool: 'Radiergummi',\n    touchPanTool: 'Ansicht mit Touchscreen verschieben',\n    twoFingerPanZoomTool: 'Ansicht verschieben und vergrößern',\n    undoRedoTool: 'Rückgängig/Wiederholen',\n    rightClickDragPanTool: 'Rechtsklick-Ziehen',\n    pipetteTool: 'Farbe von Bildschirm auswählen',\n    keyboardPanZoom: 'Tastaturkürzel zum Verschieben/Vergrößern der Ansicht',\n    textTool: 'Text',\n    enterTextToInsert: 'Einzufügender Text',\n    changeTool: 'Wechsle Werkzeug',\n    pasteHandler: 'Copy-Paste-Handler',\n    findLabel: 'Finde',\n    toNextMatch: 'Nächstes',\n    closeDialog: 'Schließen',\n    findDialogShown: 'Finde-Dialog angezeigt',\n    findDialogHidden: 'Finde-Dialog versteckt',\n    focusedFoundText: (matchIdx, totalMatches) => `Sieh Treffer ${matchIdx} von ${totalMatches} an`,\n    toolEnabledAnnouncement: (toolName) => `${toolName} aktiviert`,\n    toolDisabledAnnouncement: (toolName) => `${toolName} deaktiviert`,\n    updatedViewport: 'Transformierte Ansicht',\n    transformedElements: (elemCount, action) => `${elemCount} Element${1 === elemCount ? '' : 'e'} transformiert (${action})`,\n    resizeOutputCommand: (newSize) => `Bildgröße auf ${newSize.w}x${newSize.h} geändert`,\n    addComponentAction: (componentDescription) => `${componentDescription} hinzugefügt`,\n    eraseAction: (elemDescription, countErased) => `${countErased} ${elemDescription} gelöscht`,\n    duplicateAction: (elemDescription, countErased) => `${countErased} ${elemDescription} dupliziert`,\n    inverseOf: (actionDescription) => `${actionDescription} umgekehrt`,\n    elements: 'Elemente',\n    erasedNoElements: 'Nichts entfernt',\n    duplicatedNoElements: 'Nichts dupliziert',\n    rotatedBy: (degrees) => `${Math.abs(degrees)} Grad ${degrees < 0 ? 'im Uhrzeigersinn' : 'gegen den Uhrzeigersinn'} gedreht`,\n    movedLeft: 'Nacht links bewegt',\n    movedUp: 'Nacht oben bewegt',\n    movedDown: 'Nacht unten bewegt',\n    movedRight: 'Nacht rechts bewegt',\n    zoomedOut: 'Ansicht verkleinert',\n    zoomedIn: 'Ansicht vergrößert',\n    selectedElements: (count) => `${count} Element${1 === count ? '' : 'e'} ausgewählt`,\n    stroke: 'Strich',\n    svgObject: 'SVG-Objekt',\n    text: (text) => `Text-Objekt: ${text}`,\n    pathNodeCount: (count) => `Es gibt ${count} sichtbare Pfad-Objekte.`,\n    textNodeCount: (count) => `Es gibt ${count} sichtbare Text-Knotenpunkte.`,\n    textNode: (content) => `Text: ${content}`,\n    imageNodeCount: (nodeCount) => `Es gibt ${nodeCount} sichtbare Bild-Knoten.`,\n    imageNode: (label) => `Bild: ${label}`,\n    unlabeledImageNode: 'Bild ohne Label',\n    rerenderAsText: 'Als Text darstellen',\n    accessibilityInputInstructions: 'Drücke ‚t‘, um den Inhalt des Ansichtsfensters als Text zu lesen. Verwende die Pfeiltasten, um die Ansicht zu verschieben, und klicke und ziehe, um Striche zu zeichnen. Drücke ‚w‘ zum Vergrößern und ‚s‘ zum Verkleinern der Ansicht.',\n    loading: (percentage) => `Laden ${percentage}%...`,\n    doneLoading: 'Laden fertig',\n    imageEditor: 'Bild-Editor',\n    undoAnnouncement: (commandDescription) => `${commandDescription} rückgängig gemacht`,\n    redoAnnouncement: (commandDescription) => `${commandDescription} wiederholt`,\n    reformatSelection: 'Formatiere Auswahl',\n    documentProperties: 'Seite',\n    backgroundColor: 'Hintergrundfarbe: ',\n    imageWidthOption: 'Breite: ',\n    imageHeightOption: 'Höhe: ',\n    useGridOption: 'Gitter: ',\n    toggleOverflow: 'Mehr',\n    selectAllTool: 'Alle auswählen',\n    soundExplorer: 'Klangbasierte Bilderkundung',\n    disableAccessibilityExploreTool: 'Deaktiviere klangbasierte Erkundung',\n    enableAccessibilityExploreTool: 'Aktiviere klangbasierte Erkundung',\n    unionOf: (actionDescription, actionCount) => `Vereinigung: ${actionCount} ${actionDescription}`,\n    emptyBackground: 'Leerer Hintergrund',\n    filledBackgroundWithColor: (color) => `Gefüllter Hintergrund (${color})`,\n    restyledElement: (elementDescription) => `${elementDescription} umgestaltet`,\n};\nexport default localization;\n", "import  { defaultEditorLocalization }  from '../localization.mjs';\n// Default localizations are already in English.\nconst localization = {\n    ...defaultEditorLocalization,\n};\nexport default localization;\n", "import  { defaultEditorLocalization }  from '../localization.mjs';\n// A partial Spanish localization\nconst localization = {\n    ...defaultEditorLocalization,\n    pen: 'Lapiz',\n    eraser: 'Borrador',\n    select: 'Selecciona',\n    handTool: 'Mover',\n    image: 'Imagen',\n    inputAltText: 'Texto alternativo',\n    resetImage: 'Reiniciar',\n    chooseFile: 'Seleccionar archivo',\n    cancel: 'Cancelar',\n    resetView: 'Reiniciar vista',\n    thicknessLabel: 'Tamaño',\n    fontLabel: 'Fuente:',\n    textSize: 'Tamaño',\n    resizeImageToSelection: 'Redimensionar la imagen a lo que está seleccionado',\n    deleteSelection: 'Borra la selección',\n    duplicateSelection: 'Duplica la selección',\n    exit: 'Salir',\n    save: 'Guardar',\n    undo: 'Deshace',\n    redo: 'Rehace',\n    selectPenType: 'Punta',\n    selectShape: 'Forma',\n    pickColorFromScreen: 'Selecciona un color de la pantalla',\n    clickToPickColorAnnouncement: 'Haga un clic en la pantalla para seleccionar un color',\n    documentProperties: 'Fondo',\n    backgroundColor: 'Color de fondo',\n    imageWidthOption: 'Ancho',\n    imageHeightOption: 'Alto',\n    enableAutoresizeOption: 'Redimensionar automático',\n    toggleOverflow: 'Más',\n    about: 'Acerca de',\n    touchPanning: 'Mover la pantalla con un dedo',\n    roundedTipPen: 'Lapiz Redondeado',\n    arrowPen: 'Flecha',\n    linePen: 'Línea',\n    outlinedRectanglePen: 'Rectángulo delineado',\n    filledRectanglePen: 'Rectángulo sin borde',\n    lockRotation: 'Bloquea rotación',\n    paste: 'Pegar',\n    selectionMenu__paste: 'Pegar',\n    selectionMenu__delete: 'Eliminar',\n    selectionMenu__duplicate: 'Duplicar',\n    closeSidebar: (toolName) => `Close sidebar for ${toolName}`,\n    dropdownShown: (toolName) => `Menú por ${toolName} es visible`,\n    dropdownHidden: (toolName) => {\n        return `Menú por ${toolName} fue ocultado`;\n    },\n    zoomLevel: (zoomPercent) => `Zoom: ${zoomPercent}%`,\n    colorChangedAnnouncement: (color) => {\n        return `Color fue cambiado a ${color}`;\n    },\n    imageSize: (size, units) => `Tamaño del imagen: ${size} ${units}`,\n    imageLoadError: (message) => `Error cargando imagen: ${message}`,\n    penTool: (penId) => `Lapiz ${penId}`,\n    selectionTool: 'Selecciona',\n    eraserTool: 'Borrador',\n    touchPanTool: 'Instrumento de mover la pantalla con un dedo',\n    undoRedoTool: 'Deshace/rehace',\n    pipetteTool: 'Seleccione un color de la pantalla',\n    keyboardPanZoom: 'Mover la pantalla con el teclado',\n    textTool: 'Texto',\n    enterTextToInsert: 'Entra texto',\n    findLabel: 'Buscar',\n    toNextMatch: 'Próxima',\n    closeDialog: 'Cerrar',\n    anyDevicePanning: 'Mover la pantalla con todo dispotivo',\n    copied: (count) => `${count} cosas fueron copiados`,\n    pasted: (count) => (count === 1 ? 'Pegado' : `${count} cosas fueron pegados`),\n    toolEnabledAnnouncement: (toolName) => `${toolName} fue activado`,\n    toolDisabledAnnouncement: (toolName) => `${toolName} fue desactivado`,\n    resizeOutputCommand: (newSize) => `Tamaño de imagen fue cambiado a ${newSize.w}x${newSize.h}`,\n    eraseAction: (componentDescription, numElems) => `Borrado: ${numElems} ${componentDescription}`,\n    rerenderAsText: 'Redibuja la pantalla al texto',\n    loading: (percentage) => `Cargando: ${percentage}%...`,\n    imageEditor: 'Editor de dibujos',\n    doneLoading: 'El cargado terminó',\n    undoAnnouncement: (commandDescription) => `${commandDescription} fue deshecho`,\n    redoAnnouncement: (commandDescription) => `${commandDescription} fue rehecho`,\n};\nexport default localization;\n", "import  { defaultEditorLocalization }  from '../localization.mjs';\nimport  de  from './de.mjs';\nimport  en  from './en.mjs';\nimport  es  from './es.mjs';\nexport const allLocales = {\n    de,\n    en,\n    es,\n};\n// [locale]: A string in the format languageCode_Region or just languageCode. For example, en_US.\nconst languageFromLocale = (locale) => {\n    const matches = /^(\\w+)[_-](\\w+)$/.exec(locale);\n    if (!matches) {\n        // If not in languageCode_region format, the locale should be the\n        // languageCode. Return that.\n        return locale;\n    }\n    return matches[1];\n};\n/**\n * Return the localization table in `localizationTables` that best matches\n * the list of `userLocales`. If there is no matching language, returns\n * `defaultLocalizationTable`.\n */\nexport const matchingLocalizationTable = (userLocales, localizationTables, defaultLocalizationTable) => {\n    let prevLanguage;\n    for (const locale of userLocales) {\n        const language = languageFromLocale(locale);\n        // If the specific localization of the language is not available, but\n        // a localization for the language is,\n        if (prevLanguage && language !== prevLanguage) {\n            if (prevLanguage in localizationTables) {\n                return localizationTables[prevLanguage];\n            }\n        }\n        // If the full locale (e.g. en_US) is available,\n        if (locale in localizationTables) {\n            return localizationTables[locale];\n        }\n        prevLanguage = language;\n    }\n    if (prevLanguage && prevLanguage in localizationTables) {\n        return localizationTables[prevLanguage];\n    }\n    else {\n        return defaultLocalizationTable;\n    }\n};\n/**\n * Returns a localization table for the `Editor` that matches\n * the user's current locale.\n *\n * Returns the default localization table if no appropriate localization\n * exists.\n */\nconst getLocalizationTable = (userLocales) => {\n    userLocales ??= navigator.languages;\n    return matchingLocalizationTable(userLocales, allLocales, defaultEditorLocalization);\n};\nexport default getLocalizationTable;\n", "const isUppercaseLetter = (text) => {\n    return text.toUpperCase() === text && text.toLowerCase() !== text && text.length === 1;\n};\nconst isLowercaseLetter = (text) => {\n    return text.toLowerCase() === text && text.toUpperCase() !== text && text.length === 1;\n};\n/** Represents a key combination that can trigger a keyboard shortcut. */\nexport default class KeyBinding {\n    constructor(trigger) {\n        this.key = trigger.key;\n        this.shiftKey = trigger.shiftKey;\n        this.ctrlKey = trigger.ctrlKey;\n        this.altKey = trigger.altKey;\n        this.metaKey = trigger.metaKey;\n        this.controlOrMeta = trigger.controlOrMeta;\n    }\n    /** Returns true if and only if `keyEvent` should trigger this shortcut. */\n    matchesEvent(keyEvent) {\n        const lowercaseKey = keyEvent.key?.toLowerCase();\n        // Determine whether the input is an upper case letter or not.\n        const isUpperCaseKey = isUppercaseLetter(keyEvent.key ?? '');\n        const isLowercaseKey = isLowercaseLetter(keyEvent.key ?? '');\n        const ctrlKey = (keyEvent.ctrlKey ?? false) || lowercaseKey === 'control';\n        const altKey = (keyEvent.altKey ?? false) || lowercaseKey === 'alt';\n        const metaKey = (keyEvent.metaKey ?? false) || lowercaseKey === 'meta';\n        const shiftKey = (keyEvent.shiftKey ?? isUpperCaseKey) || lowercaseKey === 'shift';\n        const keyEventHasCtrlOrMeta = keyEvent.controlOrMeta || keyEvent.ctrlKey || keyEvent.metaKey || false;\n        // If we're not working with key codes,\n        if (this.key !== keyEvent.code) {\n            // Different keys entirely? They don't match.\n            if (this.key.toLowerCase() !== lowercaseKey) {\n                return false;\n            }\n            // If a case where the ASCII case of the given key might matter,\n            // compare.\n            if ((isUpperCaseKey || isLowercaseKey) && this.key !== keyEvent.key) {\n                // this.shiftKey may be interpreted as allowing this shortcut to be uppercased.\n                // If so, try making this.key uppercase and matching the shortcut.\n                const uppercaseKeyMatches = this.shiftKey === true && this.key.toUpperCase() === keyEvent.key;\n                if (!uppercaseKeyMatches) {\n                    return false;\n                }\n            }\n        }\n        const shortcutControlOrMeta = this.controlOrMeta;\n        // Match ctrl/meta if the shortcut doesn't have controlOrMeta specified\n        // (controlOrMeta should match either).\n        const ctrlAndMetaMatches = ctrlKey === this.ctrlKey && metaKey === this.metaKey && !shortcutControlOrMeta;\n        const matches = (ctrlAndMetaMatches || (shortcutControlOrMeta && keyEventHasCtrlOrMeta)) &&\n            altKey === this.altKey &&\n            (shiftKey === this.shiftKey || this.shiftKey === undefined);\n        return matches;\n    }\n    /**\n     * Returns a string representation of this shortcut in the same format accepted by\n     * {@link fromString}.\n     */\n    toString() {\n        const result = [];\n        if (this.ctrlKey && this.key !== 'control') {\n            result.push('Ctrl');\n        }\n        if (this.controlOrMeta) {\n            result.push('CtrlOrMeta');\n        }\n        if (this.altKey && this.key !== 'alt') {\n            result.push('Alt');\n        }\n        if (this.metaKey && this.key !== 'meta') {\n            result.push('Meta');\n        }\n        if (this.shiftKey && this.key !== 'shift') {\n            result.push('Shift');\n        }\n        result.push(this.key);\n        return result.join('+');\n    }\n    /**\n     * Accepts a string in the form `modifier1+modifier2+...+key` (e.g. `Ctrl+Shift+a`)\n     * and returns the corresponding `KeyboardShortcut`.\n     */\n    static fromString(shortcutStr) {\n        const getDefaultModifiers = (key) => {\n            // Unless a letter, as long as the given key matches, it shouldn't matter whether\n            // the shift key is pressed.\n            let shiftKey = undefined;\n            if (isUppercaseLetter(key)) {\n                shiftKey = true;\n            }\n            else if (isLowercaseLetter(key)) {\n                shiftKey = false;\n            }\n            // If not just a single character (e.g. a key code like KeyA), shift must\n            // be specified manually.\n            else if (key.length > 1) {\n                shiftKey = false;\n            }\n            const lowercaseKey = key.toLowerCase();\n            // shiftKey should always be true if the key is 'shift'\n            if (lowercaseKey === 'shift') {\n                shiftKey = true;\n            }\n            return {\n                shiftKey,\n                ctrlKey: lowercaseKey === 'control' || lowercaseKey === 'ctrl',\n                altKey: lowercaseKey === 'alt',\n                metaKey: lowercaseKey === 'meta',\n                controlOrMeta: lowercaseKey === 'control or meta' || lowercaseKey === 'ctrlormeta',\n            };\n        };\n        const hasNoModifiers = shortcutStr.search(/[-+]/) === -1 || shortcutStr.length === 1;\n        if (hasNoModifiers) {\n            const modifiers = getDefaultModifiers(shortcutStr);\n            return new KeyBinding({\n                key: shortcutStr,\n                ...modifiers,\n            });\n        }\n        const keyModifiersExp = /^(.*[-+])?(.+)$/g;\n        const match = keyModifiersExp.exec(shortcutStr);\n        if (!match) {\n            throw new Error(`Invalid shortcut expression, ${shortcutStr}!`);\n        }\n        const key = match[2];\n        const defaultModifiers = getDefaultModifiers(key);\n        const modifierStrings = (match[1] ?? '').split(/[-+]/);\n        let shiftKey = defaultModifiers.shiftKey;\n        let ctrlKey = defaultModifiers.ctrlKey;\n        let altKey = defaultModifiers.altKey;\n        let metaKey = defaultModifiers.metaKey;\n        let controlOrMeta = defaultModifiers.controlOrMeta;\n        for (const modifier of modifierStrings) {\n            if (modifier === '') {\n                continue;\n            }\n            switch (modifier.toLowerCase()) {\n                case 'shift':\n                    shiftKey = true;\n                    break;\n                case 'anyshift':\n                    shiftKey = undefined;\n                    break;\n                case 'ctrl':\n                case 'control':\n                    ctrlKey = true;\n                    break;\n                case 'meta':\n                    metaKey = true;\n                    break;\n                case 'ctrlormeta':\n                case 'ctrl or meta':\n                case 'controlormeta':\n                    controlOrMeta = true;\n                    break;\n                case 'alt':\n                    altKey = true;\n                    break;\n                default:\n                    throw new Error(`Unknown modifier: \"${modifier}\" in shortcut ${shortcutStr}.`);\n            }\n        }\n        const shortcut = new KeyBinding({\n            key,\n            shiftKey,\n            ctrlKey,\n            altKey,\n            metaKey,\n            controlOrMeta,\n        });\n        return shortcut;\n    }\n}\n", "import  { matchingLocalizationTable }  from '../localizations/getLocalizationTable.mjs';\nimport  KeyBinding  from './KeyBinding.mjs';\n/**\n * Allows adding/changing keyboard shortcuts. This class provides static methods for registering\n * default shortcuts. An instance of this class must be used to access or change keyboard shortcuts.\n */\nclass KeyboardShortcutManager {\n    /**\n     * Creates a new `ShortcutManager` with an initial set of shortcut overrides.\n     *\n     * @internal\n     */\n    constructor(initialOverrides) {\n        this.shortcutOverrides = Object.create(null);\n        for (const id in initialOverrides) {\n            this.overrideShortcut(id, initialOverrides[id]);\n        }\n    }\n    /**\n     * Override an existing shortcut with a custom set of triggers.\n     * @internal\n     */\n    overrideShortcut(shortcutId, overrideWith) {\n        this.shortcutOverrides[shortcutId] = [...overrideWith];\n    }\n    /** Returns true if `keyEvent` matches the shortcut with `shortcutId`. @internal */\n    matchesShortcut(shortcutId, keyEvent) {\n        // Get all shortcucts associated with `shortcutId`.\n        let shortcutList = this.shortcutOverrides[shortcutId];\n        if (!shortcutList) {\n            if (shortcutId in KeyboardShortcutManager.shortcuts) {\n                shortcutList = KeyboardShortcutManager.shortcuts[shortcutId];\n            }\n            else {\n                throw new Error(`No shortcut with ID ${shortcutId} exists!`);\n            }\n        }\n        // return true if keyEvent matches *any* shortcuts in shortcutList\n        for (const shortcut of shortcutList) {\n            if (shortcut.matchesEvent(keyEvent)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Registers a default keyboard shortcut that can be overridden by individual instances\n     * of `ShortcutManager`. Note that `id` should be a globally unique identifier.\n     *\n     * Only the first call to this method for a given `id` has an effect.\n     *\n     * @example\n     * ```ts\n     * const shortcutId = 'io.github.personalizedrefrigerator.js-draw.select-all';\n     *\n     * // Associate two shortcuts with the same ID\n     * const shortcut1 = KeyBinding.fromString('ctrlOrMeta+a');\n     * const shortcut2 = KeyBinding.fromString('ctrlOrMeta+shift+a');\n     * KeyboardShortcutManager.registerDefaultKeyboardShortcut(\n     * \tshortcutId,\n     * \t[ shortcut1, shortcut2 ],\n     * \t\"Select All\",\n     * );\n     *\n     * // Provide a localized description\n     * KeyboardShortcutManager.provideShortcutDescription(\n     * \tshotcutId,\n     * \t'es',\n     * \t'Seleccionar todo',\n     * );\n     * ```\n     *\n     * @internal\n     */\n    static registerDefaultKeyboardShortcut(id, shortcuts, defaultDescription) {\n        if (id in KeyboardShortcutManager.shortcuts) {\n            return false;\n        }\n        // Convert the strings to shortcut maps.\n        const shortcutsAsShortcuts = shortcuts.map((shortcut) => {\n            if (typeof shortcut === 'string') {\n                return KeyBinding.fromString(shortcut);\n            }\n            return shortcut;\n        });\n        KeyboardShortcutManager.shortcuts[id] = [...shortcutsAsShortcuts];\n        KeyboardShortcutManager.shortcutDefaultDescriptions[id] = defaultDescription;\n        return true;\n    }\n    /** Provides a localized description of a keyboard shortcut. @internal */\n    static provideShortcutDescription(id, locale, description) {\n        if (!(locale in KeyboardShortcutManager.shortcutLocalizedDescriptions)) {\n            KeyboardShortcutManager.shortcutLocalizedDescriptions[locale] = Object.create(null);\n        }\n        KeyboardShortcutManager.shortcutLocalizedDescriptions[locale][id] = description;\n    }\n    /**\n     * Gets all registered keyboard shortcut IDs.\n     *\n     * @see {@link getShortcutDescription}\n     */\n    static getAllShortcutIds() {\n        const ids = [];\n        for (const id in this.shortcuts) {\n            ids.push(id);\n        }\n        return ids;\n    }\n    /**\n     * Get the default keybindings associated with a keyboard shortcut.\n     *\n     * Any keybinding in the resultant list, by default, can trigger the function associated\n     * with the shortcut.\n     */\n    static getShortcutDefaultKeybindings(shortcutId) {\n        if (!(shortcutId in KeyboardShortcutManager.shortcuts)) {\n            throw new Error(`No shortcut with ID ${shortcutId} exists!`);\n        }\n        return KeyboardShortcutManager.shortcuts[shortcutId];\n    }\n    /**\n     * Get a description of a keyboard shortcut.\n     *\n     * `localeList`, if given, attempts to\n     */\n    static getShortcutDescription(id, localeList) {\n        const localizationTable = matchingLocalizationTable(localeList ?? [], this.shortcutLocalizedDescriptions, this.shortcutDefaultDescriptions);\n        return localizationTable[id] ?? this.shortcutDefaultDescriptions[id] ?? null;\n    }\n}\nKeyboardShortcutManager.shortcuts = Object.create(null);\nKeyboardShortcutManager.shortcutDefaultDescriptions = Object.create(null);\nKeyboardShortcutManager.shortcutLocalizedDescriptions = Object.create(null);\nexport default KeyboardShortcutManager;\n", "import  KeyboardShortcutManager  from '../../shortcuts/KeyboardShortcutManager.mjs';\n// Selection\nexport const selectAllKeyboardShortcut = 'jsdraw.tools.SelectionTool.selectAll';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(selectAllKeyboardShortcut, ['CtrlOrMeta+KeyA'], 'Select all');\nexport const duplicateSelectionShortcut = 'jsdraw.tools.SelectionTool.duplicateSelection';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(duplicateSelectionShortcut, ['CtrlOrMeta+KeyD'], 'Duplicate selection');\nexport const sendToBackSelectionShortcut = 'jsdraw.tools.SelectionTool.sendToBack';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(sendToBackSelectionShortcut, ['End'], 'Send to back');\nexport const translateLeftSelectionShortcutId = 'jsdraw.tools.SelectionTool.translateLeft';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(translateLeftSelectionShortcutId, ['KeyA', 'KeyH', 'ArrowLeft'], 'Move selection left');\nexport const translateRightSelectionShortcutId = 'jsdraw.tools.SelectionTool.translateRight';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(translateRightSelectionShortcutId, ['KeyD', 'KeyL', 'ArrowRight'], 'Move selection right');\nexport const translateUpSelectionShortcutId = 'jsdraw.tools.SelectionTool.translateUp';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(translateUpSelectionShortcutId, ['KeyQ', 'KeyK', 'ArrowUp'], 'Move selection up');\nexport const translateDownSelectionShortcutId = 'jsdraw.tools.SelectionTool.translateDown';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(translateDownSelectionShortcutId, ['KeyE', 'KeyJ', 'ArrowDown'], 'Move selection down');\nexport const rotateCounterClockwiseSelectionShortcutId = 'jsdraw.tools.SelectionTool.rotateCCW';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(rotateCounterClockwiseSelectionShortcutId, ['Shift+KeyR'], 'Rotate selection counter clockwise');\nexport const rotateClockwiseSelectionShortcutId = 'jsdraw.tools.SelectionTool.rotateCW';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(rotateClockwiseSelectionShortcutId, ['KeyR'], 'Rotate selection clockwise');\nexport const shrinkXSelectionShortcutId = 'jsdraw.tools.SelectionTool.shrink.x';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(shrinkXSelectionShortcutId, ['KeyI'], 'Decrease width');\nexport const stretchXSelectionShortcutId = 'jsdraw.tools.SelectionTool.stretch.x';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(stretchXSelectionShortcutId, ['Shift+KeyI'], 'Increase width');\nexport const shrinkYSelectionShortcutId = 'jsdraw.tools.SelectionTool.shrink.y';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(shrinkYSelectionShortcutId, ['KeyO'], 'Decrease height');\nexport const stretchYSelectionShortcutId = 'jsdraw.tools.SelectionTool.stretch.y';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(stretchYSelectionShortcutId, ['Shift+KeyO'], 'Increase height');\nexport const shrinkXYSelectionShortcutId = 'jsdraw.tools.SelectionTool.shrink.xy';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(shrinkXYSelectionShortcutId, ['Comma'], 'Decrease selection size');\nexport const stretchXYSelectionShortcutId = 'jsdraw.tools.SelectionTool.stretch.xy';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(stretchXYSelectionShortcutId, ['Period'], 'Increase selection size');\n", "import  KeyboardShortcutManager  from '../shortcuts/KeyboardShortcutManager.mjs';\n// This file contains user-overridable tool-realted keybindings.\n// Undo/redo\nexport const undoKeyboardShortcutId = 'jsdraw.tools.undo';\nexport const redoKeyboardShortcutId = 'jsdaw.tools.redo';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(undoKeyboardShortcutId, ['CtrlOrMeta+KeyZ'], 'Undo');\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(redoKeyboardShortcutId, ['CtrlOrMeta+Shift+KeyZ', 'CtrlOrMeta+KeyY'], 'Redo');\n// Pen/eraser/selection keybindings\nexport const increaseSizeKeyboardShortcutId = 'jsdraw.tools.increaseSize';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(increaseSizeKeyboardShortcutId, ['Equal', 'Shift+Equal'], 'Increase pen/eraser size');\nexport const decreaseSizeKeyboardShortcutId = 'jsdraw.tools.decreaseSize';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(decreaseSizeKeyboardShortcutId, ['Minus', 'Shift+Minus'], 'Decrease pen/eraser size');\nexport const snapToGridKeyboardShortcutId = 'jsdraw.tools.snapToGrid';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(snapToGridKeyboardShortcutId, ['Control', 'Meta'], 'Snap to grid (press and hold)');\nexport const lineLockKeyboardShortcutId = 'jsdraw.tools.lockToLine';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(lineLockKeyboardShortcutId, ['Shift'], 'Snap to XY axes (press and hold)');\n// Find tool\nexport const toggleFindVisibleShortcutId = 'js-draw.tools.FindTool.toggleVisible';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(toggleFindVisibleShortcutId, ['CtrlOrMeta+KeyF'], 'Shows/hides the find tool');\n// Pan/zoom\nexport const moveLeftKeyboardShortcutId = 'jsdraw.tools.PanZoom.moveLeft';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(moveLeftKeyboardShortcutId, ['ArrowLeft', 'KeyH', 'KeyA'], 'Pan left');\nexport const moveRightKeyboardShortcutId = 'jsdraw.tools.PanZoom.moveRight';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(moveRightKeyboardShortcutId, ['ArrowRight', 'KeyL', 'KeyD'], 'Pan right');\nexport const moveUpKeyboardShortcutId = 'jsdraw.tools.PanZoom.moveUp';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(moveUpKeyboardShortcutId, ['ArrowUp', 'KeyK', 'KeyQ'], 'Pan up');\nexport const moveDownKeyboardShortcutId = 'jsdraw.tools.PanZoom.moveDown';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(moveDownKeyboardShortcutId, ['ArrowDown', 'KeyJ', 'KeyE'], 'Pan down');\nexport const rotateClockwiseKeyboardShortcutId = 'jsdraw.tools.PanZoom.rotateViewClockwise';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(rotateClockwiseKeyboardShortcutId, ['Shift+KeyR'], 'Rotate viewport clockwise');\nexport const rotateCounterClockwiseKeyboardShortcutId = 'jsdraw.tools.PanZoom.rotateViewCounterClockwise';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(rotateCounterClockwiseKeyboardShortcutId, ['KeyR'], 'Rotate viewport counter-clockwise');\nexport const zoomInKeyboardShortcutId = 'jsdraw.tools.PanZoom.zoomIn';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(zoomInKeyboardShortcutId, ['KeyW'], 'Zoom in');\nexport const zoomOutKeyboardShortcutId = 'jsdraw.tools.PanZoom.zoomOut';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(zoomOutKeyboardShortcutId, ['KeyS'], 'Zoom out');\n// Selection tool\nexport  *  from './SelectionTool/keybindings.mjs';\n", "import { Mat33, Vec3, Vec2 } from '@js-draw/math';\nimport  { PointerDevice }  from '../Pointer.mjs';\nimport  { EditorEventType }  from '../types.mjs';\nimport  untilNextAnimationFrame  from '../util/untilNextAnimationFrame.mjs';\nimport  { Viewport }  from '../Viewport.mjs';\nimport  BaseTool  from './BaseTool.mjs';\nimport  { moveDownKeyboardShortcutId, moveLeftKeyboardShortcutId, moveRightKeyboardShortcutId, moveUpKeyboardShortcutId, rotateClockwiseKeyboardShortcutId, rotateCounterClockwiseKeyboardShortcutId, zoomInKeyboardShortcutId, zoomOutKeyboardShortcutId, }  from './keybindings.mjs';\nexport var PanZoomMode;\n(function (PanZoomMode) {\n    /** Touch gestures with a single pointer. Ignores non-touch gestures. */\n    PanZoomMode[PanZoomMode[\"OneFingerTouchGestures\"] = 1] = \"OneFingerTouchGestures\";\n    /** Touch gestures with exactly two pointers. Ignores non-touch gestures. */\n    PanZoomMode[PanZoomMode[\"TwoFingerTouchGestures\"] = 2] = \"TwoFingerTouchGestures\";\n    PanZoomMode[PanZoomMode[\"RightClickDrags\"] = 4] = \"RightClickDrags\";\n    /** Single-pointer gestures of *any* type (including touch). */\n    PanZoomMode[PanZoomMode[\"SinglePointerGestures\"] = 8] = \"SinglePointerGestures\";\n    /** Keyboard navigation (e.g. LeftArrow to move left). */\n    PanZoomMode[PanZoomMode[\"Keyboard\"] = 16] = \"Keyboard\";\n    /** If provided, prevents **this** tool from rotating the viewport (other tools may still do so). */\n    PanZoomMode[PanZoomMode[\"RotationLocked\"] = 32] = \"RotationLocked\";\n})(PanZoomMode || (PanZoomMode = {}));\nclass InertialScroller {\n    constructor(initialVelocity, scrollBy, onComplete) {\n        this.initialVelocity = initialVelocity;\n        this.scrollBy = scrollBy;\n        this.onComplete = onComplete;\n        this.running = false;\n        this.start();\n    }\n    async start() {\n        if (this.running) {\n            return;\n        }\n        this.currentVelocity = this.initialVelocity;\n        let lastTime = performance.now();\n        this.running = true;\n        const maxSpeed = 5000; // units/s\n        const minSpeed = 200; // units/s\n        if (this.currentVelocity.magnitude() > maxSpeed) {\n            this.currentVelocity = this.currentVelocity.normalized().times(maxSpeed);\n        }\n        while (this.running && this.currentVelocity.magnitude() > minSpeed) {\n            const nowTime = performance.now();\n            const dt = (nowTime - lastTime) / 1000;\n            this.currentVelocity = this.currentVelocity.times(Math.pow(1 / 8, dt));\n            this.scrollBy(this.currentVelocity.times(dt));\n            await untilNextAnimationFrame();\n            lastTime = nowTime;\n        }\n        if (this.running) {\n            this.stop();\n        }\n    }\n    getCurrentVelocity() {\n        if (!this.running) {\n            return null;\n        }\n        return this.currentVelocity;\n    }\n    stop() {\n        if (this.running) {\n            this.running = false;\n            this.onComplete();\n        }\n    }\n}\n/**\n * This tool moves the viewport in response to touchpad, touchscreen, mouse, and keyboard events.\n *\n * Which events are handled, and which are skipped, are determined by the tool's `mode`. For example,\n * a `PanZoom` tool with `mode = PanZoomMode.TwoFingerTouchGestures|PanZoomMode.RightClickDrags` would\n * respond to right-click drag events and two-finger touch gestures.\n *\n * @see {@link setModeEnabled}\n */\nexport default class PanZoom extends BaseTool {\n    constructor(editor, mode, description) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        this.mode = mode;\n        this.transform = null;\n        // Constants\n        // initialRotationSnapAngle is larger than afterRotationStartSnapAngle to\n        // make it more difficult to start rotating (and easier to continue rotating).\n        this.initialRotationSnapAngle = 0.22; // radians\n        this.afterRotationStartSnapAngle = 0.07; // radians\n        this.pinchZoomStartThreshold = 1.08; // scale factor\n        // Last timestamp at which a pointerdown event was received\n        this.lastPointerDownTimestamp = 0;\n        this.initialTouchAngle = 0;\n        this.initialViewportRotation = 0;\n        this.initialViewportScale = 0;\n        // Set to `true` only when scaling has started (if two fingers are down and have moved\n        // far enough).\n        this.isScaling = false;\n        this.isRotating = false;\n        this.inertialScroller = null;\n        this.velocity = null;\n    }\n    // The pan/zoom tool can be used in a read-only editor.\n    canReceiveInputInReadOnlyEditor() {\n        return true;\n    }\n    // Returns information about the pointers in a gesture\n    computePinchData(p1, p2) {\n        // Swap the pointers to ensure consistent ordering.\n        if (p1.id < p2.id) {\n            const tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n        }\n        const screenBetween = p2.screenPos.minus(p1.screenPos);\n        const angle = screenBetween.angle();\n        const dist = screenBetween.magnitude();\n        const canvasCenter = p2.canvasPos.plus(p1.canvasPos).times(0.5);\n        const screenCenter = p2.screenPos.plus(p1.screenPos).times(0.5);\n        return { canvasCenter, screenCenter, angle, dist };\n    }\n    allPointersAreOfType(pointers, kind) {\n        return pointers.every((pointer) => pointer.device === kind);\n    }\n    onPointerDown({ allPointers: pointers, current: currentPointer, }) {\n        let handlingGesture = false;\n        const inertialScrollerVelocity = this.inertialScroller?.getCurrentVelocity() ?? Vec2.zero;\n        this.inertialScroller?.stop();\n        this.velocity = inertialScrollerVelocity;\n        this.lastPointerDownTimestamp = currentPointer.timeStamp;\n        const allAreTouch = this.allPointersAreOfType(pointers, PointerDevice.Touch);\n        const isRightClick = this.allPointersAreOfType(pointers, PointerDevice.RightButtonMouse);\n        if (allAreTouch && pointers.length === 2 && this.mode & PanZoomMode.TwoFingerTouchGestures) {\n            const { screenCenter, angle, dist } = this.computePinchData(pointers[0], pointers[1]);\n            this.lastTouchDist = dist;\n            this.startTouchDist = dist;\n            this.lastScreenCenter = screenCenter;\n            this.initialTouchAngle = angle;\n            this.initialViewportRotation = this.editor.viewport.getRotationAngle();\n            this.initialViewportScale = this.editor.viewport.getScaleFactor();\n            this.isScaling = false;\n            // We're initially rotated if `initialViewportRotation` isn't near a multiple of pi/2.\n            // In other words, if sin(2 initialViewportRotation) is near zero.\n            this.isRotating = Math.abs(Math.sin(this.initialViewportRotation * 2)) > 1e-3;\n            handlingGesture = true;\n        }\n        else if (pointers.length === 1 &&\n            ((this.mode & PanZoomMode.OneFingerTouchGestures && allAreTouch) ||\n                (isRightClick && this.mode & PanZoomMode.RightClickDrags) ||\n                this.mode & PanZoomMode.SinglePointerGestures)) {\n            this.lastScreenCenter = pointers[0].screenPos;\n            this.isScaling = false;\n            handlingGesture = true;\n        }\n        if (handlingGesture) {\n            this.lastTimestamp = performance.now();\n            this.transform ??= Viewport.transformBy(Mat33.identity);\n            this.editor.display.setDraftMode(true);\n        }\n        return handlingGesture;\n    }\n    updateVelocity(currentCenter) {\n        const deltaPos = currentCenter.minus(this.lastScreenCenter);\n        let deltaTime = (performance.now() - this.lastTimestamp) / 1000;\n        // Ignore duplicate events, unless there has been enough time between them.\n        if (deltaPos.magnitude() === 0 && deltaTime < 0.1) {\n            return;\n        }\n        // We divide by deltaTime. Don't divide by zero.\n        if (deltaTime === 0) {\n            return;\n        }\n        // Don't divide by almost zero, either\n        deltaTime = Math.max(deltaTime, 0.01);\n        const currentVelocity = deltaPos.times(1 / deltaTime);\n        let smoothedVelocity = currentVelocity;\n        if (this.velocity) {\n            smoothedVelocity = this.velocity.lerp(currentVelocity, 0.5);\n        }\n        this.velocity = smoothedVelocity;\n    }\n    // Returns the change in position of the center of the given group of pointers.\n    // Assumes this.lastScreenCenter has been set appropriately.\n    getCenterDelta(screenCenter) {\n        // Use transformVec3 to avoid translating the delta\n        const delta = this.editor.viewport.screenToCanvasTransform.transformVec3(screenCenter.minus(this.lastScreenCenter));\n        return delta;\n    }\n    //  Snaps `angle` to common desired rotations. For example, if `touchAngle` corresponds\n    // to a viewport rotation of 90.1 degrees, this function returns a rotation delta that,\n    // when applied to the viewport, rotates the viewport to 90.0 degrees.\n    //\n    // Returns a snapped rotation delta that, when applied to the viewport, rotates the viewport,\n    // from its position on the last touchDown event, by `touchAngle - initialTouchAngle`.\n    toSnappedRotationDelta(touchAngle) {\n        const deltaAngle = touchAngle - this.initialTouchAngle;\n        let fullRotation = deltaAngle + this.initialViewportRotation;\n        const snapToMultipleOf = Math.PI / 2;\n        const roundedFullRotation = Math.round(fullRotation / snapToMultipleOf) * snapToMultipleOf;\n        // The maximum angle for which we snap the given angle to a multiple of\n        // `snapToMultipleOf`.\n        // Use a smaller snap angle if already rotated (to avoid pinch zoom gestures from\n        // starting rotation).\n        const maxSnapAngle = this.isRotating\n            ? this.afterRotationStartSnapAngle\n            : this.initialRotationSnapAngle;\n        // Snap the rotation\n        if (Math.abs(fullRotation - roundedFullRotation) < maxSnapAngle) {\n            fullRotation = roundedFullRotation;\n            // Work around a rotation/matrix multiply bug.\n            // (See commit after 4abe27ff8e7913155828f98dee77b09c57c51d30).\n            // TODO: Fix the underlying issue and remove this.\n            if (fullRotation !== 0) {\n                fullRotation += 0.0001;\n            }\n        }\n        return fullRotation - this.editor.viewport.getRotationAngle();\n    }\n    /**\n     * Given a scale update, `scaleFactor`, returns a new scale factor snapped\n     * to a power of two (if within some tolerance of that scale).\n     */\n    toSnappedScaleFactor(touchDist) {\n        // scaleFactor is applied to the current transformation of the viewport.\n        const newScale = (this.initialViewportScale * touchDist) / this.startTouchDist;\n        const currentScale = this.editor.viewport.getScaleFactor();\n        const logNewScale = Math.log(newScale) / Math.log(10);\n        const roundedLogNewScale = Math.round(logNewScale);\n        const logTolerance = 0.04;\n        if (Math.abs(roundedLogNewScale - logNewScale) < logTolerance) {\n            return Math.pow(10, roundedLogNewScale) / currentScale;\n        }\n        return touchDist / this.lastTouchDist;\n    }\n    handleTwoFingerMove(allPointers) {\n        const { screenCenter, canvasCenter, angle, dist } = this.computePinchData(allPointers[0], allPointers[1]);\n        const delta = this.getCenterDelta(screenCenter);\n        let deltaRotation;\n        if (this.isRotationLocked()) {\n            deltaRotation = 0;\n        }\n        else {\n            deltaRotation = this.toSnappedRotationDelta(angle);\n        }\n        // If any rotation, make a note of this (affects rotation snap\n        // angles).\n        if (Math.abs(deltaRotation) > 1e-8) {\n            this.isRotating = true;\n        }\n        this.updateVelocity(screenCenter);\n        if (!this.isScaling) {\n            const initialScaleFactor = dist / this.startTouchDist;\n            // Only start scaling if scaling done so far exceeds some threshold.\n            const upperBound = this.pinchZoomStartThreshold;\n            const lowerBound = 1 / this.pinchZoomStartThreshold;\n            if (initialScaleFactor > upperBound || initialScaleFactor < lowerBound) {\n                this.isScaling = true;\n            }\n        }\n        let scaleFactor = 1;\n        if (this.isScaling) {\n            scaleFactor = this.toSnappedScaleFactor(dist);\n            // Don't set lastDist until we start scaling --\n            this.lastTouchDist = dist;\n        }\n        const transformUpdate = Mat33.translation(delta)\n            .rightMul(Mat33.scaling2D(scaleFactor, canvasCenter))\n            .rightMul(Mat33.zRotation(deltaRotation, canvasCenter));\n        this.lastScreenCenter = screenCenter;\n        this.transform = Viewport.transformBy(this.transform.transform.rightMul(transformUpdate));\n        return transformUpdate;\n    }\n    handleOneFingerMove(pointer) {\n        const delta = this.getCenterDelta(pointer.screenPos);\n        const transformUpdate = Mat33.translation(delta);\n        this.transform = Viewport.transformBy(this.transform.transform.rightMul(transformUpdate));\n        this.updateVelocity(pointer.screenPos);\n        this.lastScreenCenter = pointer.screenPos;\n        return transformUpdate;\n    }\n    onPointerMove({ allPointers }) {\n        this.transform ??= Viewport.transformBy(Mat33.identity);\n        let transformUpdate = Mat33.identity;\n        if (allPointers.length === 2) {\n            transformUpdate = this.handleTwoFingerMove(allPointers);\n        }\n        else if (allPointers.length === 1) {\n            transformUpdate = this.handleOneFingerMove(allPointers[0]);\n        }\n        Viewport.transformBy(transformUpdate).apply(this.editor);\n        this.lastTimestamp = performance.now();\n    }\n    onPointerUp(event) {\n        const onComplete = () => {\n            if (this.transform) {\n                this.transform.unapply(this.editor);\n                this.editor.dispatch(this.transform, false);\n            }\n            this.editor.display.setDraftMode(false);\n            this.transform = null;\n            this.velocity = Vec2.zero;\n        };\n        const minInertialScrollDt = 30;\n        const shouldInertialScroll = event.current.device === PointerDevice.Touch &&\n            event.allPointers.length === 1 &&\n            this.velocity !== null &&\n            event.current.timeStamp - this.lastPointerDownTimestamp > minInertialScrollDt;\n        if (shouldInertialScroll && this.velocity !== null) {\n            const oldVelocity = this.velocity;\n            // If the user drags the screen, then stops, then lifts the pointer,\n            // we want the final velocity to reflect the stop at the end (so the velocity\n            // should be near zero). Handle this:\n            this.updateVelocity(event.current.screenPos);\n            // Work around an input issue. Some devices that disable the touchscreen when a stylus\n            // comes near the screen fire a touch-end event at the position of the stylus when a\n            // touch gesture is canceled. Because the stylus is often far away from the last touch,\n            // this causes a great displacement between the second-to-last (from the touchscreen) and\n            // last (from the pen that is now near the screen) events. Only allow velocity to decrease\n            // to work around this:\n            if (oldVelocity.magnitude() < this.velocity.magnitude()) {\n                this.velocity = oldVelocity;\n            }\n            // Cancel any ongoing inertial scrolling.\n            this.inertialScroller?.stop();\n            this.inertialScroller = new InertialScroller(this.velocity, (scrollDelta) => {\n                if (!this.transform) {\n                    return;\n                }\n                const canvasDelta = this.editor.viewport.screenToCanvasTransform.transformVec3(scrollDelta);\n                // Scroll by scrollDelta\n                this.transform.unapply(this.editor);\n                this.transform = Viewport.transformBy(this.transform.transform.rightMul(Mat33.translation(canvasDelta)));\n                this.transform.apply(this.editor);\n            }, onComplete);\n        }\n        else {\n            onComplete();\n        }\n    }\n    onGestureCancel() {\n        this.inertialScroller?.stop();\n        this.velocity = Vec2.zero;\n        this.transform?.unapply(this.editor);\n        this.editor.display.setDraftMode(false);\n        this.transform = null;\n    }\n    // Applies [transformUpdate] to the editor. This stacks on top of the\n    // current transformation, if it exists.\n    updateTransform(transformUpdate, announce = false) {\n        let newTransform = transformUpdate;\n        if (this.transform) {\n            newTransform = this.transform.transform.rightMul(transformUpdate);\n        }\n        this.transform?.unapply(this.editor);\n        this.transform = Viewport.transformBy(newTransform);\n        this.transform.apply(this.editor);\n        if (announce) {\n            this.editor.announceForAccessibility(this.transform.description(this.editor, this.editor.localization));\n        }\n    }\n    /**\n     * Updates the current transform and clears it. Use this method for events that are not part of\n     * a larger gesture (i.e. have no start and end event). For example, this would be used for `onwheel`\n     * events, but not for `onpointer` events.\n     */\n    applyAndFinalizeTransform(transformUpdate) {\n        this.updateTransform(transformUpdate, true);\n        this.transform = null;\n    }\n    onWheel({ delta, screenPos }) {\n        this.inertialScroller?.stop();\n        // Reset the transformation -- wheel events are individual events, so we don't\n        // need to unapply/reapply.\n        this.transform = Viewport.transformBy(Mat33.identity);\n        const canvasPos = this.editor.viewport.screenToCanvas(screenPos);\n        const toCanvas = this.editor.viewport.screenToCanvasTransform;\n        // Transform without including translation\n        const translation = toCanvas.transformVec3(Vec3.of(-delta.x, -delta.y, 0));\n        let pinchAmount = delta.z;\n        // Clamp the magnitude of pinchAmount\n        pinchAmount = Math.atan(pinchAmount / 2) * 2;\n        const pinchZoomScaleFactor = 1.04;\n        const transformUpdate = Mat33.scaling2D(Math.max(0.4, Math.min(Math.pow(pinchZoomScaleFactor, -pinchAmount), 4)), canvasPos).rightMul(Mat33.translation(translation));\n        this.applyAndFinalizeTransform(transformUpdate);\n        return true;\n    }\n    onKeyPress(event) {\n        this.inertialScroller?.stop();\n        if (!(this.mode & PanZoomMode.Keyboard)) {\n            return false;\n        }\n        // No need to keep the same the transform for keyboard events.\n        this.transform = Viewport.transformBy(Mat33.identity);\n        let translation = Vec2.zero;\n        let scale = 1;\n        let rotation = 0;\n        // Keyboard shortcut handling\n        const shortcucts = this.editor.shortcuts;\n        if (shortcucts.matchesShortcut(moveLeftKeyboardShortcutId, event)) {\n            translation = Vec2.of(-1, 0);\n        }\n        else if (shortcucts.matchesShortcut(moveRightKeyboardShortcutId, event)) {\n            translation = Vec2.of(1, 0);\n        }\n        else if (shortcucts.matchesShortcut(moveUpKeyboardShortcutId, event)) {\n            translation = Vec2.of(0, -1);\n        }\n        else if (shortcucts.matchesShortcut(moveDownKeyboardShortcutId, event)) {\n            translation = Vec2.of(0, 1);\n        }\n        else if (shortcucts.matchesShortcut(zoomInKeyboardShortcutId, event)) {\n            scale = 1 / 2;\n        }\n        else if (shortcucts.matchesShortcut(zoomOutKeyboardShortcutId, event)) {\n            scale = 2;\n        }\n        else if (shortcucts.matchesShortcut(rotateClockwiseKeyboardShortcutId, event)) {\n            rotation = 1;\n        }\n        else if (shortcucts.matchesShortcut(rotateCounterClockwiseKeyboardShortcutId, event)) {\n            rotation = -1;\n        }\n        else {\n            return false;\n        }\n        // For each keypress,\n        translation = translation.times(30); // Move at most 30 units\n        rotation *= Math.PI / 8; // Rotate at least a sixteenth of a rotation\n        // Transform the canvas, not the viewport:\n        translation = translation.times(-1);\n        rotation = rotation * -1;\n        scale = 1 / scale;\n        // Work around an issue that seems to be related to rotation matrices losing precision on inversion.\n        // TODO: Figure out why and implement a better solution.\n        if (rotation !== 0) {\n            rotation += 0.0001;\n        }\n        if (this.isRotationLocked()) {\n            rotation = 0;\n        }\n        const toCanvas = this.editor.viewport.screenToCanvasTransform;\n        // Transform without translating (treat toCanvas as a linear instead of\n        // an affine transformation).\n        translation = toCanvas.transformVec3(translation);\n        // Rotate/scale about the center of the canvas\n        const transformCenter = this.editor.viewport.visibleRect.center;\n        const transformUpdate = Mat33.scaling2D(scale, transformCenter)\n            .rightMul(Mat33.zRotation(rotation, transformCenter))\n            .rightMul(Mat33.translation(translation));\n        this.applyAndFinalizeTransform(transformUpdate);\n        return true;\n    }\n    isRotationLocked() {\n        return !!(this.mode & PanZoomMode.RotationLocked);\n    }\n    /**\n     * Changes the types of gestures used by this pan/zoom tool.\n     *\n     * @see {@link PanZoomMode} {@link setMode}\n     *\n     * @example\n     * ```ts,runnable\n     * import { Editor, PanZoomTool, PanZoomMode } from 'js-draw';\n     *\n     * const editor = new Editor(document.body);\n     *\n     * // By default, there are multiple PanZoom tools that handle different events.\n     * // This gets all PanZoomTools.\n     * const panZoomToolList = editor.toolController.getMatchingTools(PanZoomTool);\n     *\n     * // The first PanZoomTool is the highest priority -- by default,\n     * // this tool is responsible for handling multi-finger touch gestures.\n     * //\n     * // Lower-priority PanZoomTools handle one-finger touch gestures and\n     * // key-presses.\n     * const panZoomTool = panZoomToolList[0];\n     *\n     * // Lock rotation for multi-finger touch gestures.\n     * panZoomTool.setModeEnabled(PanZoomMode.RotationLocked, true);\n     * ```\n     */\n    setModeEnabled(mode, enabled) {\n        let newMode = this.mode;\n        if (enabled) {\n            newMode |= mode;\n        }\n        else {\n            newMode &= ~mode;\n        }\n        this.setMode(newMode);\n    }\n    /**\n     * Sets all modes for this tool using a bitmask.\n     *\n     * @see {@link setModeEnabled}\n     *\n     * @example\n     * ```ts\n     * tool.setMode(PanZoomMode.RotationLocked|PanZoomMode.TwoFingerTouchGestures);\n     * ```\n     */\n    setMode(mode) {\n        if (mode !== this.mode) {\n            this.mode = mode;\n            this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n                kind: EditorEventType.ToolUpdated,\n                tool: this,\n            });\n        }\n    }\n    /**\n     * Returns a bitmask indicating the currently-enabled modes.\n     * @see {@link setModeEnabled}\n     */\n    getMode() {\n        return this.mode;\n    }\n}\n", "import { Color4 } from '@js-draw/math';\nexport const cloneStyle = (style) => {\n    return {\n        fill: style.fill,\n        stroke: style.stroke\n            ? {\n                ...style.stroke,\n            }\n            : undefined,\n    };\n};\nexport const stylesEqual = (a, b) => {\n    const result = a === b ||\n        (a.fill.eq(b.fill) &&\n            (a.stroke == undefined) === (b.stroke == undefined) &&\n            (a.stroke?.color?.eq(b.stroke?.color) ?? true) &&\n            a.stroke?.width === b.stroke?.width);\n    // Map undefined/null -> false\n    return result ?? false;\n};\n// Returns an object that can be converted to a JSON string with\n// JSON.stringify.\nexport const styleToJSON = (style) => {\n    const stroke = !style.stroke\n        ? undefined\n        : {\n            color: style.stroke.color.toHexString(),\n            width: style.stroke.width,\n        };\n    return {\n        fill: style.fill.toHexString(),\n        stroke,\n    };\n};\nexport const styleFromJSON = (json) => {\n    const stroke = json.stroke\n        ? {\n            color: Color4.fromHex(json.stroke.color),\n            width: json.stroke.width,\n        }\n        : undefined;\n    return {\n        fill: Color4.fromHex(json.fill),\n        stroke,\n    };\n};\n", "import  { cloneStyle, styleFromJSON, styleToJSON }  from './RenderingStyle.mjs';\nexport const cloneTextStyle = (style) => {\n    return {\n        ...style,\n        renderingStyle: cloneStyle(style.renderingStyle),\n    };\n};\n/** `json` can either be a `string` or an `object`. */\nexport const textStyleFromJSON = (json) => {\n    if (typeof json === 'string') {\n        json = JSON.parse(json);\n    }\n    if (typeof json.fontFamily !== 'string') {\n        throw new Error('Serialized textStyle missing string fontFamily attribute!');\n    }\n    const style = {\n        renderingStyle: styleFromJSON(json.renderingStyle),\n        size: json.size,\n        fontWeight: json.fontWeight,\n        fontVariant: json.fontVariant,\n        fontFamily: json.fontFamily,\n    };\n    return style;\n};\nexport const textStyleToJSON = (style) => {\n    return {\n        ...style,\n        renderingStyle: styleToJSON(style.renderingStyle),\n    };\n};\n", "import { Color4 } from '@js-draw/math';\nimport  SerializableCommand  from '../commands/SerializableCommand.mjs';\nimport  UnresolvedSerializableCommand  from '../commands/UnresolvedCommand.mjs';\nimport  { textStyleFromJSON, textStyleToJSON, }  from '../rendering/TextRenderingStyle.mjs';\nconst serializeComponentStyle = (style) => {\n    const result = {};\n    if (style.color) {\n        result.color = style.color.toHexString();\n    }\n    if (style.textStyle) {\n        result.textStyle = textStyleToJSON(style.textStyle);\n    }\n    return result;\n};\nconst deserializeComponentStyle = (json) => {\n    const color = json.color ? Color4.fromHex(json.color) : undefined;\n    const textStyle = json.textStyle ? textStyleFromJSON(json.textStyle) : undefined;\n    return {\n        color,\n        textStyle,\n    };\n};\n// For internal use by Components implementing `updateStyle`:\nexport const createRestyleComponentCommand = (initialStyle, newStyle, component) => {\n    return new DefaultRestyleComponentCommand(initialStyle, newStyle, component.getId(), component);\n};\n// Returns true if `component` is a `RestylableComponent`.\nexport const isRestylableComponent = (component) => {\n    const hasMethods = 'getStyle' in component && 'updateStyle' in component && 'forceStyle' in component;\n    if (!hasMethods) {\n        return false;\n    }\n    if (!('isRestylableComponent' in component) || !component['isRestylableComponent']) {\n        return false;\n    }\n    return true;\n};\nconst defaultRestyleComponentCommandId = 'default-restyle-element';\nclass DefaultRestyleComponentCommand extends UnresolvedSerializableCommand {\n    constructor(originalStyle, newStyle, componentID, component) {\n        super(defaultRestyleComponentCommandId, componentID, component);\n        this.originalStyle = originalStyle;\n        this.newStyle = newStyle;\n    }\n    getComponent(editor) {\n        this.resolveComponent(editor.image);\n        const component = this.component;\n        if (!component || !component['forceStyle'] || !component['updateStyle']) {\n            throw new Error('this.component is missing forceStyle and/or updateStyle methods!');\n        }\n        return component;\n    }\n    apply(editor) {\n        this.getComponent(editor).forceStyle(this.newStyle, editor);\n    }\n    unapply(editor) {\n        this.getComponent(editor).forceStyle(this.originalStyle, editor);\n    }\n    description(editor, localizationTable) {\n        return localizationTable.restyledElement(this.getComponent(editor).description(localizationTable));\n    }\n    serializeToJSON() {\n        return {\n            id: this.componentID,\n            originalStyle: serializeComponentStyle(this.originalStyle),\n            newStyle: serializeComponentStyle(this.newStyle),\n        };\n    }\n}\n(() => {\n    SerializableCommand.register(defaultRestyleComponentCommandId, (json, _editor) => {\n        const origStyle = deserializeComponentStyle(json.originalStyle);\n        const newStyle = deserializeComponentStyle(json.newStyle);\n        const id = json.id;\n        if (typeof json.id !== 'string') {\n            throw new Error(`json.id is of type ${typeof json.id}, not string.`);\n        }\n        return new DefaultRestyleComponentCommand(origStyle, newStyle, id);\n    });\n})();\n", "import { Color4, Mat33, Path, PathCommandType, Rect2 } from '@js-draw/math';\n/** Converts a renderable path (a path with a `startPoint`, `commands`, and `style`). */\nexport const pathFromRenderable = (renderable) => {\n    if (renderable.path) {\n        return renderable.path;\n    }\n    return new Path(renderable.startPoint, renderable.commands);\n};\n/**\n * Converts `path` into a format that can be rendered (by passing to a {@link Stroke} constructor\n * or directly to an {@link AbstractRenderer.drawPath}).\n */\nexport const pathToRenderable = (path, style) => {\n    return {\n        startPoint: path.startPoint,\n        style,\n        commands: path.parts,\n        path,\n    };\n};\n/**\n * Fills the optional `path` field in `RenderablePathSpec`\n * with `path` if not already filled\n */\nconst pathIncluded = (renderablePath, path) => {\n    if (renderablePath.path) {\n        return renderablePath;\n    }\n    return {\n        ...renderablePath,\n        path,\n    };\n};\n/**\n * Tries to simplify the given path to a fullscreen rectangle.\n * Returns `null` on failure.\n *\n * @internal\n */\nexport const simplifyPathToFullScreenOrEmpty = (renderablePath, visibleRect, options = {\n    fastCheck: true,\n    expensiveCheck: true,\n}) => {\n    const path = pathFromRenderable(renderablePath);\n    const strokeWidth = renderablePath.style.stroke?.width ?? 0;\n    const onlyStroked = strokeWidth > 0 && renderablePath.style.fill.a === 0;\n    const styledPathBBox = path.bbox.grownBy(strokeWidth);\n    // Are we close enough to the path that it fills the entire screen?\n    const isOnlyStrokedAndCouldFillScreen = onlyStroked &&\n        strokeWidth > visibleRect.maxDimension &&\n        styledPathBBox.containsRect(visibleRect);\n    if (options.fastCheck && isOnlyStrokedAndCouldFillScreen && renderablePath.style.stroke) {\n        const strokeRadius = strokeWidth / 2;\n        // Are we completely within the stroke?\n        // Do a fast, but with many false negatives, check.\n        for (const point of path.startEndPoints()) {\n            // If within the strokeRadius of any point\n            if (visibleRect.isWithinRadiusOf(strokeRadius, point)) {\n                return {\n                    rectangle: visibleRect,\n                    path: pathToRenderable(Path.fromRect(visibleRect), {\n                        fill: renderablePath.style.stroke.color,\n                    }),\n                    fullScreen: true,\n                };\n            }\n        }\n    }\n    // Try filtering again, but with slightly more expensive checks\n    if (options.expensiveCheck &&\n        isOnlyStrokedAndCouldFillScreen &&\n        renderablePath.style.stroke &&\n        strokeWidth > visibleRect.maxDimension * 3) {\n        const signedDist = path.signedDistance(visibleRect.center, strokeWidth / 2);\n        const margin = strokeWidth / 6;\n        if (signedDist < -visibleRect.maxDimension / 2 - margin) {\n            return {\n                path: pathToRenderable(Path.fromRect(visibleRect), {\n                    fill: renderablePath.style.stroke.color,\n                }),\n                rectangle: visibleRect,\n                fullScreen: true,\n            };\n        }\n        else if (signedDist > visibleRect.maxDimension / 2 + margin) {\n            return {\n                path: pathToRenderable(Path.empty, { fill: Color4.transparent }),\n                rectangle: Rect2.empty,\n                fullScreen: false,\n            };\n        }\n    }\n    return null;\n};\n/**\n * @returns a Path that, when rendered, looks roughly equivalent to the given path.\n */\nexport const visualEquivalent = (renderablePath, visibleRect) => {\n    const path = pathFromRenderable(renderablePath);\n    const strokeWidth = renderablePath.style.stroke?.width ?? 0;\n    const onlyStroked = strokeWidth > 0 && renderablePath.style.fill.a === 0;\n    const styledPathBBox = path.bbox.grownBy(strokeWidth);\n    let rectangleSimplification = simplifyPathToFullScreenOrEmpty(renderablePath, visibleRect, {\n        fastCheck: true,\n        expensiveCheck: false,\n    });\n    if (rectangleSimplification) {\n        return rectangleSimplification.path;\n    }\n    // Scale the expanded rect --- the visual equivalent is only close for huge strokes.\n    const expandedRect = visibleRect\n        .grownBy(strokeWidth)\n        .transformedBoundingBox(Mat33.scaling2D(4, visibleRect.center));\n    // TODO: Handle simplifying very small paths.\n    if (expandedRect.containsRect(styledPathBBox)) {\n        return pathIncluded(renderablePath, path);\n    }\n    const parts = [];\n    let startPoint = path.startPoint;\n    for (const part of path.parts) {\n        const partBBox = Path.computeBBoxForSegment(startPoint, part).grownBy(strokeWidth);\n        let endPoint;\n        if (part.kind === PathCommandType.LineTo || part.kind === PathCommandType.MoveTo) {\n            endPoint = part.point;\n        }\n        else {\n            endPoint = part.endPoint;\n        }\n        const intersectsVisible = partBBox.intersects(visibleRect);\n        if (intersectsVisible) {\n            // TODO: Can we trim parts of paths that intersect the visible rectangle?\n            parts.push(part);\n        }\n        else if (onlyStroked || part.kind === PathCommandType.MoveTo) {\n            // We're stroking (not filling) and the path doesn't intersect the bounding box.\n            // Don't draw it, but preserve the endpoints.\n            parts.push({\n                kind: PathCommandType.MoveTo,\n                point: endPoint,\n            });\n        }\n        else {\n            // Otherwise, we may be filling. Try to roughly preserve the filled region.\n            parts.push({\n                kind: PathCommandType.LineTo,\n                point: endPoint,\n            });\n        }\n        startPoint = endPoint;\n    }\n    const newPath = new Path(path.startPoint, parts);\n    const newStyle = renderablePath.style;\n    rectangleSimplification = simplifyPathToFullScreenOrEmpty(renderablePath, visibleRect, {\n        fastCheck: false,\n        expensiveCheck: true,\n    });\n    if (rectangleSimplification) {\n        return rectangleSimplification.path;\n    }\n    return pathToRenderable(newPath, newStyle);\n};\n", "import { Path, Rect2, PathCommandType, comparePathIndices, stepPathIndexBy, Color4, } from '@js-draw/math';\nimport  { styleFromJSON, styleToJSON, }  from '../rendering/RenderingStyle.mjs';\nimport  AbstractComponent  from './AbstractComponent.mjs';\nimport  { createRestyleComponentCommand, }  from './RestylableComponent.mjs';\nimport  { pathFromRenderable, pathToRenderable, simplifyPathToFullScreenOrEmpty, }  from '../rendering/RenderablePathSpec.mjs';\n/**\n * Represents an {@link AbstractComponent} made up of one or more {@link Path}s.\n *\n * @example\n * For some {@link Editor} editor and `Stroke` stroke,\n *\n * **Restyling**:\n * ```ts\n * editor.dispatch(stroke.updateStyle({ color: Color4.red }));\n * ```\n *\n * **Transforming**:\n * ```ts\n * editor.dispatch(stroke.transformBy(Mat33.translation(Vec2.of(10, 0))));\n * ```\n *\n * **Adding**:\n * [[include:doc-pages/inline-examples/adding-a-stroke.md]]\n */\nexport default class Stroke extends AbstractComponent {\n    /**\n     * Creates a `Stroke` from the given `parts`. All parts should have the\n     * same color.\n     *\n     * @example\n     * ```ts\n     * // A path that starts at (1,1), moves to the right by (2, 0),\n     * // then moves down and right by (3, 3)\n     * const path = Path.fromString('m1,1 2,0 3,3');\n     *\n     * const stroke = new Stroke([\n     *     // Fill with red\n     *     pathToRenderable(path, { fill: Color4.red })\n     * ]);\n     * ```\n     */\n    constructor(parts, initialZIndex) {\n        super('stroke', initialZIndex);\n        // @internal\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this.isRestylableComponent = true;\n        // A simplification of the path for a given visibleRect. Intended\n        // to help check for occlusion.\n        this.simplifiedPath = null;\n        this.approximateRenderingTime = 0;\n        this.parts = [];\n        for (const section of parts) {\n            const path = pathFromRenderable(section);\n            const pathBBox = this.bboxForPart(path.bbox, section.style);\n            if (!this.contentBBox) {\n                this.contentBBox = pathBBox;\n            }\n            else {\n                this.contentBBox = this.contentBBox.union(pathBBox);\n            }\n            this.parts.push({\n                path,\n                // To implement RenderablePathSpec\n                startPoint: path.startPoint,\n                style: section.style,\n                commands: path.parts,\n            });\n            this.approximateRenderingTime += path.parts.length;\n        }\n        this.contentBBox ??= Rect2.empty;\n    }\n    /**\n     * Creates a new `Stroke` from a {@link Path} and `style`. Strokes created\n     * with this method have transparent fill.\n     *\n     * Example:\n     * ```ts,runnable\n     * import { Editor, Stroke, Color4 } from 'js-draw';\n     * const editor = new Editor(document.body);\n     * ---visible---\n     * const stroke = Stroke.fromStroked('m0,0 l10,10', { width: 10, color: Color4.red });\n     * editor.dispatch(editor.image.addComponent(stroke));\n     * ```\n     * Notice that `path` can be a string that specifies an SVG path\n     *\n     * @see fromFilled\n     */\n    static fromStroked(path, style) {\n        if (typeof path === 'string') {\n            path = Path.fromString(path);\n        }\n        return new Stroke([pathToRenderable(path, { fill: Color4.transparent, stroke: style })]);\n    }\n    /** @see fromStroked */\n    static fromFilled(path, fill) {\n        if (typeof path === 'string') {\n            path = Path.fromString(path);\n        }\n        return new Stroke([pathToRenderable(path, { fill })]);\n    }\n    getStyle() {\n        if (this.parts.length === 0) {\n            return {};\n        }\n        const firstPart = this.parts[0];\n        if (firstPart.style.stroke === undefined || firstPart.style.stroke.width === 0) {\n            return {\n                color: firstPart.style.fill,\n            };\n        }\n        return {\n            color: firstPart.style.stroke.color,\n        };\n    }\n    updateStyle(style) {\n        return createRestyleComponentCommand(this.getStyle(), style, this);\n    }\n    forceStyle(style, editor) {\n        if (!style.color) {\n            return;\n        }\n        this.parts = this.parts.map((part) => {\n            const newStyle = {\n                ...part.style,\n                stroke: part.style.stroke\n                    ? {\n                        ...part.style.stroke,\n                    }\n                    : undefined,\n            };\n            // Change the stroke color if a stroked shape. Else,\n            // change the fill.\n            if (newStyle.stroke && newStyle.stroke.width > 0) {\n                newStyle.stroke.color = style.color;\n            }\n            else {\n                newStyle.fill = style.color;\n            }\n            return {\n                path: part.path,\n                startPoint: part.startPoint,\n                commands: part.commands,\n                style: newStyle,\n            };\n        });\n        if (editor) {\n            editor.image.queueRerenderOf(this);\n            editor.queueRerender();\n        }\n    }\n    /** @beta -- May fail for concave `path`s */\n    withRegionErased(eraserPath, viewport) {\n        const polyline = eraserPath.polylineApproximation();\n        const isPointInsideEraser = (point) => {\n            return eraserPath.closedContainsPoint(point);\n        };\n        const newStrokes = [];\n        let failedAssertions = false;\n        for (const part of this.parts) {\n            const path = part.path;\n            const makeStroke = (path) => {\n                if (part.style.fill.a > 0) {\n                    // Remove visually empty paths.\n                    if (path.parts.length < 1 ||\n                        (path.parts.length === 1 && path.parts[0].kind === PathCommandType.LineTo)) {\n                        // TODO: If this isn't present, a very large number of strokes are created while erasing.\n                        return null;\n                    }\n                    else {\n                        // Filled paths must be closed (allows for optimizations elsewhere)\n                        path = path.asClosed();\n                    }\n                }\n                if (isNaN(path.getExactBBox().area)) {\n                    console.warn('Prevented creating a stroke with NaN area');\n                    failedAssertions = true;\n                    return null;\n                }\n                return new Stroke([pathToRenderable(path, part.style)], this.getZIndex());\n            };\n            const intersectionPoints = [];\n            // If stroked, finds intersections with the middle of the stroke.\n            // If filled, finds intersections with the edge of the stroke.\n            for (const segment of polyline) {\n                intersectionPoints.push(...path.intersection(segment));\n            }\n            // When stroked, if the stroke width is significantly larger than the eraser,\n            // it can't intersect both the edge of the stroke and its middle at the same time\n            // (generally, erasing is triggered by the eraser touching the edge of this stroke).\n            //\n            // As such, we also look for intersections along the edge of this, if none with the\n            // center were found, but only within a certain range of sizes because:\n            // 1. Intersection testing with stroked paths is generally much slower than with\n            //    non-stroked paths.\n            // 2. If zoomed in significantly, it's unlikely that the user wants to erase a large\n            //    part of the stroke.\n            let isErasingFromEdge = false;\n            if (intersectionPoints.length === 0 &&\n                part.style.stroke &&\n                part.style.stroke.width > eraserPath.bbox.minDimension * 0.3 &&\n                part.style.stroke.width < eraserPath.bbox.maxDimension * 30) {\n                for (const segment of polyline) {\n                    intersectionPoints.push(...path.intersection(segment, part.style.stroke.width / 2));\n                }\n                isErasingFromEdge = true;\n            }\n            // Sort first by curve index, then by parameter value\n            intersectionPoints.sort(comparePathIndices);\n            const isInsideJustBeforeFirst = (() => {\n                if (intersectionPoints.length === 0) {\n                    return false;\n                }\n                // The eraser may not be near the center of the curve -- approximate.\n                if (isErasingFromEdge) {\n                    return (intersectionPoints[0].curveIndex === 0 && intersectionPoints[0].parameterValue <= 0);\n                }\n                const justBeforeFirstIntersection = stepPathIndexBy(intersectionPoints[0], -1e-10);\n                return isPointInsideEraser(path.at(justBeforeFirstIntersection));\n            })();\n            let intersectionCount = isInsideJustBeforeFirst ? 1 : 0;\n            const addNewPath = (path, knownToBeInside) => {\n                const component = makeStroke(path);\n                let isInside = intersectionCount % 2 === 1;\n                intersectionCount++;\n                if (knownToBeInside !== undefined) {\n                    isInside = knownToBeInside;\n                }\n                // Here, we work around bugs in the underlying Bezier curve library\n                // (including https://github.com/Pomax/bezierjs/issues/179).\n                // Even if not all intersections are returned correctly, we still want\n                // isInside to be roughly correct.\n                if (knownToBeInside === undefined &&\n                    !isInside &&\n                    eraserPath.closedContainsPoint(path.getExactBBox().center)) {\n                    isInside = !isInside;\n                }\n                if (!component) {\n                    return;\n                }\n                // Assertion: Avoid deleting sections that are much larger than the eraser.\n                failedAssertions ||=\n                    isInside && path.getExactBBox().maxDimension > eraserPath.getExactBBox().maxDimension * 2;\n                if (!isInside) {\n                    newStrokes.push(component);\n                }\n            };\n            if (part.style.fill.a === 0) {\n                // Not filled?\n                // An additional case where we erase completely -- without the padding of the stroke,\n                // the path is smaller than the eraser (allows us to erase dots completely).\n                const shouldEraseCompletely = eraserPath.getExactBBox().maxDimension / 10 > path.getExactBBox().maxDimension;\n                if (!shouldEraseCompletely) {\n                    const split = path.splitAt(intersectionPoints, {\n                        mapNewPoint: (p) => viewport.roundPoint(p),\n                    });\n                    for (const splitPart of split) {\n                        addNewPath(splitPart);\n                    }\n                }\n            }\n            else if (intersectionPoints.length >= 2 && intersectionPoints.length % 2 === 0) {\n                // TODO: Support subtractive erasing on small scales -- see https://github.com/personalizedrefrigerator/js-draw/pull/63/commits/568686e2384219ad0bb07617ea4efff1540aed00\n                //       for a broken implementation.\n                //\n                // We currently assume that a 4-point intersection means that the intersection\n                // looks similar to this:\n                //   -----------\n                //  |   STROKE  |\n                //  |           |\n                //%%x-----------x%%%%%%%\n                //%                    %\n                //%      ERASER        %\n                //%                    %\n                //%%x-----------x%%%%%%%\n                //  |   STROKE  |\n                //   -----------\n                //\n                // Our goal is to separate STROKE into the contiguous parts outside\n                // of the eraser (as shown above).\n                //\n                // To do this, we split STROKE at each intersection:\n                //   3 3 3 3 3 3\n                //  3   STROKE  3\n                //  3           3\n                //  x           x\n                //  2           4\n                //  2   STROKE  4\n                //  2           4\n                //  x           x\n                //  1   STROKE  5\n                //   . 5 5 5 5 5\n                //   ^\n                // Start\n                //\n                // The difficulty here is correctly pairing edges to create the the output\n                // strokes, particularly because we don't know the order of intersection points.\n                const parts = path.splitAt(intersectionPoints, {\n                    mapNewPoint: (p) => viewport.roundPoint(p),\n                });\n                for (let i = 0; i < Math.floor(parts.length / 2); i++) {\n                    addNewPath(parts[i].union(parts[parts.length - i - 1]).asClosed());\n                }\n                if (parts.length % 2 !== 0) {\n                    addNewPath(parts[Math.floor(parts.length / 2)].asClosed());\n                }\n            }\n            else {\n                addNewPath(path, false);\n            }\n        }\n        if (failedAssertions) {\n            return [this];\n        }\n        return newStrokes;\n    }\n    intersects(line) {\n        for (const part of this.parts) {\n            const strokeWidth = part.style.stroke?.width;\n            const strokeRadius = strokeWidth ? strokeWidth / 2 : undefined;\n            if (part.path.intersection(line, strokeRadius).length > 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    keyPoints() {\n        return this.parts\n            .map((part) => {\n            return part.startPoint;\n        })\n            .flat();\n    }\n    intersectsRect(rect) {\n        // AbstractComponent::intersectsRect can be inexact for strokes with non-zero\n        // stroke radius (has many false negatives). As such, additional checks are\n        // done here, before passing to the superclass.\n        if (!rect.intersects(this.getBBox())) {\n            return false;\n        }\n        // The following check only checks for the positive case:\n        // Sample a set of points that are known to be within each part of this\n        // stroke. For example, the points marked with an \"x\" below:\n        //   ___________________\n        //  /                   \\\n        //  | x              x  |\n        //  \\_____________      |\n        //                |  x  |\n        //                \\_____/\n        //\n        // Because we don't want the following case to result in selection,\n        //   __________________\n        //  /.___.             \\\n        //  || x |          x  |    <-  /* The\n        //  |·---·             |            .___.\n        //  \\____________      |            |   |\n        //               |  x  |            ·---·\n        //               \\_____/           denotes the input rectangle */\n        //\n        // we need to ensure that the rectangle intersects each point **and** the\n        // edge of the rectangle.\n        for (const part of this.parts) {\n            // As such, we need to shrink the input rectangle to verify that the original,\n            // unshrunken rectangle would have intersected the edge of the stroke if it\n            // intersects a point within the stroke.\n            const interiorRect = rect.grownBy(-(part.style.stroke?.width ?? 0));\n            if (interiorRect.area === 0) {\n                continue;\n            }\n            for (const point of part.path.startEndPoints()) {\n                if (interiorRect.containsPoint(point)) {\n                    return true;\n                }\n            }\n        }\n        return super.intersectsRect(rect);\n    }\n    computeSimplifiedPathFor(visibleRect) {\n        const simplifiedParts = [];\n        let occludes = false;\n        let skipSimplification = false;\n        for (const part of this.parts) {\n            if (skipSimplification ||\n                // Simplification currently only works for stroked paths\n                !part.style.stroke ||\n                // One of the main purposes of this is to check for occlusion.\n                // We can't occlude things if the stroke is partially transparent.\n                part.style.stroke.color.a < 0.99) {\n                simplifiedParts.push(part);\n                continue;\n            }\n            const mapping = simplifyPathToFullScreenOrEmpty(part, visibleRect);\n            if (mapping) {\n                simplifiedParts.push(mapping.path);\n                if (mapping.fullScreen) {\n                    occludes = true;\n                    skipSimplification = true;\n                }\n            }\n            else {\n                simplifiedParts.push(part);\n            }\n        }\n        return {\n            forVisibleRect: visibleRect,\n            parts: simplifiedParts,\n            occludes,\n        };\n    }\n    occludesEverythingBelowWhenRenderedInRect(rect) {\n        // Can't occlude if doesn't contain.\n        if (!this.getBBox().containsRect(rect)) {\n            return false;\n        }\n        if (!this.simplifiedPath || !this.simplifiedPath.forVisibleRect.eq(rect)) {\n            this.simplifiedPath = this.computeSimplifiedPathFor(rect);\n        }\n        return this.simplifiedPath.occludes;\n    }\n    render(canvas, visibleRect) {\n        canvas.startObject(this.getBBox());\n        // Can we use a cached simplified path for faster rendering?\n        let parts = this.parts;\n        if (visibleRect && this.simplifiedPath?.forVisibleRect?.containsRect(visibleRect)) {\n            parts = this.simplifiedPath.parts;\n        }\n        else {\n            // Save memory\n            this.simplifiedPath = null;\n        }\n        for (const part of parts) {\n            const bbox = this.bboxForPart(part.path.bbox, part.style);\n            if (visibleRect) {\n                if (!bbox.intersects(visibleRect)) {\n                    continue;\n                }\n                const muchBiggerThanVisible = bbox.size.x > visibleRect.size.x * 3 || bbox.size.y > visibleRect.size.y * 3;\n                if (muchBiggerThanVisible &&\n                    !part.path.roughlyIntersects(visibleRect, part.style.stroke?.width ?? 0)) {\n                    continue;\n                }\n            }\n            canvas.drawPath(part);\n        }\n        canvas.endObject(this.getLoadSaveData());\n    }\n    getProportionalRenderingTime() {\n        return this.approximateRenderingTime;\n    }\n    // Grows the bounding box for a given stroke part based on that part's style.\n    bboxForPart(origBBox, style) {\n        if (!style.stroke) {\n            return origBBox;\n        }\n        return origBBox.grownBy(style.stroke.width / 2);\n    }\n    getExactBBox() {\n        let bbox = null;\n        for (const { path, style } of this.parts) {\n            // Paths' default .bbox can be\n            const partBBox = this.bboxForPart(path.getExactBBox(), style);\n            bbox ??= partBBox;\n            bbox = bbox.union(partBBox);\n        }\n        return bbox ?? Rect2.empty;\n    }\n    applyTransformation(affineTransfm) {\n        this.contentBBox = Rect2.empty;\n        let isFirstPart = true;\n        // Update each part\n        this.parts = this.parts.map((part) => {\n            const newPath = part.path.transformedBy(affineTransfm);\n            const newStyle = {\n                ...part.style,\n                stroke: part.style.stroke\n                    ? {\n                        ...part.style.stroke,\n                    }\n                    : undefined,\n            };\n            // Approximate the scale factor.\n            if (newStyle.stroke) {\n                const scaleFactor = affineTransfm.getScaleFactor();\n                newStyle.stroke.width *= scaleFactor;\n            }\n            const newBBox = this.bboxForPart(newPath.bbox, newStyle);\n            if (isFirstPart) {\n                this.contentBBox = newBBox;\n                isFirstPart = false;\n            }\n            else {\n                this.contentBBox = this.contentBBox.union(newBBox);\n            }\n            return {\n                path: newPath,\n                startPoint: newPath.startPoint,\n                commands: newPath.parts,\n                style: newStyle,\n            };\n        });\n    }\n    /**\n     * @returns A list of the parts that make up this path. Many paths only have one part.\n     *\n     * Each part (a {@link RenderablePathSpec}) contains information about the style and geometry\n     * of that part of the stroke. Use the `.path` property to do collision detection and other\n     * operations involving the stroke's geometry.\n     *\n     * Note that many of {@link Path}'s methods (e.g. {@link Path.intersection}) take a\n     * `strokeWidth` parameter that can be gotten from {@link RenderablePathSpec.style} `.stroke.width`.\n     */\n    getParts() {\n        return [...this.parts];\n    }\n    /**\n     * @returns the {@link Path.union} of all paths that make up this stroke.\n     */\n    getPath() {\n        let result = null;\n        for (const part of this.parts) {\n            if (result) {\n                result = result.union(part.path);\n            }\n            else {\n                result ??= part.path;\n            }\n        }\n        return result ?? Path.empty;\n    }\n    description(localization) {\n        return localization.stroke;\n    }\n    createClone() {\n        return new Stroke(this.parts);\n    }\n    serializeToJSON() {\n        return this.parts.map((part) => {\n            return {\n                style: styleToJSON(part.style),\n                path: part.path.serialize(),\n            };\n        });\n    }\n    /** @internal */\n    static deserializeFromJSON(json) {\n        if (typeof json === 'string') {\n            json = JSON.parse(json);\n        }\n        if (typeof json !== 'object' || typeof json.length !== 'number') {\n            throw new Error(`${json} is missing required field, parts, or parts is of the wrong type.`);\n        }\n        const pathSpec = json.map((part) => {\n            const style = styleFromJSON(part.style);\n            return pathToRenderable(Path.fromString(part.path), style);\n        });\n        return new Stroke(pathSpec);\n    }\n}\nAbstractComponent.registerComponent('stroke', Stroke.deserializeFromJSON);\n", "import { Vec2, Rect2, LineSegment2, QuadraticBezier } from '@js-draw/math';\n// Handles stroke smoothing\nexport class StrokeSmoother {\n    constructor(startPoint, \n    // Maximum distance from the actual curve (irrespective of stroke width)\n    // for which a point is considered 'part of the curve'.\n    // Note that the maximum will be smaller if the stroke width is less than\n    // [maxFitAllowed].\n    minFitAllowed, maxFitAllowed, onCurveAdded) {\n        this.startPoint = startPoint;\n        this.minFitAllowed = minFitAllowed;\n        this.maxFitAllowed = maxFitAllowed;\n        this.onCurveAdded = onCurveAdded;\n        this.isFirstSegment = true;\n        this.lastExitingVec = null;\n        this.currentCurve = null;\n        this.lastPoint = this.startPoint;\n        this.buffer = [this.startPoint.pos];\n        this.momentum = Vec2.zero;\n        this.currentCurve = null;\n        this.curveStartWidth = startPoint.width;\n        this.bbox = new Rect2(this.startPoint.pos.x, this.startPoint.pos.y, 0, 0);\n    }\n    getBBox() {\n        return this.bbox;\n    }\n    preview() {\n        if (!this.currentCurve) {\n            return null;\n        }\n        return this.currentSegmentToPath();\n    }\n    // Returns the distance between the start, control, and end points of the curve.\n    approxCurrentCurveLength() {\n        if (!this.currentCurve) {\n            return 0;\n        }\n        const startPt = this.currentCurve.p0;\n        const controlPt = this.currentCurve.p1;\n        const endPt = this.currentCurve.p2;\n        const toControlDist = startPt.distanceTo(controlPt);\n        const toEndDist = endPt.distanceTo(controlPt);\n        return toControlDist + toEndDist;\n    }\n    finalizeCurrentCurve() {\n        // Case where no points have been added\n        if (!this.currentCurve) {\n            return;\n        }\n        this.onCurveAdded(this.currentSegmentToPath());\n        const lastPoint = this.buffer[this.buffer.length - 1];\n        this.lastExitingVec = this.currentCurve.p2.minus(this.currentCurve.p1);\n        console.assert(this.lastExitingVec.magnitude() !== 0, 'lastExitingVec has zero length!');\n        // Use the last two points to start a new curve (the last point isn't used\n        // in the current curve and we want connected curves to share end points)\n        this.buffer = [this.buffer[this.buffer.length - 2], lastPoint];\n        this.currentCurve = null;\n        this.isFirstSegment = false;\n    }\n    // Returns [upper curve, connector, lower curve]\n    currentSegmentToPath() {\n        if (this.currentCurve == null) {\n            throw new Error('Invalid State: currentCurve is null!');\n        }\n        const startVec = this.currentCurve.normal(0).normalized();\n        if (!isFinite(startVec.magnitude())) {\n            throw new Error(`startVec(${startVec}) is NaN or ∞`);\n        }\n        const startPt = this.currentCurve.at(0);\n        const endPt = this.currentCurve.at(1);\n        const controlPoint = this.currentCurve.p1;\n        return {\n            startPoint: startPt,\n            controlPoint,\n            endPoint: endPt,\n            startWidth: this.curveStartWidth,\n            endWidth: this.curveEndWidth,\n        };\n    }\n    // Compute the direction of the velocity at the end of this.buffer\n    computeExitingVec() {\n        return this.momentum.normalized().times(this.lastPoint.width / 2);\n    }\n    addPoint(newPoint) {\n        if (this.lastPoint) {\n            // Ignore points that are identical\n            const fuzzEq = 1e-10;\n            const deltaTime = newPoint.time - this.lastPoint.time;\n            if (newPoint.pos.eq(this.lastPoint.pos, fuzzEq) || deltaTime === 0) {\n                return;\n            }\n            else if (isNaN(newPoint.pos.magnitude())) {\n                console.warn('Discarding NaN point.', newPoint);\n                return;\n            }\n            const threshold = Math.min(this.lastPoint.width, newPoint.width) / 3;\n            const shouldSnapToInitial = this.startPoint.pos.distanceTo(newPoint.pos) < threshold && this.isFirstSegment;\n            // Snap to the starting point if the stroke is contained within a small ball centered\n            // at the starting point.\n            // This allows us to create a circle/dot at the start of the stroke.\n            if (shouldSnapToInitial) {\n                return;\n            }\n            const deltaTimeSeconds = deltaTime / 1000;\n            const velocity = newPoint.pos.minus(this.lastPoint.pos).times(1 / deltaTimeSeconds);\n            // TODO: Do we need momentum smoothing? (this.momentum.lerp(velocity, 0.9);)\n            this.momentum = velocity;\n        }\n        const lastPoint = this.lastPoint ?? newPoint;\n        this.lastPoint = newPoint;\n        this.buffer.push(newPoint.pos);\n        const pointRadius = newPoint.width;\n        const prevEndWidth = this.curveEndWidth;\n        this.curveEndWidth = pointRadius;\n        // recompute bbox\n        this.bbox = this.bbox.grownToPoint(newPoint.pos, pointRadius);\n        // If the last curve just ended or it's the first curve,\n        if (this.currentCurve === null) {\n            const p1 = lastPoint.pos;\n            const p2 = lastPoint.pos.plus(this.lastExitingVec ?? Vec2.unitX);\n            const p3 = newPoint.pos;\n            // Quadratic Bézier curve\n            this.currentCurve = new QuadraticBezier(p1, p2, p3);\n            console.assert(!isNaN(p1.magnitude()) && !isNaN(p2.magnitude()) && !isNaN(p3.magnitude()), 'Expected !NaN');\n            if (this.isFirstSegment) {\n                // The start of a curve often lacks accurate pressure information. Update it.\n                this.curveStartWidth = (this.curveStartWidth + pointRadius) / 2;\n            }\n            else {\n                this.curveStartWidth = prevEndWidth;\n            }\n        }\n        // If there isn't an entering vector (e.g. because this.isFirstCurve), approximate it.\n        let enteringVec = this.lastExitingVec;\n        if (!enteringVec) {\n            let sampleIdx = Math.ceil(this.buffer.length / 2);\n            if (sampleIdx === 0 || sampleIdx >= this.buffer.length) {\n                sampleIdx = this.buffer.length - 1;\n            }\n            enteringVec = this.buffer[sampleIdx].minus(this.buffer[0]);\n        }\n        let exitingVec = this.computeExitingVec();\n        // Find the intersection between the entering vector and the exiting vector\n        const maxRelativeLength = 1.7;\n        const segmentStart = this.buffer[0];\n        const segmentEnd = newPoint.pos;\n        const startEndDist = segmentEnd.distanceTo(segmentStart);\n        const maxControlPointDist = maxRelativeLength * startEndDist;\n        // Exit in cases where we would divide by zero\n        if (maxControlPointDist === 0 ||\n            exitingVec.magnitude() === 0 ||\n            !isFinite(exitingVec.magnitude())) {\n            return;\n        }\n        console.assert(isFinite(enteringVec.magnitude()), 'Pre-normalized enteringVec has NaN or ∞ magnitude!');\n        enteringVec = enteringVec.normalized();\n        exitingVec = exitingVec.normalized();\n        console.assert(isFinite(enteringVec.magnitude()), 'Normalized enteringVec has NaN or ∞ magnitude!');\n        const lineFromStart = new LineSegment2(segmentStart, segmentStart.plus(enteringVec.times(maxControlPointDist)));\n        const lineFromEnd = new LineSegment2(segmentEnd.minus(exitingVec.times(maxControlPointDist)), segmentEnd);\n        const intersection = lineFromEnd.intersection(lineFromStart);\n        // Position the control point at this intersection\n        let controlPoint = null;\n        if (intersection) {\n            controlPoint = intersection.point;\n        }\n        // No intersection?\n        if (!controlPoint) {\n            // Estimate the control point position based on the entering tangent line\n            controlPoint = segmentStart\n                .lerp(segmentEnd, 0.5)\n                .lerp(segmentStart.plus(enteringVec.times(startEndDist)), 0.1);\n        }\n        // Equal to an endpoint?\n        if (segmentStart.eq(controlPoint) || segmentEnd.eq(controlPoint)) {\n            // Position the control point closer to the first -- the connecting\n            // segment will be roughly a line.\n            controlPoint = segmentStart.plus(enteringVec.times(startEndDist / 5));\n        }\n        console.assert(!segmentStart.eq(controlPoint, 1e-11), 'Start and control points are equal!');\n        console.assert(!controlPoint.eq(segmentEnd, 1e-11), 'Control and end points are equal!');\n        const prevCurve = this.currentCurve;\n        this.currentCurve = new QuadraticBezier(segmentStart, controlPoint, segmentEnd);\n        if (isNaN(this.currentCurve.normal(0).magnitude())) {\n            console.error('NaN normal at 0. Curve:', this.currentCurve);\n            this.currentCurve = prevCurve;\n        }\n        // Should we start making a new curve? Check whether all buffer points are within\n        // ±strokeWidth of the curve.\n        const curveMatchesPoints = (curve) => {\n            const minFit = Math.min(Math.max(Math.min(this.curveStartWidth, this.curveEndWidth) / 4, this.minFitAllowed), this.maxFitAllowed);\n            // The sum of distances greater than minFit must not exceed this:\n            const maxNonMatchingDistSum = minFit;\n            // Sum of distances greater than minFit.\n            let nonMatchingDistSum = 0;\n            for (const point of this.buffer) {\n                let dist = curve.approximateDistance(point);\n                if (dist > minFit) {\n                    // Use the more accurate distance function\n                    dist = curve.distance(point);\n                    nonMatchingDistSum += Math.max(0, dist - minFit);\n                    if (nonMatchingDistSum > maxNonMatchingDistSum) {\n                        return false; // false: Curve doesn't match points well enough.\n                    }\n                }\n            }\n            return true;\n        };\n        if (this.buffer.length > 3 && this.approxCurrentCurveLength() > this.curveStartWidth / 2) {\n            if (!curveMatchesPoints(this.currentCurve)) {\n                // Use a curve that better fits the points\n                this.currentCurve = prevCurve;\n                this.curveEndWidth = prevEndWidth;\n                // Reset the last point -- the current point was not added to the curve.\n                this.lastPoint = lastPoint;\n                this.finalizeCurrentCurve();\n                return;\n            }\n        }\n    }\n}\nexport default StrokeSmoother;\n", "import { Rect2, LineSegment2 } from '@js-draw/math';\nconst makeShapeFitAutocorrect = (sourceFactory) => {\n    return (startPoint, viewport) => {\n        return new ShapeFitBuilder(sourceFactory, startPoint, viewport);\n    };\n};\nexport default makeShapeFitAutocorrect;\nconst makeLineTemplate = (startPoint, points, _bbox) => {\n    const templatePoints = [startPoint, points[points.length - 1]];\n    return { points: templatePoints };\n};\nconst makeRectangleTemplate = (_startPoint, _points, bbox) => {\n    return { points: [...bbox.corners, bbox.corners[0]] };\n};\nclass ShapeFitBuilder {\n    constructor(sourceFactory, startPoint, viewport) {\n        this.sourceFactory = sourceFactory;\n        this.startPoint = startPoint;\n        this.viewport = viewport;\n        this.builder = sourceFactory(startPoint, viewport);\n        this.points = [startPoint];\n    }\n    getBBox() {\n        return this.builder.getBBox();\n    }\n    build() {\n        return this.builder.build();\n    }\n    preview(renderer) {\n        this.builder.preview(renderer);\n    }\n    addPoint(point) {\n        this.points.push(point);\n        this.builder.addPoint(point);\n    }\n    async autocorrectShape() {\n        // Use screen points so that autocorrected shapes rotate with the screen.\n        const startPoint = this.viewport.canvasToScreen(this.startPoint.pos);\n        const points = this.points.map((point) => this.viewport.canvasToScreen(point.pos));\n        const bbox = Rect2.bboxOf(points);\n        const snappedStartPoint = this.viewport.canvasToScreen(this.viewport.snapToGrid(this.startPoint.pos));\n        const snappedPoints = this.points.map((point) => this.viewport.canvasToScreen(this.viewport.snapToGrid(point.pos)));\n        const snappedBBox = Rect2.bboxOf(snappedPoints);\n        // Only fit larger shapes\n        if (bbox.maxDimension < 32) {\n            return null;\n        }\n        const maxError = Math.min(30, bbox.maxDimension / 4);\n        // Create templates\n        const templates = [\n            {\n                ...makeLineTemplate(snappedStartPoint, snappedPoints, snappedBBox),\n                toleranceMultiplier: 0.5,\n            },\n            makeLineTemplate(startPoint, points, bbox),\n            {\n                ...makeRectangleTemplate(snappedStartPoint, snappedPoints, snappedBBox),\n                toleranceMultiplier: 0.6,\n            },\n            makeRectangleTemplate(startPoint, points, bbox),\n        ];\n        // Find a good fit fit\n        const selectTemplate = (maximumAllowedError) => {\n            for (const template of templates) {\n                const templatePoints = template.points;\n                // Maximum square error to accept the template\n                const acceptMaximumSquareError = maximumAllowedError * maximumAllowedError * (template.toleranceMultiplier ?? 1);\n                // Gets the point at index, wrapping the the start of the template if\n                // outside the array of points.\n                const templateAt = (index) => {\n                    while (index < 0) {\n                        index += templatePoints.length;\n                    }\n                    index %= templatePoints.length;\n                    return templatePoints[index];\n                };\n                let closestToFirst = null;\n                let closestToFirstSqrDist = Infinity;\n                let templateStartIndex = 0;\n                // Find the closest point to the startPoint\n                for (let i = 0; i < templatePoints.length; i++) {\n                    const current = templatePoints[i];\n                    const currentSqrDist = current.squareDistanceTo(startPoint);\n                    if (!closestToFirst || currentSqrDist < closestToFirstSqrDist) {\n                        closestToFirstSqrDist = currentSqrDist;\n                        closestToFirst = current;\n                        templateStartIndex = i;\n                    }\n                }\n                // Walk through the points and find the maximum error\n                let maximumSqrError = 0;\n                let templateIndex = templateStartIndex;\n                for (const point of points) {\n                    let minimumCurrentSqrError = Infinity;\n                    let minimumErrorAtIndex = templateIndex;\n                    const windowRadius = 6;\n                    for (let i = -windowRadius; i <= windowRadius; i++) {\n                        const index = templateIndex + i;\n                        const prevTemplatePoint = templateAt(index - 1);\n                        const currentTemplatePoint = templateAt(index);\n                        const nextTemplatePoint = templateAt(index + 1);\n                        const prevToCurrent = new LineSegment2(prevTemplatePoint, currentTemplatePoint);\n                        const currentToNext = new LineSegment2(currentTemplatePoint, nextTemplatePoint);\n                        const prevToCurrentDist = prevToCurrent.distance(point);\n                        const nextToCurrentDist = currentToNext.distance(point);\n                        const error = Math.min(prevToCurrentDist, nextToCurrentDist);\n                        const squareError = error * error;\n                        if (squareError < minimumCurrentSqrError) {\n                            minimumCurrentSqrError = squareError;\n                            minimumErrorAtIndex = index;\n                        }\n                    }\n                    templateIndex = minimumErrorAtIndex;\n                    maximumSqrError = Math.max(minimumCurrentSqrError, maximumSqrError);\n                    if (maximumSqrError > acceptMaximumSquareError) {\n                        break;\n                    }\n                }\n                if (maximumSqrError < acceptMaximumSquareError) {\n                    return templatePoints;\n                }\n            }\n            return null;\n        };\n        const template = selectTemplate(maxError);\n        if (!template) {\n            return null;\n        }\n        const lastDataPoint = this.points[this.points.length - 1];\n        const startWidth = this.startPoint.width;\n        const endWidth = lastDataPoint.width;\n        const startColor = this.startPoint.color;\n        const endColor = lastDataPoint.color;\n        const startTime = this.startPoint.time;\n        const endTime = lastDataPoint.time;\n        const templateIndexToStrokeDataPoint = (index) => {\n            const prevPoint = template[Math.max(0, Math.floor(index))];\n            const nextPoint = template[Math.min(Math.ceil(index), template.length - 1)];\n            const point = prevPoint.lerp(nextPoint, index - Math.floor(index));\n            const fractionToEnd = index / template.length;\n            return {\n                pos: this.viewport.screenToCanvas(point),\n                width: startWidth * (1 - fractionToEnd) + endWidth * fractionToEnd,\n                color: startColor.mix(endColor, fractionToEnd),\n                time: startTime * (1 - fractionToEnd) + endTime * fractionToEnd,\n            };\n        };\n        const builder = this.sourceFactory(templateIndexToStrokeDataPoint(0), this.viewport);\n        // Prevent the original builder from doing stroke smoothing if the template is short\n        // enough to likely have sharp corners.\n        const preventSmoothing = template.length < 10;\n        for (let i = 0; i < template.length; i++) {\n            if (preventSmoothing) {\n                builder.addPoint(templateIndexToStrokeDataPoint(i - 0.001));\n            }\n            builder.addPoint(templateIndexToStrokeDataPoint(i));\n            if (preventSmoothing) {\n                builder.addPoint(templateIndexToStrokeDataPoint(i + 0.001));\n            }\n        }\n        return builder.build();\n    }\n}\n", "import { Vec2, Rect2, Color4, PathCommandType } from '@js-draw/math';\nimport  Stroke  from '../Stroke.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  { StrokeSmoother }  from '../util/StrokeSmoother.mjs';\nimport  makeShapeFitAutocorrect  from './autocorrect/makeShapeFitAutocorrect.mjs';\n/**\n * Creates a stroke builder that draws freehand lines.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makeFreehandLineBuilder = makeShapeFitAutocorrect((initialPoint, viewport) => {\n    // Don't smooth if input is more than ± 3 pixels from the true curve, do smooth if\n    // less than ±1 px from the curve.\n    const maxSmoothingDist = viewport.getSizeOfPixelOnCanvas() * 3;\n    const minSmoothingDist = viewport.getSizeOfPixelOnCanvas();\n    return new FreehandLineBuilder(initialPoint, minSmoothingDist, maxSmoothingDist, viewport);\n});\n// Handles stroke smoothing and creates Strokes from user/stylus input.\nexport default class FreehandLineBuilder {\n    constructor(startPoint, minFitAllowed, maxFitAllowed, viewport) {\n        this.startPoint = startPoint;\n        this.minFitAllowed = minFitAllowed;\n        this.viewport = viewport;\n        this.isFirstSegment = true;\n        this.parts = [];\n        this.widthAverageNumSamples = 1;\n        this.curveFitter = new StrokeSmoother(startPoint, minFitAllowed, maxFitAllowed, (curve) => this.addCurve(curve));\n        this.averageWidth = startPoint.width;\n        this.bbox = new Rect2(this.startPoint.pos.x, this.startPoint.pos.y, 0, 0);\n    }\n    getBBox() {\n        return this.bbox;\n    }\n    getRenderingStyle() {\n        return {\n            fill: Color4.transparent,\n            stroke: {\n                color: this.startPoint.color,\n                width: this.roundDistance(this.averageWidth),\n            },\n        };\n    }\n    previewCurrentPath() {\n        const path = this.parts.slice();\n        const commands = [...path, ...this.curveToPathCommands(this.curveFitter.preview())];\n        const startPoint = this.startPoint.pos;\n        return {\n            startPoint,\n            commands,\n            style: this.getRenderingStyle(),\n        };\n    }\n    previewFullPath() {\n        const preview = this.previewCurrentPath();\n        if (preview) {\n            return [preview];\n        }\n        return null;\n    }\n    previewStroke() {\n        const pathPreview = this.previewFullPath();\n        if (pathPreview) {\n            return new Stroke(pathPreview);\n        }\n        return null;\n    }\n    preview(renderer) {\n        const paths = this.previewFullPath();\n        if (paths) {\n            const approxBBox = this.viewport.visibleRect;\n            renderer.startObject(approxBBox);\n            for (const path of paths) {\n                renderer.drawPath(path);\n            }\n            renderer.endObject();\n        }\n    }\n    build() {\n        this.curveFitter.finalizeCurrentCurve();\n        return this.previewStroke();\n    }\n    getMinFit() {\n        let minFit = Math.min(this.minFitAllowed, this.averageWidth / 3);\n        if (minFit < 1e-10) {\n            minFit = this.minFitAllowed;\n        }\n        return minFit;\n    }\n    roundPoint(point) {\n        const minFit = this.getMinFit();\n        return Viewport.roundPoint(point, minFit);\n    }\n    roundDistance(dist) {\n        const minFit = this.getMinFit();\n        return Viewport.roundPoint(dist, minFit);\n    }\n    curveToPathCommands(curve) {\n        // Case where no points have been added\n        if (!curve) {\n            // Don't create a circle around the initial point if the stroke has more than one point.\n            if (!this.isFirstSegment) {\n                return [];\n            }\n            // Make the circle small -- because of the stroke style, we'll be drawing a stroke around it.\n            const width = Viewport.roundPoint(this.averageWidth / 10, Math.min(this.minFitAllowed, this.averageWidth / 10));\n            const center = this.roundPoint(this.startPoint.pos);\n            // Start on the right, cycle clockwise:\n            //    |\n            //  ----- ←\n            //    |\n            // Draw a circle-ish shape around the start point\n            return [\n                {\n                    kind: PathCommandType.QuadraticBezierTo,\n                    controlPoint: center.plus(Vec2.of(width, width)),\n                    // Bottom of the circle\n                    //    |\n                    //  -----\n                    //    |\n                    //    ↑\n                    endPoint: center.plus(Vec2.of(0, width)),\n                },\n                {\n                    kind: PathCommandType.QuadraticBezierTo,\n                    controlPoint: center.plus(Vec2.of(-width, width)),\n                    endPoint: center.plus(Vec2.of(-width, 0)),\n                },\n                {\n                    kind: PathCommandType.QuadraticBezierTo,\n                    controlPoint: center.plus(Vec2.of(-width, -width)),\n                    endPoint: center.plus(Vec2.of(0, -width)),\n                },\n                {\n                    kind: PathCommandType.QuadraticBezierTo,\n                    controlPoint: center.plus(Vec2.of(width, -width)),\n                    endPoint: center.plus(Vec2.of(width, 0)),\n                },\n            ];\n        }\n        const result = [];\n        if (this.isFirstSegment) {\n            result.push({\n                kind: PathCommandType.MoveTo,\n                point: this.roundPoint(curve.startPoint),\n            });\n        }\n        result.push({\n            kind: PathCommandType.QuadraticBezierTo,\n            controlPoint: this.roundPoint(curve.controlPoint),\n            endPoint: this.roundPoint(curve.endPoint),\n        });\n        return result;\n    }\n    addCurve(curve) {\n        const parts = this.curveToPathCommands(curve);\n        this.parts.push(...parts);\n        if (this.isFirstSegment) {\n            this.isFirstSegment = false;\n        }\n    }\n    addPoint(newPoint) {\n        this.curveFitter.addPoint(newPoint);\n        this.widthAverageNumSamples++;\n        this.averageWidth =\n            (this.averageWidth * (this.widthAverageNumSamples - 1)) / this.widthAverageNumSamples +\n                newPoint.width / this.widthAverageNumSamples;\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InputMapper_listener;\n/**\n * Accepts input events and emits input events.\n */\nclass InputMapper {\n    constructor() {\n        _InputMapper_listener.set(this, null);\n    }\n    // @internal\n    setEmitListener(listener) {\n        if (listener && typeof listener === 'object') {\n            __classPrivateFieldSet(this, _InputMapper_listener, (event) => {\n                return listener.onEvent(event) ?? false;\n            }, \"f\");\n        }\n        else {\n            __classPrivateFieldSet(this, _InputMapper_listener, listener, \"f\");\n        }\n    }\n    emit(event) {\n        return __classPrivateFieldGet(this, _InputMapper_listener, \"f\")?.call(this, event) ?? false;\n    }\n}\n_InputMapper_listener = new WeakMap();\nexport default InputMapper;\n", "import  { InputEvtType, isPointerEvt, }  from '../../inputEvents.mjs';\nimport  InputMapper  from './InputMapper.mjs';\nimport { Vec2 } from '@js-draw/math';\nimport  untilNextAnimationFrame  from '../../util/untilNextAnimationFrame.mjs';\nvar StabilizerType;\n(function (StabilizerType) {\n    StabilizerType[StabilizerType[\"IntertialStabilizer\"] = 0] = \"IntertialStabilizer\";\n})(StabilizerType || (StabilizerType = {}));\nconst defaultOptions = {\n    kind: StabilizerType.IntertialStabilizer,\n    mass: 0.4, // kg\n    springConstant: 100.0, // N/m\n    frictionCoefficient: 0.28,\n    maxPointDist: 10, // screen units\n    inertiaFraction: 0.75,\n    minSimilarityToFinalize: 0.0,\n    velocityDecayFactor: 0.1,\n};\n// Stabilizes input for a single cursor\nclass StylusInputStabilizer {\n    constructor(\n    // The initial starting point of the pointer.\n    start, \n    // Emits a pointer motion event, returns true if the event was handled.\n    updatePointer, options) {\n        this.updatePointer = updatePointer;\n        this.options = options;\n        this.runLoop = true;\n        this.lastUpdateTime = 0;\n        this.velocity = Vec2.zero;\n        this.strokePoint = start;\n        this.targetPoint = start;\n        this.targetInterval = 10; // ms\n        void this.loop();\n    }\n    async loop() {\n        this.lastUpdateTime = performance.now();\n        while (this.runLoop) {\n            this.update(false);\n            await untilNextAnimationFrame();\n        }\n    }\n    setTarget(point) {\n        this.targetPoint = point;\n    }\n    getNextVelocity(deltaTimeMs) {\n        const toTarget = this.targetPoint.minus(this.strokePoint);\n        const springForce = toTarget.times(this.options.springConstant);\n        const gravityAccel = 10;\n        const normalForceMagnitude = this.options.mass * gravityAccel;\n        const frictionForce = this.velocity\n            .normalizedOrZero()\n            .times(-this.options.frictionCoefficient * normalForceMagnitude);\n        const acceleration = springForce.plus(frictionForce).times(1 / this.options.mass);\n        const decayFactor = this.options.velocityDecayFactor;\n        const springVelocity = this.velocity\n            .times(1 - decayFactor)\n            .plus(acceleration.times(deltaTimeMs / 1000));\n        // An alternate velocity that goes directly towards the target.\n        const toTargetVelocity = toTarget.normalizedOrZero().times(springVelocity.length());\n        return toTargetVelocity.lerp(springVelocity, this.options.inertiaFraction);\n    }\n    update(force) {\n        const nowTime = performance.now();\n        const deltaTime = nowTime - this.lastUpdateTime;\n        const reachedTarget = this.strokePoint.eq(this.targetPoint);\n        if (deltaTime > this.targetInterval || force) {\n            if (!reachedTarget) {\n                let velocity;\n                let deltaX;\n                let parts = 1;\n                do {\n                    velocity = this.getNextVelocity(deltaTime / parts);\n                    deltaX = velocity.times(deltaTime / 1000);\n                    parts++;\n                } while (deltaX.magnitude() > this.options.maxPointDist && parts < 10);\n                for (let i = 0; i < parts; i++) {\n                    this.velocity = this.getNextVelocity(deltaTime / parts);\n                    deltaX = this.velocity.times(deltaTime / 1000);\n                    this.strokePoint = this.strokePoint.plus(deltaX);\n                    // Allows the last updatePointer to be returned.\n                    if (i < parts - 1) {\n                        this.updatePointer(this.strokePoint, nowTime);\n                    }\n                }\n            }\n            // Even if we have reached the target, ensure that lastUpdateTime is updated\n            // (prevent large deltaTime).\n            this.lastUpdateTime = nowTime;\n            if (force || !reachedTarget) {\n                return this.updatePointer(this.strokePoint, nowTime);\n            }\n        }\n        return false;\n    }\n    /** Finalizes the current stroke. */\n    finish() {\n        this.runLoop = false;\n        const toTarget = this.targetPoint.minus(this.strokePoint);\n        if (this.velocity.dot(toTarget) > this.options.minSimilarityToFinalize) {\n            // Connect the stroke to its end point\n            this.updatePointer(this.targetPoint, performance.now());\n        }\n    }\n    cancel() {\n        this.runLoop = false;\n    }\n}\nexport default class InputStabilizer extends InputMapper {\n    constructor(viewport, options = defaultOptions) {\n        super();\n        this.viewport = viewport;\n        this.options = options;\n        this.stabilizer = null;\n        this.lastPointerEvent = null;\n    }\n    mapPointerEvent(event) {\n        // Don't store the last pointer event for use with pressure/button data --\n        // this information can be very different for a pointerup event.\n        if (isPointerEvt(event) && event.kind !== InputEvtType.PointerUpEvt) {\n            this.lastPointerEvent = event;\n        }\n        // Only apply smoothing if there is a single pointer.\n        if (event.kind === InputEvtType.GestureCancelEvt ||\n            event.allPointers.length > 1 ||\n            this.stabilizer === null) {\n            return this.emit(event);\n        }\n        this.stabilizer.setTarget(event.current.screenPos);\n        if (event.kind === InputEvtType.PointerMoveEvt) {\n            return this.stabilizer.update(true);\n        }\n        else if (event.kind === InputEvtType.PointerUpEvt) {\n            this.stabilizer.finish();\n            return this.emit(event);\n        }\n        else {\n            return this.emit(event);\n        }\n    }\n    // Assumes that there is exactly one pointer that is currently down.\n    emitPointerMove(screenPoint, timeStamp) {\n        if (!this.lastPointerEvent) {\n            return false;\n        }\n        const pointer = this.lastPointerEvent.current\n            .withScreenPosition(screenPoint, this.viewport)\n            .withTimestamp(timeStamp);\n        const event = {\n            kind: InputEvtType.PointerMoveEvt,\n            current: pointer,\n            allPointers: [pointer],\n        };\n        const handled = this.emit(event);\n        return handled;\n    }\n    onEvent(event) {\n        if (isPointerEvt(event) || event.kind === InputEvtType.GestureCancelEvt) {\n            if (event.kind === InputEvtType.PointerDownEvt) {\n                if (this.stabilizer === null) {\n                    this.stabilizer = new StylusInputStabilizer(event.current.screenPos, (screenPoint, timeStamp) => this.emitPointerMove(screenPoint, timeStamp), this.options);\n                }\n                else if (event.allPointers.length > 1) {\n                    // Do not attempt to stabilize multiple pointers.\n                    this.stabilizer.cancel();\n                    this.stabilizer = null;\n                }\n            }\n            const handled = this.mapPointerEvent(event);\n            if (event.kind === InputEvtType.PointerUpEvt ||\n                event.kind === InputEvtType.GestureCancelEvt) {\n                this.stabilizer?.cancel();\n                this.stabilizer = null;\n            }\n            return handled;\n        }\n        return this.emit(event);\n    }\n    static fromEditor(editor) {\n        return new InputStabilizer(editor.viewport);\n    }\n}\n", "import { Vec2 } from '@js-draw/math';\nexport const defaultStationaryDetectionConfig = {\n    maxSpeed: 8.5, // screenPx/s\n    maxRadius: 11, // screenPx\n    minTimeSeconds: 0.5, // s\n};\nexport default class StationaryPenDetector {\n    // Only handles one pen. As such, `startPointer` should be the same device/finger\n    // as `updatedPointer` in `onPointerMove`.\n    //\n    // A new `StationaryPenDetector` should be created for each gesture.\n    constructor(startPointer, config, onStationary) {\n        this.config = config;\n        this.onStationary = onStationary;\n        this.timeout = null;\n        this.stationaryStartPointer = startPointer;\n        this.lastPointer = startPointer;\n        this.averageVelocity = Vec2.zero;\n        this.setStationaryTimeout(this.config.minTimeSeconds * 1000);\n    }\n    // Returns true if stationary\n    onPointerMove(currentPointer) {\n        if (!this.stationaryStartPointer) {\n            // Destoroyed\n            return;\n        }\n        if (currentPointer.id !== this.stationaryStartPointer.id) {\n            return false;\n        }\n        // dx: \"Δx\" Displacement from last.\n        const dxFromLast = currentPointer.screenPos.minus(this.lastPointer.screenPos);\n        const dxFromStationaryStart = currentPointer.screenPos.minus(this.stationaryStartPointer.screenPos);\n        // dt: Delta time:\n        // /1000: Convert to s.\n        let dtFromLast = (currentPointer.timeStamp - this.lastPointer.timeStamp) / 1000; // s\n        // Don't divide by zero\n        if (dtFromLast === 0) {\n            dtFromLast = 1;\n        }\n        const currentVelocity = dxFromLast.times(1 / dtFromLast); // px/s\n        // Slight smoothing of the velocity to prevent input jitter from affecting the\n        // velocity too significantly.\n        this.averageVelocity = this.averageVelocity.lerp(currentVelocity, 0.5); // px/s\n        const dtFromStart = currentPointer.timeStamp - this.stationaryStartPointer.timeStamp; // ms\n        const movedOutOfRadius = dxFromStationaryStart.length() > this.config.maxRadius;\n        this.hasMovedOutOfRadius ||= movedOutOfRadius;\n        // If not stationary\n        if (movedOutOfRadius ||\n            this.averageVelocity.length() > this.config.maxSpeed ||\n            dtFromStart < this.config.minTimeSeconds) {\n            this.stationaryStartPointer = currentPointer;\n            this.lastPointer = currentPointer;\n            this.setStationaryTimeout(this.config.minTimeSeconds * 1000);\n            return false;\n        }\n        const stationaryTimeoutMs = this.config.minTimeSeconds * 1000 - dtFromStart;\n        this.lastPointer = currentPointer;\n        return stationaryTimeoutMs <= 0;\n    }\n    onPointerUp(pointer) {\n        if (pointer.id !== this.stationaryStartPointer?.id) {\n            this.cancelStationaryTimeout();\n        }\n    }\n    destroy() {\n        this.cancelStationaryTimeout();\n        this.stationaryStartPointer = null;\n    }\n    getHasMovedOutOfRadius() {\n        return this.hasMovedOutOfRadius;\n    }\n    cancelStationaryTimeout() {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    }\n    setStationaryTimeout(timeoutMs) {\n        if (this.timeout !== null) {\n            return;\n        }\n        if (timeoutMs <= 0) {\n            this.onStationary(this.lastPointer);\n        }\n        else {\n            this.timeout = setTimeout(() => {\n                this.timeout = null;\n                if (!this.stationaryStartPointer) {\n                    // Destroyed\n                    return;\n                }\n                const timeSinceStationaryStart = performance.now() - this.stationaryStartPointer.timeStamp;\n                const timeRemaining = this.config.minTimeSeconds * 1000 - timeSinceStationaryStart;\n                if (timeRemaining <= 0) {\n                    this.onStationary(this.lastPointer);\n                }\n                else {\n                    this.setStationaryTimeout(timeRemaining);\n                }\n            }, timeoutMs);\n        }\n    }\n}\n", "import { Color4 } from '@js-draw/math';\nimport  EditorImage  from '../image/EditorImage.mjs';\nimport  { PointerDevice }  from '../Pointer.mjs';\nimport  { makeFreehandLineBuilder }  from '../components/builders/FreehandLineBuilder.mjs';\nimport  { EditorEventType }  from '../types.mjs';\nimport  BaseTool  from './BaseTool.mjs';\nimport  { undoKeyboardShortcutId }  from './keybindings.mjs';\nimport  { decreaseSizeKeyboardShortcutId, increaseSizeKeyboardShortcutId }  from './keybindings.mjs';\nimport  InputStabilizer  from './InputFilter/InputStabilizer.mjs';\nimport  { ReactiveValue }  from '../util/ReactiveValue.mjs';\nimport  StationaryPenDetector, { defaultStationaryDetectionConfig, }  from './util/StationaryPenDetector.mjs';\n/**\n * A tool that allows drawing shapes and freehand lines.\n *\n * To change the type of shape drawn by the pen (e.g. to switch to the rectangle\n * pen type), see {@link setStrokeFactory}.\n */\nexport default class Pen extends BaseTool {\n    constructor(editor, description, style) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        this.builder = null;\n        this.lastPoint = null;\n        this.startPoint = null;\n        this.currentDeviceType = null;\n        this.currentPointerId = null;\n        this.shapeAutocompletionEnabled = false;\n        this.pressureSensitivityEnabled = true;\n        this.autocorrectedShape = null;\n        this.lastAutocorrectedShape = null;\n        this.removedAutocorrectedShapeTime = 0;\n        this.stationaryDetector = null;\n        this.styleValue = ReactiveValue.fromInitialValue({\n            factory: makeFreehandLineBuilder,\n            color: Color4.blue,\n            thickness: 4,\n            ...style,\n        });\n        this.styleValue.onUpdateAndNow((newValue) => {\n            this.style = newValue;\n            this.noteUpdated();\n        });\n    }\n    getPressureMultiplier() {\n        const thickness = this.style.thickness;\n        return (1 / this.editor.viewport.getScaleFactor()) * thickness;\n    }\n    // Converts a `pointer` to a `StrokeDataPoint`.\n    toStrokePoint(pointer) {\n        const minPressure = 0.3;\n        const defaultPressure = 0.5; // https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pressure#value\n        let pressure = Math.max(pointer.pressure ?? 1.0, minPressure);\n        if (!isFinite(pressure)) {\n            console.warn('Non-finite pressure!', pointer);\n            pressure = minPressure;\n        }\n        console.assert(isFinite(pointer.canvasPos.length()), 'Non-finite canvas position!');\n        console.assert(isFinite(pointer.screenPos.length()), 'Non-finite screen position!');\n        console.assert(isFinite(pointer.timeStamp), 'Non-finite timeStamp on pointer!');\n        const pos = pointer.canvasPos;\n        if (!this.getPressureSensitivityEnabled()) {\n            pressure = defaultPressure;\n        }\n        return {\n            pos,\n            width: pressure * this.getPressureMultiplier(),\n            color: this.style.color,\n            time: pointer.timeStamp,\n        };\n    }\n    // Displays the stroke that is currently being built with the display's `wetInkRenderer`.\n    previewStroke() {\n        this.editor.clearWetInk();\n        const wetInkRenderer = this.editor.display.getWetInkRenderer();\n        if (this.autocorrectedShape) {\n            const visibleRect = this.editor.viewport.visibleRect;\n            this.autocorrectedShape.render(wetInkRenderer, visibleRect);\n        }\n        else {\n            this.builder?.preview(wetInkRenderer);\n        }\n    }\n    // Throws if no stroke builder exists.\n    addPointToStroke(point) {\n        if (!this.builder) {\n            throw new Error('No stroke is currently being generated.');\n        }\n        this.builder.addPoint(point);\n        this.lastPoint = point;\n        this.previewStroke();\n    }\n    onPointerDown(event) {\n        // Avoid canceling an existing stroke\n        if (this.builder && !this.eventCanCancelStroke(event)) {\n            return true;\n        }\n        const { current, allPointers } = event;\n        const isEraser = current.device === PointerDevice.Eraser;\n        const isPen = current.device === PointerDevice.Pen;\n        // Always start strokes if the current device is a pen. This is useful in the case\n        // where an accidental touch gesture from a user's hand is ongoing. This gesture\n        // should not prevent the user from drawing.\n        if ((allPointers.length === 1 && !isEraser) || isPen) {\n            this.startPoint = this.toStrokePoint(current);\n            this.builder = this.style.factory(this.startPoint, this.editor.viewport);\n            this.currentDeviceType = current.device;\n            this.currentPointerId = current.id;\n            if (this.shapeAutocompletionEnabled) {\n                this.stationaryDetector = new StationaryPenDetector(current, defaultStationaryDetectionConfig, (pointer) => this.autocorrectShape(pointer));\n            }\n            else {\n                this.stationaryDetector = null;\n            }\n            this.lastAutocorrectedShape = null;\n            this.removedAutocorrectedShapeTime = 0;\n            return true;\n        }\n        return false;\n    }\n    eventCanCancelStroke(event) {\n        // If there has been a delay since the last input event,\n        // it's always okay to cancel\n        const lastInputTime = this.lastPoint?.time ?? 0;\n        if (event.current.timeStamp - lastInputTime > 1000) {\n            return true;\n        }\n        const isPenStroke = this.currentDeviceType === PointerDevice.Pen;\n        const isTouchEvent = event.current.device === PointerDevice.Touch;\n        // Don't allow pen strokes to be cancelled by touch events.\n        if (isPenStroke && isTouchEvent) {\n            return false;\n        }\n        return true;\n    }\n    eventCanBeDeliveredToNonActiveTool(event) {\n        return this.eventCanCancelStroke(event);\n    }\n    onPointerMove({ current }) {\n        if (!this.builder)\n            return;\n        if (current.device !== this.currentDeviceType)\n            return;\n        if (current.id !== this.currentPointerId)\n            return;\n        const isStationary = this.stationaryDetector?.onPointerMove(current);\n        if (!isStationary) {\n            this.addPointToStroke(this.toStrokePoint(current));\n            if (this.autocorrectedShape) {\n                this.removedAutocorrectedShapeTime = performance.now();\n                this.autocorrectedShape = null;\n                this.editor.announceForAccessibility(this.editor.localization.autocorrectionCanceled);\n            }\n        }\n    }\n    onPointerUp({ current }) {\n        if (!this.builder)\n            return false;\n        if (current.id !== this.currentPointerId) {\n            // this.builder still exists, so we're handling events from another\n            // device type.\n            return true;\n        }\n        this.stationaryDetector?.onPointerUp(current);\n        // onPointerUp events can have zero pressure. Use the last pressure instead.\n        const currentPoint = this.toStrokePoint(current);\n        const strokePoint = {\n            ...currentPoint,\n            width: this.lastPoint?.width ?? currentPoint.width,\n        };\n        this.addPointToStroke(strokePoint);\n        this.finalizeStroke();\n        return false;\n    }\n    onGestureCancel() {\n        this.builder = null;\n        this.editor.clearWetInk();\n        this.stationaryDetector?.destroy();\n        this.stationaryDetector = null;\n    }\n    removedAutocorrectedShapeRecently() {\n        return this.removedAutocorrectedShapeTime > performance.now() - 320;\n    }\n    async autocorrectShape(_lastPointer) {\n        if (!this.builder || !this.builder.autocorrectShape)\n            return;\n        if (!this.shapeAutocompletionEnabled)\n            return;\n        // If already corrected, do nothing\n        if (this.autocorrectedShape)\n            return;\n        // Activate stroke fitting\n        const correctedShape = await this.builder.autocorrectShape();\n        if (!this.builder || !correctedShape) {\n            return;\n        }\n        // Don't complete to empty shapes.\n        const bboxArea = correctedShape.getBBox().area;\n        if (bboxArea === 0 || !isFinite(bboxArea)) {\n            return;\n        }\n        const shapeDescription = correctedShape.description(this.editor.localization);\n        this.editor.announceForAccessibility(this.editor.localization.autocorrectedTo(shapeDescription));\n        this.autocorrectedShape = correctedShape;\n        this.lastAutocorrectedShape = correctedShape;\n        this.previewStroke();\n    }\n    finalizeStroke() {\n        if (this.builder) {\n            // If autocorrectedShape was cleared recently enough, it was\n            // probably by mistake. Reset it.\n            if (this.lastAutocorrectedShape && this.removedAutocorrectedShapeRecently()) {\n                this.autocorrectedShape = this.lastAutocorrectedShape;\n            }\n            const stroke = this.autocorrectedShape ?? this.builder.build();\n            this.previewStroke();\n            if (stroke.getBBox().area > 0) {\n                if (stroke === this.autocorrectedShape) {\n                    this.editor.announceForAccessibility(this.editor.localization.autocorrectedTo(stroke.description(this.editor.localization)));\n                }\n                const canFlatten = true;\n                const action = EditorImage.addComponent(stroke, canFlatten);\n                this.editor.dispatch(action);\n            }\n            else {\n                console.warn('Pen: Not adding empty stroke', stroke, 'to the canvas.');\n            }\n        }\n        this.builder = null;\n        this.lastPoint = null;\n        this.autocorrectedShape = null;\n        this.lastAutocorrectedShape = null;\n        this.editor.clearWetInk();\n        this.stationaryDetector?.destroy();\n        this.stationaryDetector = null;\n    }\n    noteUpdated() {\n        this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n            kind: EditorEventType.ToolUpdated,\n            tool: this,\n        });\n    }\n    setColor(color) {\n        if (color.toHexString() !== this.style.color.toHexString()) {\n            this.styleValue.set({\n                ...this.style,\n                color,\n            });\n        }\n    }\n    setThickness(thickness) {\n        if (thickness !== this.style.thickness) {\n            this.styleValue.set({\n                ...this.style,\n                thickness,\n            });\n        }\n    }\n    /**\n     * Changes the type of stroke created by the pen. The given `factory` can be one of the built-in\n     * stroke factories (e.g. {@link makeFreehandLineBuilder}) or a custom stroke factory.\n     *\n     * Example:\n     * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n     */\n    setStrokeFactory(factory) {\n        if (factory !== this.style.factory) {\n            this.styleValue.set({\n                ...this.style,\n                factory,\n            });\n        }\n    }\n    setHasStabilization(hasStabilization) {\n        const hasInputMapper = !!this.getInputMapper();\n        // TODO: Currently, this assumes that there is no other input mapper.\n        if (hasStabilization === hasInputMapper) {\n            return;\n        }\n        if (hasInputMapper) {\n            this.setInputMapper(null);\n        }\n        else {\n            this.setInputMapper(new InputStabilizer(this.editor.viewport));\n        }\n        this.noteUpdated();\n    }\n    setStrokeAutocorrectEnabled(enabled) {\n        if (enabled !== this.shapeAutocompletionEnabled) {\n            this.shapeAutocompletionEnabled = enabled;\n            this.noteUpdated();\n        }\n    }\n    getStrokeAutocorrectionEnabled() {\n        return this.shapeAutocompletionEnabled;\n    }\n    setPressureSensitivityEnabled(enabled) {\n        if (enabled !== this.pressureSensitivityEnabled) {\n            this.pressureSensitivityEnabled = enabled;\n            this.noteUpdated();\n        }\n    }\n    getPressureSensitivityEnabled() {\n        return this.pressureSensitivityEnabled;\n    }\n    getThickness() {\n        return this.style.thickness;\n    }\n    getColor() {\n        return this.style.color;\n    }\n    getStrokeFactory() {\n        return this.style.factory;\n    }\n    getStyleValue() {\n        return this.styleValue;\n    }\n    onKeyPress(event) {\n        const shortcuts = this.editor.shortcuts;\n        // Ctrl+Z: End the stroke so that it can be undone/redone.\n        const isCtrlZ = shortcuts.matchesShortcut(undoKeyboardShortcutId, event);\n        if (this.builder && isCtrlZ) {\n            this.finalizeStroke();\n            // Return false: Allow other listeners to handle the event (e.g.\n            // undo/redo).\n            return false;\n        }\n        let newThickness;\n        if (shortcuts.matchesShortcut(decreaseSizeKeyboardShortcutId, event)) {\n            newThickness = (this.getThickness() * 2) / 3;\n        }\n        else if (shortcuts.matchesShortcut(increaseSizeKeyboardShortcutId, event)) {\n            newThickness = (this.getThickness() * 3) / 2;\n        }\n        if (newThickness !== undefined) {\n            newThickness = Math.min(Math.max(1, newThickness), 256);\n            this.setThickness(newThickness);\n            return true;\n        }\n        return false;\n    }\n}\n", "// Connects a group of tools -- at most one tool in the group can be enabled.\nexport default class ToolEnabledGroup {\n    constructor() { }\n    notifyEnabled(tool) {\n        if (tool !== this.activeTool) {\n            this.activeTool?.setEnabled(false);\n            this.activeTool = tool;\n        }\n    }\n}\n", "// Returns the description of all given elements, if identical, otherwise,\n// returns null.\nexport default (localizationTable, elems) => {\n    if (elems.length === 0) {\n        return null;\n    }\n    const description = elems[0].description(localizationTable);\n    for (const elem of elems) {\n        if (elem.description(localizationTable) !== description) {\n            return null;\n        }\n    }\n    return description;\n};\n", "import  AbstractComponent  from '../components/AbstractComponent.mjs';\nimport  describeComponentList  from '../components/util/describeComponentList.mjs';\nimport  EditorImage  from '../image/EditorImage.mjs';\nimport  SerializableCommand  from './SerializableCommand.mjs';\n/**\n * Removes the given {@link AbstractComponent}s from the image.\n *\n * **Example**:\n * ```ts,runnable\n * import { Editor, Erase, uniteCommands, Color4, Path, Stroke, Rect2, pathToRenderable } from 'js-draw';\n *\n * const editor = new Editor(document.body);\n * editor.addToolbar();\n *\n * // Add a large number of strokes\n * const commands = [];\n * for (let x = -20; x < 20; x++) {\n *   for (let y = 0; y < 60; y++) {\n *     const stroke = new Stroke([\n *       pathToRenderable(\n *         Path.fromString(`m${x * 5},${y * 5}l1,1`),\n *         { fill: Color4.transparent, stroke: {width: 2, color: Color4.ofRGB(x / 10, y / 10, 0.5)}} )\n *       ]);\n *     commands.push(editor.image.addElement(stroke));\n *   }\n * }\n * await editor.dispatch(uniteCommands(commands, 100));\n *\n * ---visible---\n * // Given some editor...\n *\n * // Find all elements intersecting the rectangle with top left (-10,-30) and\n * // (width,height)=(50,100).\n * const elems = editor.image.getComponentsIntersecting(\n * \tnew Rect2(-10, -30, 50, 100)\n * );\n *\n * // Create a command that erases [elems] when applied\n * const eraseElemsCmd = new Erase(elems);\n *\n * // Apply the command (and make it undoable)\n * editor.dispatch(eraseElemsCmd);\n * ```\n */\nclass Erase extends SerializableCommand {\n    constructor(toRemove) {\n        super('erase');\n        // Clone the list\n        this.toRemove = toRemove.map((elem) => elem);\n        this.applied = false;\n    }\n    apply(editor) {\n        for (const part of this.toRemove) {\n            const parent = editor.image.findParent(part);\n            if (parent) {\n                parent.remove();\n                editor.image.onDestroyElement(part);\n            }\n        }\n        this.applied = true;\n        editor.queueRerender();\n    }\n    unapply(editor) {\n        for (const part of this.toRemove) {\n            if (!editor.image.findParent(part)) {\n                EditorImage.addComponent(part).apply(editor);\n            }\n        }\n        this.applied = false;\n        editor.queueRerender();\n    }\n    onDrop(editor) {\n        if (this.applied) {\n            for (const part of this.toRemove) {\n                editor.image.onDestroyElement(part);\n            }\n        }\n    }\n    description(_editor, localizationTable) {\n        if (this.toRemove.length === 0) {\n            return localizationTable.erasedNoElements;\n        }\n        const description = describeComponentList(localizationTable, this.toRemove) ?? localizationTable.elements;\n        return localizationTable.eraseAction(description, this.toRemove.length);\n    }\n    serializeToJSON() {\n        // If applied, the elements can't be fetched from the image because they're\n        // erased. Serialize and return the elements themselves.\n        const elems = this.toRemove.map((elem) => elem.serialize());\n        return elems;\n    }\n}\n(() => {\n    SerializableCommand.register('erase', (json, editor) => {\n        if (!Array.isArray(json)) {\n            throw new Error('seralized erase data must be an array');\n        }\n        const elems = json.map((elemData) => {\n            const componentId = typeof elemData === 'string' ? elemData : `${elemData.id}`;\n            const component = editor.image.lookupElement(componentId) ?? AbstractComponent.deserialize(elemData);\n            return component;\n        });\n        return new Erase(elems);\n    });\n})();\nexport default Erase;\n", "/**\n * Resolves when all given promises have resolved. If no promises are given,\n * does not return a Promise.\n *\n * If all elements of `results` are known to be `Promise`s, use `Promise.all`.\n */\nconst waitForAll = (results) => {\n    // If any are Promises...\n    if (results.some((command) => command && command['then'])) {\n        // Wait for all commands to finish.\n        return (Promise.all(results)\n            // Ensure we return a Promise<void> and not a Promise<void[]>\n            .then(() => { }));\n    }\n    return;\n};\nexport default waitForAll;\n", "import  waitForAll  from '../util/waitForAll.mjs';\nimport  Command  from './Command.mjs';\nimport  SerializableCommand  from './SerializableCommand.mjs';\nclass NonSerializableUnion extends Command {\n    constructor(commands, applyChunkSize, descriptionOverride) {\n        super();\n        this.commands = commands;\n        this.applyChunkSize = applyChunkSize;\n        this.descriptionOverride = descriptionOverride;\n    }\n    apply(editor) {\n        if (this.applyChunkSize === undefined) {\n            const results = this.commands.map((cmd) => cmd.apply(editor));\n            return waitForAll(results);\n        }\n        else {\n            return editor.asyncApplyCommands(this.commands, this.applyChunkSize);\n        }\n    }\n    unapply(editor) {\n        const commands = [...this.commands];\n        commands.reverse();\n        if (this.applyChunkSize === undefined) {\n            const results = commands.map((cmd) => cmd.unapply(editor));\n            return waitForAll(results);\n        }\n        else {\n            return editor.asyncUnapplyCommands(commands, this.applyChunkSize, false);\n        }\n    }\n    onDrop(editor) {\n        this.commands.forEach((command) => command.onDrop(editor));\n    }\n    description(editor, localizationTable) {\n        if (this.descriptionOverride) {\n            return this.descriptionOverride;\n        }\n        const descriptions = [];\n        let lastDescription = null;\n        let duplicateDescriptionCount = 0;\n        let handledCommandCount = 0;\n        for (const part of this.commands) {\n            const description = part.description(editor, localizationTable);\n            if (description !== lastDescription && lastDescription !== null) {\n                descriptions.push(localizationTable.unionOf(lastDescription, duplicateDescriptionCount));\n                lastDescription = null;\n                duplicateDescriptionCount = 0;\n            }\n            duplicateDescriptionCount++;\n            handledCommandCount++;\n            lastDescription ??= description;\n            // Long descriptions aren't very useful to the user.\n            const maxDescriptionLength = 12;\n            if (descriptions.length > maxDescriptionLength) {\n                break;\n            }\n        }\n        if (duplicateDescriptionCount > 1) {\n            descriptions.push(localizationTable.unionOf(lastDescription, duplicateDescriptionCount));\n        }\n        else if (duplicateDescriptionCount === 1) {\n            descriptions.push(lastDescription);\n        }\n        if (handledCommandCount < this.commands.length) {\n            descriptions.push(localizationTable.andNMoreCommands(this.commands.length - handledCommandCount));\n        }\n        return descriptions.join(', ');\n    }\n}\nclass SerializableUnion extends SerializableCommand {\n    constructor(commands, applyChunkSize, descriptionOverride) {\n        super('union');\n        this.commands = commands;\n        this.applyChunkSize = applyChunkSize;\n        this.descriptionOverride = descriptionOverride;\n        this.nonserializableCommand = new NonSerializableUnion(commands, applyChunkSize, descriptionOverride);\n    }\n    serializeToJSON() {\n        if (this.serializedData) {\n            return this.serializedData;\n        }\n        return {\n            applyChunkSize: this.applyChunkSize,\n            data: this.commands.map((command) => command.serialize()),\n            description: this.descriptionOverride,\n        };\n    }\n    apply(editor) {\n        // Cache this' serialized form -- applying this may change how commands serialize.\n        this.serializedData = this.serializeToJSON();\n        return this.nonserializableCommand.apply(editor);\n    }\n    unapply(editor) {\n        return this.nonserializableCommand.unapply(editor);\n    }\n    onDrop(editor) {\n        this.nonserializableCommand.onDrop(editor);\n    }\n    description(editor, localizationTable) {\n        return this.nonserializableCommand.description(editor, localizationTable);\n    }\n}\n/**\n * Creates a single command from `commands`. This is useful when undoing should undo *all* commands\n * in `commands` at once, rather than one at a time.\n *\n * @example\n *\n * ```ts,runnable\n * import { Editor, pathToRenderable, Stroke, uniteCommands } from 'js-draw';\n * import { Path, Color4 } from '@js-draw/math';\n *\n * const editor = new Editor(document.body);\n * editor.addToolbar();\n *\n * // Create strokes!\n * const strokes = [];\n * for (let i = 0; i < 10; i++) {\n *   const renderablePath = pathToRenderable(\n *     Path.fromString(`M0,${i * 10} L100,100 L300,30 z`),\n *     { fill: Color4.transparent, stroke: { color: Color4.red, width: 1, } }\n *   );\n *   strokes.push(new Stroke([ renderablePath ]));\n * }\n *\n * // Convert to commands\n * const addStrokesCommands = strokes.map(stroke => editor.image.addElement(stroke));\n *\n * // Apply all as a single undoable command (try applying each in a loop instead!)\n * await editor.dispatch(uniteCommands(addStrokesCommands));\n *\n * // The second parameter to uniteCommands is for very large numbers of commands, when\n * // applying them shouldn't be done all at once (which would block the UI).\n *\n * // The second parameter to uniteCommands is for very large numbers of commands, when\n * // applying them shouldn't be done all at once (which would block the UI).\n * ```\n */\nconst uniteCommands = (commands, options) => {\n    let allSerializable = true;\n    for (const command of commands) {\n        if (!(command instanceof SerializableCommand)) {\n            allSerializable = false;\n            break;\n        }\n    }\n    let applyChunkSize;\n    let description;\n    if (typeof options === 'number') {\n        applyChunkSize = options;\n    }\n    else {\n        applyChunkSize = options?.applyChunkSize;\n        description = options?.description;\n    }\n    if (!allSerializable) {\n        return new NonSerializableUnion(commands, applyChunkSize, description);\n    }\n    else {\n        const castedCommands = commands;\n        return new SerializableUnion(castedCommands, applyChunkSize, description);\n    }\n};\nSerializableCommand.register('union', (data, editor) => {\n    if (typeof data.data.length !== 'number') {\n        throw new Error('Unions of commands must serialize to lists of serialization data.');\n    }\n    const applyChunkSize = data.applyChunkSize;\n    if (typeof applyChunkSize !== 'number' && applyChunkSize !== undefined) {\n        throw new Error('serialized applyChunkSize is neither undefined nor a number.');\n    }\n    const description = typeof data.description === 'string' ? data.description : undefined;\n    const commands = [];\n    for (const part of data.data) {\n        commands.push(SerializableCommand.deserialize(part, editor));\n    }\n    return uniteCommands(commands, { applyChunkSize, description });\n});\nexport default uniteCommands;\n", "import  { EditorEventType }  from '../types.mjs';\nimport  BaseTool  from './BaseTool.mjs';\nimport { Vec2, LineSegment2, Color4, Rect2, Path } from '@js-draw/math';\nimport  Erase  from '../commands/Erase.mjs';\nimport  { PointerDevice }  from '../Pointer.mjs';\nimport  { decreaseSizeKeyboardShortcutId, increaseSizeKeyboardShortcutId }  from './keybindings.mjs';\nimport  { ReactiveValue }  from '../util/ReactiveValue.mjs';\nimport  EditorImage  from '../image/EditorImage.mjs';\nimport  uniteCommands  from '../commands/uniteCommands.mjs';\nimport  { pathToRenderable }  from '../rendering/RenderablePathSpec.mjs';\nexport var EraserMode;\n(function (EraserMode) {\n    EraserMode[\"PartialStroke\"] = \"partial-stroke\";\n    EraserMode[\"FullStroke\"] = \"full-stroke\";\n})(EraserMode || (EraserMode = {}));\n/** Handles switching from other primary tools to the eraser and back */\nclass EraserSwitcher extends BaseTool {\n    constructor(editor, eraser) {\n        super(editor.notifier, editor.localization.changeTool);\n        this.editor = editor;\n        this.eraser = eraser;\n    }\n    onPointerDown(event) {\n        if (event.allPointers.length === 1 && event.current.device === PointerDevice.Eraser) {\n            const toolController = this.editor.toolController;\n            const enabledPrimaryTools = toolController\n                .getPrimaryTools()\n                .filter((tool) => tool.isEnabled());\n            if (enabledPrimaryTools.length) {\n                this.previousEnabledTool = enabledPrimaryTools[0];\n            }\n            else {\n                this.previousEnabledTool = null;\n            }\n            this.previousEraserEnabledState = this.eraser.isEnabled();\n            this.eraser.setEnabled(true);\n            if (this.eraser.onPointerDown(event)) {\n                return true;\n            }\n            else {\n                this.restoreOriginalTool();\n            }\n        }\n        return false;\n    }\n    onPointerMove(event) {\n        this.eraser.onPointerMove(event);\n    }\n    restoreOriginalTool() {\n        this.eraser.setEnabled(this.previousEraserEnabledState);\n        if (this.previousEnabledTool) {\n            this.previousEnabledTool.setEnabled(true);\n        }\n    }\n    onPointerUp(event) {\n        this.eraser.onPointerUp(event);\n        this.restoreOriginalTool();\n    }\n    onGestureCancel(event) {\n        this.eraser.onGestureCancel(event);\n        this.restoreOriginalTool();\n    }\n}\n/**\n * A tool that allows a user to erase parts of an image.\n */\nexport default class Eraser extends BaseTool {\n    constructor(editor, description, options) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        this.lastPoint = null;\n        this.isFirstEraseEvt = true;\n        this.toAdd = new Set();\n        // Commands that each remove one element\n        this.eraseCommands = [];\n        this.addCommands = [];\n        this.thickness = options?.thickness ?? 10;\n        this.thicknessValue = ReactiveValue.fromInitialValue(this.thickness);\n        this.thicknessValue.onUpdate((value) => {\n            this.thickness = value;\n            this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n                kind: EditorEventType.ToolUpdated,\n                tool: this,\n            });\n        });\n        this.modeValue = ReactiveValue.fromInitialValue(options?.mode ?? EraserMode.FullStroke);\n        this.modeValue.onUpdate((_value) => {\n            this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n                kind: EditorEventType.ToolUpdated,\n                tool: this,\n            });\n        });\n    }\n    /**\n     * @returns a tool that briefly enables the eraser when a physical eraser is used.\n     * This tool should be added to the tool list after the primary tools.\n     */\n    makeEraserSwitcherTool() {\n        return new EraserSwitcher(this.editor, this);\n    }\n    clearPreview() {\n        this.editor.clearWetInk();\n    }\n    getSizeOnCanvas() {\n        return this.thickness / this.editor.viewport.getScaleFactor();\n    }\n    drawPreviewAt(point) {\n        this.clearPreview();\n        const size = this.getSizeOnCanvas();\n        const renderer = this.editor.display.getWetInkRenderer();\n        const rect = this.getEraserRect(point);\n        const rect2 = this.getEraserRect(this.lastPoint ?? point);\n        const fill = {\n            fill: Color4.transparent,\n            stroke: { width: size / 10, color: Color4.gray },\n        };\n        renderer.drawPath(pathToRenderable(Path.fromConvexHullOf([...rect.corners, ...rect2.corners]), fill));\n    }\n    /**\n     * @returns the eraser rectangle in canvas coordinates.\n     *\n     * For now, all erasers are rectangles or points.\n     */\n    getEraserRect(centerPoint) {\n        const size = this.getSizeOnCanvas();\n        const halfSize = Vec2.of(size / 2, size / 2);\n        return Rect2.fromCorners(centerPoint.minus(halfSize), centerPoint.plus(halfSize));\n    }\n    /** Erases in a line from the last point to the current. */\n    eraseTo(currentPoint) {\n        if (!this.isFirstEraseEvt && currentPoint.distanceTo(this.lastPoint) === 0) {\n            return;\n        }\n        this.isFirstEraseEvt = false;\n        // Currently only objects within eraserRect or that intersect a straight line\n        // from the center of the current rect to the previous are erased. TODO: Erase\n        // all objects as if there were pointerMove events between the two points.\n        const eraserRect = this.getEraserRect(currentPoint);\n        const line = new LineSegment2(this.lastPoint, currentPoint);\n        const region = Rect2.union(line.bbox, eraserRect);\n        const intersectingElems = this.editor.image\n            .getComponentsIntersecting(region)\n            .filter((component) => {\n            return component.intersects(line) || component.intersectsRect(eraserRect);\n        });\n        // Only erase components that could be selected (and thus interacted with)\n        // by the user.\n        const eraseableElems = intersectingElems.filter((elem) => elem.isSelectable());\n        if (this.modeValue.get() === EraserMode.FullStroke) {\n            // Remove any intersecting elements.\n            this.toRemove.push(...eraseableElems);\n            // Create new Erase commands for the now-to-be-erased elements and apply them.\n            const newPartialCommands = eraseableElems.map((elem) => new Erase([elem]));\n            newPartialCommands.forEach((cmd) => cmd.apply(this.editor));\n            this.eraseCommands.push(...newPartialCommands);\n        }\n        else {\n            const toErase = [];\n            const toAdd = [];\n            for (const targetElem of eraseableElems) {\n                toErase.push(targetElem);\n                // Completely delete items that can't be divided.\n                if (!targetElem.withRegionErased) {\n                    continue;\n                }\n                // Completely delete items that are completely or almost completely\n                // contained within the eraser.\n                const grownRect = eraserRect.grownBy(eraserRect.maxDimension / 3);\n                if (grownRect.containsRect(targetElem.getExactBBox())) {\n                    continue;\n                }\n                // Join the current and previous rectangles so that points between events are also\n                // erased.\n                const erasePath = Path.fromConvexHullOf([\n                    ...eraserRect.corners,\n                    ...this.getEraserRect(this.lastPoint ?? currentPoint).corners,\n                ].map((p) => this.editor.viewport.roundPoint(p)));\n                toAdd.push(...targetElem.withRegionErased(erasePath, this.editor.viewport));\n            }\n            const eraseCommand = new Erase(toErase);\n            const newAddCommands = toAdd.map((elem) => EditorImage.addComponent(elem));\n            eraseCommand.apply(this.editor);\n            newAddCommands.forEach((command) => command.apply(this.editor));\n            const finalToErase = [];\n            for (const item of toErase) {\n                if (this.toAdd.has(item)) {\n                    this.toAdd.delete(item);\n                }\n                else {\n                    finalToErase.push(item);\n                }\n            }\n            this.toRemove.push(...finalToErase);\n            for (const item of toAdd) {\n                this.toAdd.add(item);\n            }\n            this.eraseCommands.push(new Erase(finalToErase));\n            this.addCommands.push(...newAddCommands);\n        }\n        this.drawPreviewAt(currentPoint);\n        this.lastPoint = currentPoint;\n    }\n    onPointerDown(event) {\n        if (event.allPointers.length === 1 || event.current.device === PointerDevice.Eraser) {\n            this.lastPoint = event.current.canvasPos;\n            this.toRemove = [];\n            this.toAdd.clear();\n            this.isFirstEraseEvt = true;\n            this.drawPreviewAt(event.current.canvasPos);\n            return true;\n        }\n        return false;\n    }\n    onPointerMove(event) {\n        const currentPoint = event.current.canvasPos;\n        this.eraseTo(currentPoint);\n    }\n    onPointerUp(event) {\n        this.eraseTo(event.current.canvasPos);\n        const commands = [];\n        if (this.addCommands.length > 0) {\n            this.addCommands.forEach((cmd) => cmd.unapply(this.editor));\n            // Remove items from toAdd that are also present in toRemove -- adding, then\n            // removing these does nothing, and can break undo/redo.\n            for (const item of this.toAdd) {\n                if (this.toRemove.includes(item)) {\n                    this.toAdd.delete(item);\n                    this.toRemove = this.toRemove.filter((other) => other !== item);\n                }\n            }\n            for (const item of this.toRemove) {\n                if (this.toAdd.has(item)) {\n                    this.toAdd.delete(item);\n                    this.toRemove = this.toRemove.filter((other) => other !== item);\n                }\n            }\n            commands.push(...[...this.toAdd].map((a) => EditorImage.addComponent(a)));\n            this.addCommands = [];\n        }\n        if (this.eraseCommands.length > 0) {\n            // Undo commands for each individual component and unite into a single command.\n            this.eraseCommands.forEach((cmd) => cmd.unapply(this.editor));\n            this.eraseCommands = [];\n            const command = new Erase(this.toRemove);\n            commands.push(command);\n        }\n        if (commands.length === 1) {\n            this.editor.dispatch(commands[0]); // dispatch: Makes undo-able.\n        }\n        else {\n            this.editor.dispatch(uniteCommands(commands));\n        }\n        this.clearPreview();\n    }\n    onGestureCancel(_event) {\n        this.addCommands.forEach((cmd) => cmd.unapply(this.editor));\n        this.eraseCommands.forEach((cmd) => cmd.unapply(this.editor));\n        this.eraseCommands = [];\n        this.addCommands = [];\n        this.clearPreview();\n    }\n    onKeyPress(event) {\n        const shortcuts = this.editor.shortcuts;\n        let newThickness;\n        if (shortcuts.matchesShortcut(decreaseSizeKeyboardShortcutId, event)) {\n            newThickness = (this.getThickness() * 2) / 3;\n        }\n        else if (shortcuts.matchesShortcut(increaseSizeKeyboardShortcutId, event)) {\n            newThickness = (this.getThickness() * 3) / 2;\n        }\n        if (newThickness !== undefined) {\n            newThickness = Math.min(Math.max(1, newThickness), 200);\n            this.setThickness(newThickness);\n            return true;\n        }\n        return false;\n    }\n    /** Returns the side-length of the tip of this eraser. */\n    getThickness() {\n        return this.thickness;\n    }\n    /** Sets the side-length of this' tip. */\n    setThickness(thickness) {\n        this.thicknessValue.set(thickness);\n    }\n    /**\n     * Returns a {@link MutableReactiveValue} that can be used to watch\n     * this tool's thickness.\n     */\n    getThicknessValue() {\n        return this.thicknessValue;\n    }\n    /** @returns An object that allows switching between a full stroke and a partial stroke eraser. */\n    getModeValue() {\n        return this.modeValue;\n    }\n}\n", "import { Vec2, Rect2, Mat33, Color4 } from '@js-draw/math';\nimport  { cloneTextStyle, textStyleFromJSON, textStyleToJSON, }  from '../rendering/TextRenderingStyle.mjs';\nimport  AbstractComponent  from './AbstractComponent.mjs';\nimport  { createRestyleComponentCommand, }  from './RestylableComponent.mjs';\nconst componentTypeId = 'text';\nexport var TextTransformMode;\n(function (TextTransformMode) {\n    /** Absolutely positioned in both the X and Y dimensions. */\n    TextTransformMode[TextTransformMode[\"ABSOLUTE_XY\"] = 0] = \"ABSOLUTE_XY\";\n    /** Relatively positioned in both the X and Y dimensions. */\n    TextTransformMode[TextTransformMode[\"RELATIVE_XY\"] = 1] = \"RELATIVE_XY\";\n    /**Relatively positioned in the X direction, absolutely positioned in the Y direction. */\n    TextTransformMode[TextTransformMode[\"RELATIVE_X_ABSOLUTE_Y\"] = 2] = \"RELATIVE_X_ABSOLUTE_Y\";\n    /**Relatively positioned in the Y direction, absolutely positioned in the X direction. */\n    TextTransformMode[TextTransformMode[\"RELATIVE_Y_ABSOLUTE_X\"] = 3] = \"RELATIVE_Y_ABSOLUTE_X\";\n})(TextTransformMode || (TextTransformMode = {}));\nconst defaultTextStyle = {\n    fontFamily: 'sans',\n    size: 12,\n    renderingStyle: { fill: Color4.purple },\n};\n/**\n * Displays text.\n *\n * A `TextComponent` is a collection of `TextElement`s (`string`s or {@link TextComponent}s).\n *\n * **Example**:\n *\n * ```ts,runnable\n * import { Editor, TextComponent, Mat33, Vec2, Color4, TextRenderingStyle } from 'js-draw';\n * const editor = new Editor(document.body);\n * editor.dispatch(editor.setBackgroundStyle({ color: Color4.black, autoresize: true ));\n * ---visible---\n * /// Adding a simple TextComponent\n * ///------------------------------\n *\n * const positioning1 = Mat33.translation(Vec2.of(10, 10));\n * const style: TextRenderingStyle = {\n *     fontFamily: 'sans', size: 12, renderingStyle: { fill: Color4.green },\n * };\n *\n * editor.dispatch(\n *     editor.image.addComponent(new TextComponent(['Hello, world'], positioning1, style)),\n * );\n *\n *\n * /// Adding nested TextComponents\n * ///-----------------------------\n *\n * // Add another TextComponent that contains text and a TextComponent. Observe that '[Test]'\n * // is placed directly after 'Test'.\n * const positioning2 = Mat33.translation(Vec2.of(10, 50));\n * editor.dispatch(\n *     editor.image.addComponent(\n *         new TextComponent([ new TextComponent(['Test'], positioning1, style), '[Test]' ], positioning2, style)\n *     ),\n * );\n * ```\n */\nclass TextComponent extends AbstractComponent {\n    /**\n     * Creates a new text object from a list of component text or child TextComponents.\n     *\n     * @see {@link fromLines}\n     */\n    constructor(textObjects, \n    // Transformation relative to this component's parent element.\n    transform, style = defaultTextStyle, \n    // @internal\n    transformMode = TextTransformMode.ABSOLUTE_XY) {\n        super(componentTypeId);\n        this.textObjects = textObjects;\n        this.transform = transform;\n        this.style = style;\n        this.transformMode = transformMode;\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this.isRestylableComponent = true;\n        this.recomputeBBox();\n        // If this has no direct children, choose a style representative of this' content\n        // (useful for estimating the style of the TextComponent).\n        const hasDirectContent = textObjects.some((obj) => typeof obj === 'string');\n        if (!hasDirectContent && textObjects.length > 0) {\n            this.style = textObjects[0].getTextStyle();\n        }\n    }\n    static applyTextStyles(ctx, style) {\n        // Quote the font family if necessary.\n        const hasSpaces = style.fontFamily.match(/\\s/);\n        const isQuoted = style.fontFamily.match(/^\".*\"$/);\n        const fontFamily = hasSpaces && !isQuoted ? `\"${style.fontFamily.replace(/[\"]/g, '\\\\\"')}\"` : style.fontFamily;\n        ctx.font = [\n            style.fontStyle ?? '',\n            style.fontWeight ?? '',\n            (style.size ?? 12) + 'px',\n            `${fontFamily}`,\n        ].join(' ');\n        // TODO: Support RTL\n        ctx.textAlign = 'left';\n    }\n    // Roughly estimate the bounding box of `text`. Use if no CanvasRenderingContext2D is available.\n    static estimateTextDimens(text, style) {\n        const widthEst = text.length * style.size;\n        const heightEst = style.size;\n        // Text is drawn with (0, 0) as its baseline. As such, the majority of the text's height should\n        // be above (0, 0).\n        return new Rect2(0, (-heightEst * 2) / 3, widthEst, heightEst);\n    }\n    // Returns a set of TextMetrics for the given text, if a canvas is available.\n    static getTextMetrics(text, style) {\n        TextComponent.textMeasuringCtx ??= document.createElement('canvas').getContext('2d') ?? null;\n        if (!TextComponent.textMeasuringCtx) {\n            return null;\n        }\n        const ctx = TextComponent.textMeasuringCtx;\n        TextComponent.applyTextStyles(ctx, style);\n        return ctx.measureText(text);\n    }\n    // Returns the bounding box of `text`. This is approximate if no Canvas is available.\n    static getTextDimens(text, style) {\n        const metrics = this.getTextMetrics(text, style);\n        if (!metrics) {\n            return this.estimateTextDimens(text, style);\n        }\n        // Text is drawn with (0,0) at the bottom left of the baseline.\n        const textY = -metrics.actualBoundingBoxAscent;\n        const textHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n        return new Rect2(0, textY, metrics.width, textHeight);\n    }\n    static getFontHeight(style) {\n        return style.size;\n    }\n    computeUntransformedBBoxOfPart(part) {\n        if (typeof part === 'string') {\n            return TextComponent.getTextDimens(part, this.style);\n        }\n        else {\n            return part.contentBBox;\n        }\n    }\n    recomputeBBox() {\n        let bbox = null;\n        const cursor = new TextComponent.TextCursor(this.transform, this.style);\n        for (const textObject of this.textObjects) {\n            const transform = cursor.update(textObject).transform;\n            const currentBBox = this.computeUntransformedBBoxOfPart(textObject).transformedBoundingBox(transform);\n            bbox ??= currentBBox;\n            bbox = bbox.union(currentBBox);\n        }\n        this.contentBBox = bbox ?? Rect2.empty;\n    }\n    /**\n     * Renders a TextComponent or a TextComponent child onto a `canvas`.\n     *\n     * `visibleRect` can be provided as a performance optimization. If not the top-level\n     * text node, `baseTransform` (specifies the transformation of the parent text component\n     * in canvas space) should also be provided.\n     *\n     * Note that passing a `baseTransform` is preferable to transforming `visibleRect`. At high\n     * zoom levels, transforming `visibleRect` by the inverse of the parent transform can lead to\n     * inaccuracy due to precision loss.\n     */\n    renderInternal(canvas, visibleRect, baseTransform = Mat33.identity) {\n        const cursor = new TextComponent.TextCursor(this.transform, this.style);\n        for (const textObject of this.textObjects) {\n            const { transform, bbox } = cursor.update(textObject);\n            if (visibleRect && !visibleRect.intersects(bbox.transformedBoundingBox(baseTransform))) {\n                continue;\n            }\n            if (typeof textObject === 'string') {\n                canvas.drawText(textObject, transform, this.style);\n            }\n            else {\n                canvas.pushTransform(transform);\n                textObject.renderInternal(canvas, visibleRect, baseTransform.rightMul(transform));\n                canvas.popTransform();\n            }\n        }\n    }\n    render(canvas, visibleRect) {\n        canvas.startObject(this.contentBBox);\n        this.renderInternal(canvas, visibleRect);\n        canvas.endObject(this.getLoadSaveData());\n    }\n    getProportionalRenderingTime() {\n        return this.textObjects.length;\n    }\n    intersects(lineSegment) {\n        const cursor = new TextComponent.TextCursor(this.transform, this.style);\n        for (const subObject of this.textObjects) {\n            // Convert canvas space to internal space relative to the current object.\n            const invTransform = cursor.update(subObject).transform.inverse();\n            const transformedLine = lineSegment.transformedBy(invTransform);\n            if (typeof subObject === 'string') {\n                const textBBox = TextComponent.getTextDimens(subObject, this.style);\n                // TODO: Use a better intersection check. Perhaps draw the text onto a CanvasElement and\n                // use pixel-testing to check for intersection with its contour.\n                if (textBBox.getEdges().some((edge) => transformedLine.intersection(edge) !== null)) {\n                    return true;\n                }\n            }\n            else {\n                if (subObject.intersects(transformedLine)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    getStyle() {\n        return {\n            color: this.style.renderingStyle.fill,\n            // Make a copy\n            textStyle: {\n                ...this.style,\n                renderingStyle: {\n                    ...this.style.renderingStyle,\n                },\n            },\n        };\n    }\n    updateStyle(style) {\n        return createRestyleComponentCommand(this.getStyle(), style, this);\n    }\n    forceStyle(style, editor) {\n        if (style.textStyle) {\n            this.style = cloneTextStyle(style.textStyle);\n        }\n        else if (style.color) {\n            this.style = {\n                ...this.style,\n                renderingStyle: {\n                    ...this.style.renderingStyle,\n                    fill: style.color,\n                },\n            };\n        }\n        else {\n            return;\n        }\n        for (const child of this.textObjects) {\n            if (child instanceof TextComponent) {\n                child.forceStyle(style, editor);\n            }\n        }\n        if (editor) {\n            editor.image.queueRerenderOf(this);\n            editor.queueRerender();\n        }\n    }\n    // See {@link getStyle}\n    getTextStyle() {\n        return cloneTextStyle(this.style);\n    }\n    getBaselinePos() {\n        return this.transform.transformVec2(Vec2.zero);\n    }\n    getTransform() {\n        return this.transform;\n    }\n    applyTransformation(affineTransfm) {\n        this.transform = affineTransfm.rightMul(this.transform);\n        this.recomputeBBox();\n    }\n    createClone() {\n        const clonedTextObjects = this.textObjects.map((obj) => {\n            if (typeof obj === 'string') {\n                return obj;\n            }\n            else {\n                return obj.createClone();\n            }\n        });\n        return new TextComponent(clonedTextObjects, this.transform, this.style);\n    }\n    getText() {\n        const result = [];\n        for (const textObject of this.textObjects) {\n            if (typeof textObject === 'string') {\n                result.push(textObject);\n            }\n            else {\n                result.push(textObject.getText());\n            }\n        }\n        return result.join('\\n');\n    }\n    description(localizationTable) {\n        return localizationTable.text(this.getText());\n    }\n    // Do not rely on the output of `serializeToJSON` taking any particular format.\n    serializeToJSON() {\n        const serializableStyle = textStyleToJSON(this.style);\n        const serializedTextObjects = this.textObjects.map((text) => {\n            if (typeof text === 'string') {\n                return {\n                    text,\n                };\n            }\n            else {\n                return {\n                    json: text.serializeToJSON(),\n                };\n            }\n        });\n        return {\n            textObjects: serializedTextObjects,\n            transform: this.transform.toArray(),\n            style: serializableStyle,\n        };\n    }\n    // @internal\n    static deserializeFromString(json) {\n        if (typeof json === 'string') {\n            json = JSON.parse(json);\n        }\n        const style = textStyleFromJSON(json.style);\n        const textObjects = json.textObjects.map((data) => {\n            if ((data.text ?? null) !== null) {\n                return data.text;\n            }\n            return TextComponent.deserializeFromString(data.json);\n        });\n        json.transform = json.transform.filter((elem) => typeof elem === 'number');\n        if (json.transform.length !== 9) {\n            throw new Error(`Unable to deserialize transform, ${json.transform}.`);\n        }\n        const transformData = json.transform;\n        const transform = new Mat33(...transformData);\n        return new TextComponent(textObjects, transform, style);\n    }\n    /**\n     * Creates a `TextComponent` from `lines`.\n     *\n     * @example\n     * ```ts\n     * const textStyle = {\n     *   size: 12,\n     *   fontFamily: 'serif',\n     *   renderingStyle: { fill: Color4.black },\n     * };\n     *\n     * const text = TextComponent.fromLines('foo\\nbar'.split('\\n'), Mat33.identity, textStyle);\n     * ```\n     */\n    static fromLines(lines, transform, style) {\n        let lastComponent = null;\n        const components = [];\n        const lineMargin = Math.round(this.getFontHeight(style));\n        let position = Vec2.zero;\n        for (const line of lines) {\n            if (lastComponent) {\n                position = position.plus(Vec2.unitY.times(lineMargin));\n            }\n            const component = new TextComponent([line], Mat33.translation(position), style);\n            components.push(component);\n            lastComponent = component;\n        }\n        return new TextComponent(components, transform, style);\n    }\n}\nTextComponent.textMeasuringCtx = null;\nTextComponent.TextCursor = class {\n    constructor(parentTransform = Mat33.identity, parentStyle) {\n        this.parentTransform = parentTransform;\n        this.parentStyle = parentStyle;\n        this.transform = Mat33.identity;\n    }\n    /**\n     * Based on previous calls to `update`, returns the transformation and bounding box (relative\n     * to the parent element, or if none, the canvas) of the given `element`. Note that\n     * this is computed in part using the `parentTransform` provivded to this cursor's constructor.\n     *\n     * Warning: There may be edge cases here that are not taken into account.\n     */\n    update(elem) {\n        let elementTransform = Mat33.identity;\n        let elemInternalTransform = Mat33.identity;\n        let textSize;\n        if (typeof elem === 'string') {\n            textSize = TextComponent.getTextDimens(elem, this.parentStyle);\n        }\n        else {\n            // TODO: Double-check whether we need to take elem.transform into account here.\n            // elementTransform = elem.transform;\n            elemInternalTransform = elem.transform;\n            textSize = elem.getBBox();\n        }\n        const positioning = typeof elem === 'string' ? TextTransformMode.RELATIVE_XY : elem.transformMode;\n        if (positioning === TextTransformMode.RELATIVE_XY) {\n            // Position relative to the previous element's transform.\n            elementTransform = this.transform.rightMul(elementTransform);\n        }\n        else if (positioning === TextTransformMode.RELATIVE_X_ABSOLUTE_Y ||\n            positioning === TextTransformMode.RELATIVE_Y_ABSOLUTE_X) {\n            // Zero the absolute component of this.transform's translation\n            const transform = this.transform.mapEntries((component, [row, col]) => {\n                if (positioning === TextTransformMode.RELATIVE_X_ABSOLUTE_Y) {\n                    // Zero the y component of this.transform's translation\n                    return row === 1 && col === 2 ? 0 : component;\n                }\n                else if (positioning === TextTransformMode.RELATIVE_Y_ABSOLUTE_X) {\n                    // Zero the x component of this.transform's translation\n                    return row === 0 && col === 2 ? 0 : component;\n                }\n                throw new Error('Unreachable');\n                return 0;\n            });\n            elementTransform = transform.rightMul(elementTransform);\n        }\n        // Update this.transform so that future calls to update return correct values.\n        const endShiftTransform = Mat33.translation(Vec2.of(textSize.width, 0));\n        this.transform = elementTransform.rightMul(elemInternalTransform).rightMul(endShiftTransform);\n        const transform = this.parentTransform.rightMul(elementTransform);\n        return {\n            transform,\n            bbox: textSize.transformedBoundingBox(transform),\n        };\n    }\n};\nexport default TextComponent;\nAbstractComponent.registerComponent(componentTypeId, (data) => TextComponent.deserializeFromString(data));\n", "import { Vec2, Path, PathCommandType } from '@js-draw/math';\nimport  { stylesEqual }  from '../RenderingStyle.mjs';\nimport  { pathToRenderable }  from '../RenderablePathSpec.mjs';\n/**\n * Abstract base class for renderers.\n *\n * @see {@link EditorImage.render}\n */\nexport default class AbstractRenderer {\n    constructor(viewport) {\n        this.viewport = viewport;\n        // If null, this' transformation is linked to the Viewport\n        this.selfTransform = null;\n        this.transformStack = [];\n        this.objectLevel = 0;\n        this.currentPaths = null;\n    }\n    /**\n     * this.canvasToScreen, etc. should be used instead of the corresponding\n     * methods on `Viewport`, because the viewport may not accurately reflect\n     * what is rendered.\n     */\n    getViewport() {\n        return this.viewport;\n    }\n    setDraftMode(_draftMode) { }\n    flushPath() {\n        if (!this.currentPaths) {\n            return;\n        }\n        let lastStyle = null;\n        for (const path of this.currentPaths) {\n            const { startPoint, commands, style } = path;\n            if (!lastStyle || !stylesEqual(lastStyle, style)) {\n                if (lastStyle) {\n                    this.endPath(lastStyle);\n                }\n                this.beginPath(startPoint);\n                lastStyle = style;\n            }\n            else {\n                this.moveTo(startPoint);\n            }\n            for (const command of commands) {\n                if (command.kind === PathCommandType.LineTo) {\n                    this.lineTo(command.point);\n                }\n                else if (command.kind === PathCommandType.MoveTo) {\n                    this.moveTo(command.point);\n                }\n                else if (command.kind === PathCommandType.CubicBezierTo) {\n                    this.traceCubicBezierCurve(command.controlPoint1, command.controlPoint2, command.endPoint);\n                }\n                else if (command.kind === PathCommandType.QuadraticBezierTo) {\n                    this.traceQuadraticBezierCurve(command.controlPoint, command.endPoint);\n                }\n            }\n        }\n        if (lastStyle) {\n            this.endPath(lastStyle);\n        }\n        this.currentPaths = [];\n    }\n    /**\n     * Draws a styled path. If within an object started by {@link startObject},\n     * the resultant path may not be visible until {@link endObject} is called.\n     */\n    drawPath(path) {\n        // If we're being called outside of an object,\n        // we can't delay rendering\n        if (this.objectLevel === 0 || this.currentPaths === null) {\n            this.currentPaths = [path];\n            this.flushPath();\n            this.currentPaths = null;\n        }\n        else {\n            // Otherwise, don't render paths all at once. This prevents faint lines between\n            // segments of the same stroke from being visible.\n            this.currentPaths.push(path);\n        }\n    }\n    // Strokes a rectangle. Boundary lines have width [lineWidth] and are filled with [lineFill].\n    // This is equivalent to `drawPath(Path.fromRect(...).toRenderable(...))`.\n    drawRect(rect, lineWidth, lineFill) {\n        const path = Path.fromRect(rect, lineWidth);\n        this.drawPath(pathToRenderable(path, lineFill));\n    }\n    /** Draws a filled rectangle. */\n    fillRect(rect, fill) {\n        const path = Path.fromRect(rect);\n        this.drawPath(pathToRenderable(path, { fill }));\n    }\n    /**\n     * This should be called whenever a new object is being drawn.\n     *\n     * @param _boundingBox The bounding box of the object to be drawn.\n     * @param _clip Whether content outside `_boundingBox` should be drawn. Renderers\n     *              that override this method are not required to support `_clip`.\n     */\n    startObject(_boundingBox, _clip) {\n        if (this.objectLevel > 0) {\n            this.flushPath();\n        }\n        this.currentPaths = [];\n        this.objectLevel++;\n    }\n    /**\n     * Notes the end of an object.\n     * @param _loaderData - a map from strings to JSON-ifyable objects\n     * and contains properties attached to the object by whatever loader loaded the image. This\n     * is used to preserve attributes not supported by js-draw when loading/saving an image.\n     * Renderers may ignore this.\n     *\n     * @param _objectTags - a list of labels (e.g. `className`s) to be attached to the object.\n     * Renderers may ignore this.\n     */\n    endObject(_loaderData, _objectTags) {\n        // Render the paths all at once\n        this.flushPath();\n        this.currentPaths = null;\n        this.objectLevel--;\n        if (this.objectLevel < 0) {\n            throw new Error('More objects have ended than have been started (negative object nesting level)!');\n        }\n    }\n    getNestingLevel() {\n        return this.objectLevel;\n    }\n    // Returns true iff other can be rendered onto this without data loss.\n    canRenderFromWithoutDataLoss(_other) {\n        return false;\n    }\n    // MUST throw if other and this are not of the same base class.\n    renderFromOtherOfSameType(_renderTo, other) {\n        throw new Error(`Unable to render from ${other}: Not implemented`);\n    }\n    // Set a transformation to apply to things before rendering,\n    // replacing the viewport's transform.\n    setTransform(transform) {\n        this.selfTransform = transform;\n    }\n    pushTransform(transform) {\n        // Draw all pending paths that used the previous transform (if any).\n        this.flushPath();\n        this.transformStack.push(this.selfTransform);\n        this.setTransform(this.getCanvasToScreenTransform().rightMul(transform));\n    }\n    popTransform() {\n        if (this.transformStack.length === 0) {\n            throw new Error('Unable to pop more transforms than have been pushed!');\n        }\n        // Draw all pending paths that used the old transform (if any):\n        this.flushPath();\n        this.setTransform(this.transformStack.pop() ?? null);\n    }\n    // Get the matrix that transforms a vector on the canvas to a vector on this'\n    // rendering target.\n    getCanvasToScreenTransform() {\n        if (this.selfTransform) {\n            return this.selfTransform;\n        }\n        return this.viewport.canvasToScreenTransform;\n    }\n    canvasToScreen(vec) {\n        return this.getCanvasToScreenTransform().transformVec2(vec);\n    }\n    getSizeOfCanvasPixelOnScreen() {\n        return this.getCanvasToScreenTransform().transformVec3(Vec2.unitX).length();\n    }\n    /**\n     * @internal\n     */\n    overrideVisibleRect(rect) {\n        this.visibleRectOverride = rect;\n    }\n    // Returns the region in canvas space that is visible within the viewport this\n    // canvas is rendering to.\n    //\n    // Note that in some cases this might not be the same as the `visibleRect` given\n    // to components in their `render` method.\n    getVisibleRect() {\n        return this.visibleRectOverride ?? this.viewport.visibleRect;\n    }\n}\n", "import  TextComponent  from '../../components/TextComponent.mjs';\nimport { Vec2, Color4 } from '@js-draw/math';\nimport  AbstractRenderer  from './AbstractRenderer.mjs';\nimport  { visualEquivalent }  from '../RenderablePathSpec.mjs';\n/**\n * Renders onto a `CanvasRenderingContext2D`.\n *\n * **Example**:\n * [[include:doc-pages/inline-examples/canvas-renderer.md]]\n */\nexport default class CanvasRenderer extends AbstractRenderer {\n    /**\n     * Creates a new `CanvasRenderer` that renders to the given rendering context.\n     * The `viewport` is used to determine the translation/rotation/scaling of the content\n     * to draw.\n     */\n    constructor(ctx, viewport) {\n        super(viewport);\n        this.ctx = ctx;\n        this.ignoreObjectsAboveLevel = null;\n        this.ignoringObject = false;\n        this.currentObjectBBox = null;\n        this.clipLevels = [];\n        this.setDraftMode(false);\n    }\n    transformBy(transformBy) {\n        // From MDN, transform(a,b,c,d,e,f)\n        // takes input such that\n        // ⎡ a c e ⎤\n        // ⎢ b d f ⎥ transforms content drawn to [ctx].\n        // ⎣ 0 0 1 ⎦\n        this.ctx.transform(transformBy.a1, transformBy.b1, // a, b\n        transformBy.a2, transformBy.b2, // c, d\n        transformBy.a3, transformBy.b3);\n    }\n    canRenderFromWithoutDataLoss(other) {\n        return other instanceof CanvasRenderer;\n    }\n    renderFromOtherOfSameType(transformBy, other) {\n        if (!(other instanceof CanvasRenderer)) {\n            throw new Error(`${other} cannot be rendered onto ${this}`);\n        }\n        transformBy = this.getCanvasToScreenTransform().rightMul(transformBy);\n        this.ctx.save();\n        this.transformBy(transformBy);\n        this.ctx.drawImage(other.ctx.canvas, 0, 0);\n        this.ctx.restore();\n    }\n    // Set parameters for lower/higher quality rendering\n    setDraftMode(draftMode) {\n        if (draftMode) {\n            this.minSquareCurveApproxDist = 9;\n            this.minRenderSizeBothDimens = 1;\n            this.minRenderSizeAnyDimen = 0.1;\n        }\n        else {\n            this.minSquareCurveApproxDist = 0.5;\n            this.minRenderSizeBothDimens = 0.1;\n            this.minRenderSizeAnyDimen = 1e-6;\n        }\n    }\n    displaySize() {\n        return Vec2.of(this.ctx.canvas.clientWidth, this.ctx.canvas.clientHeight);\n    }\n    clear() {\n        this.ctx.save();\n        this.ctx.resetTransform();\n        this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n        this.ctx.restore();\n    }\n    beginPath(startPoint) {\n        startPoint = this.canvasToScreen(startPoint);\n        this.ctx.beginPath();\n        this.ctx.moveTo(startPoint.x, startPoint.y);\n    }\n    endPath(style) {\n        // Saving and restoring can be slow in some browsers\n        // (e.g. 0.50ms). Avoid.\n        //this.ctx.save();\n        // If not a transparent fill\n        if (style.fill.a > 0) {\n            this.ctx.fillStyle = style.fill.toHexString();\n            this.ctx.fill();\n        }\n        if (style.stroke) {\n            this.ctx.strokeStyle = style.stroke.color.toHexString();\n            this.ctx.lineWidth = this.getSizeOfCanvasPixelOnScreen() * style.stroke.width;\n            this.ctx.lineCap = 'round';\n            this.ctx.lineJoin = 'round';\n            this.ctx.stroke();\n            this.ctx.lineWidth = 1;\n        }\n        this.ctx.closePath();\n        //this.ctx.restore();\n    }\n    lineTo(point) {\n        point = this.canvasToScreen(point);\n        this.ctx.lineTo(point.x, point.y);\n    }\n    moveTo(point) {\n        point = this.canvasToScreen(point);\n        this.ctx.moveTo(point.x, point.y);\n    }\n    traceCubicBezierCurve(p1, p2, p3) {\n        p1 = this.canvasToScreen(p1);\n        p2 = this.canvasToScreen(p2);\n        p3 = this.canvasToScreen(p3);\n        // Approximate the curve if small enough.\n        const delta1 = p2.minus(p1);\n        const delta2 = p3.minus(p2);\n        if (delta1.magnitudeSquared() < this.minSquareCurveApproxDist &&\n            delta2.magnitudeSquared() < this.minSquareCurveApproxDist) {\n            this.ctx.lineTo(p3.x, p3.y);\n        }\n        else {\n            this.ctx.bezierCurveTo(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\n        }\n    }\n    traceQuadraticBezierCurve(controlPoint, endPoint) {\n        controlPoint = this.canvasToScreen(controlPoint);\n        endPoint = this.canvasToScreen(endPoint);\n        // Approximate the curve with a line if small enough\n        const delta = controlPoint.minus(endPoint);\n        if (delta.magnitudeSquared() < this.minSquareCurveApproxDist) {\n            this.ctx.lineTo(endPoint.x, endPoint.y);\n        }\n        else {\n            this.ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, endPoint.x, endPoint.y);\n        }\n    }\n    drawPath(path) {\n        if (this.ignoringObject) {\n            return;\n        }\n        // If part of a huge object, it might be worth trimming the path\n        const visibleRect = this.getVisibleRect();\n        if (this.currentObjectBBox?.containsRect(visibleRect)) {\n            // Try to trim/remove parts of the path outside of the bounding box.\n            path = visualEquivalent(path, visibleRect);\n        }\n        super.drawPath(path);\n    }\n    drawText(text, transform, style) {\n        this.ctx.save();\n        transform = this.getCanvasToScreenTransform().rightMul(transform);\n        this.transformBy(transform);\n        TextComponent.applyTextStyles(this.ctx, style);\n        if (style.renderingStyle.fill.a !== 0) {\n            this.ctx.fillStyle = style.renderingStyle.fill.toHexString();\n            this.ctx.fillText(text, 0, 0);\n        }\n        if (style.renderingStyle.stroke) {\n            this.ctx.strokeStyle = style.renderingStyle.stroke.color.toHexString();\n            this.ctx.lineWidth = style.renderingStyle.stroke.width;\n            this.ctx.strokeText(text, 0, 0);\n        }\n        this.ctx.restore();\n    }\n    drawImage(image) {\n        // .drawImage can fail for zero-size images.\n        if (image.image.width === 0 || image.image.height === 0) {\n            return;\n        }\n        this.ctx.save();\n        const transform = this.getCanvasToScreenTransform().rightMul(image.transform);\n        this.transformBy(transform);\n        this.ctx.drawImage(image.image, 0, 0);\n        this.ctx.restore();\n    }\n    startObject(boundingBox, clip) {\n        if (this.isTooSmallToRender(boundingBox)) {\n            this.ignoreObjectsAboveLevel = this.getNestingLevel();\n            this.ignoringObject = true;\n        }\n        super.startObject(boundingBox);\n        this.currentObjectBBox = boundingBox;\n        if (!this.ignoringObject && clip) {\n            // Don't clip if it would only remove content already trimmed by\n            // the edge of the screen.\n            const clippedIsOutsideScreen = boundingBox.containsRect(this.getVisibleRect());\n            if (!clippedIsOutsideScreen) {\n                this.clipLevels.push(this.objectLevel);\n                this.ctx.save();\n                this.ctx.beginPath();\n                for (const corner of boundingBox.corners) {\n                    const screenCorner = this.canvasToScreen(corner);\n                    this.ctx.lineTo(screenCorner.x, screenCorner.y);\n                }\n                this.ctx.clip();\n            }\n        }\n    }\n    endObject() {\n        // Cache this.objectLevel — it may be decremented by super.endObject.\n        const objectLevel = this.objectLevel;\n        this.currentObjectBBox = null;\n        super.endObject();\n        if (!this.ignoringObject && this.clipLevels.length > 0) {\n            if (this.clipLevels[this.clipLevels.length - 1] === objectLevel) {\n                this.ctx.restore();\n                this.clipLevels.pop();\n            }\n        }\n        // If exiting an object with a too-small-to-draw bounding box,\n        if (this.ignoreObjectsAboveLevel !== null &&\n            this.getNestingLevel() <= this.ignoreObjectsAboveLevel) {\n            this.ignoreObjectsAboveLevel = null;\n            this.ignoringObject = false;\n        }\n    }\n    /**\n     * Returns a reference to the underlying `CanvasRenderingContext2D`.\n     * This can be used to render custom content not supported by {@link AbstractRenderer}.\n     * However, such content won't support {@link SVGRenderer} or {@link TextOnlyRenderer}\n     * by default.\n     *\n     * Use with caution.\n     */\n    drawWithRawRenderingContext(callback) {\n        this.ctx.save();\n        this.transformBy(this.getCanvasToScreenTransform());\n        callback(this.ctx);\n        this.ctx.restore();\n    }\n    // @internal\n    drawPoints(...points) {\n        const pointRadius = 10;\n        for (let i = 0; i < points.length; i++) {\n            const point = this.canvasToScreen(points[i]);\n            this.ctx.beginPath();\n            this.ctx.arc(point.x, point.y, pointRadius, 0, Math.PI * 2);\n            this.ctx.fillStyle = Color4.ofRGBA(0.5 + Math.sin(i) / 2, 1.0, 0.5 + Math.cos(i * 0.2) / 4, 0.5).toHexString();\n            this.ctx.lineWidth = 2;\n            this.ctx.fill();\n            this.ctx.stroke();\n            this.ctx.closePath();\n            this.ctx.textAlign = 'center';\n            this.ctx.textBaseline = 'middle';\n            this.ctx.fillStyle = 'black';\n            this.ctx.fillText(`${i}`, point.x, point.y, pointRadius * 2);\n        }\n    }\n    // @internal\n    isTooSmallToRender(rect) {\n        // Should we ignore all objects within this object's bbox?\n        const diagonal = rect.size.times(this.getSizeOfCanvasPixelOnScreen());\n        const bothDimenMinSize = this.minRenderSizeBothDimens;\n        const bothTooSmall = Math.abs(diagonal.x) < bothDimenMinSize && Math.abs(diagonal.y) < bothDimenMinSize;\n        const anyDimenMinSize = this.minRenderSizeAnyDimen;\n        const anyTooSmall = Math.abs(diagonal.x) < anyDimenMinSize || Math.abs(diagonal.y) < anyDimenMinSize;\n        return bothTooSmall || anyTooSmall;\n    }\n    // @internal\n    static fromViewport(exportViewport, options = {}) {\n        const canvas = document.createElement('canvas');\n        const exportRectSize = exportViewport.getScreenRectSize();\n        let canvasSize = options.canvasSize ?? exportRectSize;\n        if (options.maxCanvasDimen && canvasSize.maximumEntryMagnitude() > options.maxCanvasDimen) {\n            canvasSize = canvasSize.times(options.maxCanvasDimen / canvasSize.maximumEntryMagnitude());\n        }\n        canvas.width = canvasSize.x;\n        canvas.height = canvasSize.y;\n        const ctx = canvas.getContext('2d');\n        // Scale to ensure that the entire output is visible.\n        const scaleFactor = Math.min(canvasSize.x / exportRectSize.x, canvasSize.y / exportRectSize.y);\n        ctx.scale(scaleFactor, scaleFactor);\n        return { renderer: new CanvasRenderer(ctx, exportViewport), element: canvas };\n    }\n}\n", "import  { EditorImageEventType }  from '../image/EditorImage.mjs';\nimport { Rect2, Color4, toRoundedString, Path, PathCommandType, Vec2, } from '@js-draw/math';\nimport  AbstractComponent, { ComponentSizingMode }  from './AbstractComponent.mjs';\nimport  { createRestyleComponentCommand, }  from './RestylableComponent.mjs';\nimport  Viewport  from '../Viewport.mjs';\nimport  { pathToRenderable }  from '../rendering/RenderablePathSpec.mjs';\nexport var BackgroundType;\n(function (BackgroundType) {\n    BackgroundType[BackgroundType[\"SolidColor\"] = 0] = \"SolidColor\";\n    BackgroundType[BackgroundType[\"Grid\"] = 1] = \"Grid\";\n    BackgroundType[BackgroundType[\"None\"] = 2] = \"None\";\n})(BackgroundType || (BackgroundType = {}));\nexport const imageBackgroundCSSClassName = 'js-draw-image-background';\n// Class name prefix indicating the size of the background's grid cells (if present).\nexport const imageBackgroundGridSizeCSSPrefix = 'js-draw-image-background-grid-';\n// Flag included in rendered SVGs (etc) that indicates that the secondary color of the\n// background has been manually set.\nexport const imageBackgroundNonAutomaticSecondaryColorCSSClassName = 'js-draw-image-background-non-automatic-secondary-color';\nexport const backgroundTypeToClassNameMap = {\n    [BackgroundType.Grid]: 'js-draw-image-background-grid',\n    [BackgroundType.SolidColor]: imageBackgroundCSSClassName,\n    [BackgroundType.None]: '',\n};\n// Represents the background of the editor's canvas.\nexport default class BackgroundComponent extends AbstractComponent {\n    constructor(backgroundType, mainColor) {\n        super('image-background', 0);\n        this.backgroundType = backgroundType;\n        this.mainColor = mainColor;\n        this.viewportSizeChangeListener = null;\n        this.autoresizeChangedListener = null;\n        // Whether the background should grow/shrink to match the screen size,\n        // rather than being clipped to the image boundaries.\n        this.fillsScreen = false;\n        this.gridSize = Viewport.getGridSize(2);\n        this.gridStrokeWidth = 0.7;\n        this.secondaryColor = null;\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this.isRestylableComponent = true;\n        this.contentBBox = Rect2.empty;\n    }\n    static ofGrid(backgroundColor, gridSize, gridColor, gridStrokeWidth) {\n        const background = new BackgroundComponent(BackgroundType.Grid, backgroundColor);\n        if (gridSize !== undefined) {\n            background.gridSize = gridSize;\n        }\n        if (gridColor !== undefined) {\n            background.secondaryColor = gridColor;\n        }\n        if (gridStrokeWidth !== undefined) {\n            background.gridStrokeWidth = gridStrokeWidth;\n        }\n        return background;\n    }\n    getBackgroundType() {\n        return this.backgroundType;\n    }\n    // @internal\n    getMainColor() {\n        return this.mainColor;\n    }\n    // @internal\n    getSecondaryColor() {\n        return this.secondaryColor;\n    }\n    // @internal\n    getGridSize() {\n        return this.gridSize;\n    }\n    getStyle() {\n        let color = this.mainColor;\n        if (this.backgroundType === BackgroundType.None) {\n            color = undefined;\n        }\n        return {\n            color,\n        };\n    }\n    updateStyle(style) {\n        return createRestyleComponentCommand(this.getStyle(), style, this);\n    }\n    // @internal\n    forceStyle(style, editor) {\n        const fill = style.color;\n        if (!fill) {\n            return;\n        }\n        this.mainColor = fill;\n        // A solid background and transparent fill is equivalent to no background.\n        if (fill.eq(Color4.transparent) && this.backgroundType === BackgroundType.SolidColor) {\n            this.backgroundType = BackgroundType.None;\n        }\n        else if (this.backgroundType === BackgroundType.None) {\n            this.backgroundType = BackgroundType.SolidColor;\n        }\n        if (editor) {\n            editor.image.queueRerenderOf(this);\n            editor.queueRerender();\n        }\n    }\n    onAddToImage(image) {\n        if (this.viewportSizeChangeListener) {\n            console.warn('onAddToImage called when background is already in an image');\n            this.onRemoveFromImage();\n        }\n        this.viewportSizeChangeListener = image.notifier.on(EditorImageEventType.ExportViewportChanged, () => {\n            this.recomputeBBox(image);\n        });\n        this.autoresizeChangedListener = image.notifier.on(EditorImageEventType.AutoresizeModeChanged, () => {\n            this.recomputeBBox(image);\n        });\n        this.recomputeBBox(image);\n    }\n    onRemoveFromImage() {\n        this.viewportSizeChangeListener?.remove();\n        this.autoresizeChangedListener?.remove();\n        this.viewportSizeChangeListener = null;\n        this.autoresizeChangedListener = null;\n    }\n    recomputeBBox(image) {\n        const importExportRect = image.getImportExportViewport().visibleRect;\n        let needsRerender = false;\n        if (!this.contentBBox.eq(importExportRect)) {\n            this.contentBBox = importExportRect;\n            // If the box already fills the screen, rerendering it will have\n            // no visual effect.\n            //\n            // TODO: This decision should be made by queueRerenderOf and not here.\n            //\n            needsRerender ||= !this.fillsScreen;\n        }\n        const imageAutoresizes = image.getAutoresizeEnabled();\n        if (imageAutoresizes !== this.fillsScreen) {\n            this.fillsScreen = imageAutoresizes;\n            needsRerender = true;\n        }\n        if (needsRerender) {\n            // Re-renders this if already added to the EditorImage.\n            image.queueRerenderOf(this);\n        }\n    }\n    generateGridPath(visibleRect) {\n        const contentBBox = this.getFullBoundingBox(visibleRect);\n        // .grownBy acts on all sides, so we need only grow by strokeWidth / 2 (1 * the stroke radius)\n        const targetRect = (visibleRect?.intersection(contentBBox) ?? contentBBox).grownBy(this.gridStrokeWidth / 2);\n        const roundDownToGrid = (coord) => Math.floor(coord / this.gridSize) * this.gridSize;\n        const roundUpToGrid = (coord) => Math.ceil(coord / this.gridSize) * this.gridSize;\n        const startY = roundUpToGrid(targetRect.y);\n        const endY = roundDownToGrid(targetRect.y + targetRect.h);\n        const startX = roundUpToGrid(targetRect.x);\n        const endX = roundDownToGrid(targetRect.x + targetRect.w);\n        const result = [];\n        // Don't generate grids with a huge number of rows/columns -- such grids\n        // take a long time to render and are likely invisible due to the number of\n        // cells.\n        const rowCount = (endY - startY) / this.gridSize;\n        const colCount = (endX - startX) / this.gridSize;\n        const maxGridCols = 1000;\n        const maxGridRows = 1000;\n        if (rowCount > maxGridRows || colCount > maxGridCols) {\n            return Path.empty;\n        }\n        const startPoint = Vec2.of(targetRect.x, startY);\n        for (let y = startY; y <= endY; y += this.gridSize) {\n            result.push({\n                kind: PathCommandType.MoveTo,\n                point: Vec2.of(targetRect.x, y),\n            });\n            result.push({\n                kind: PathCommandType.LineTo,\n                point: Vec2.of(targetRect.x + targetRect.w, y),\n            });\n        }\n        for (let x = startX; x <= endX; x += this.gridSize) {\n            result.push({\n                kind: PathCommandType.MoveTo,\n                point: Vec2.of(x, targetRect.y),\n            });\n            result.push({\n                kind: PathCommandType.LineTo,\n                point: Vec2.of(x, targetRect.y + targetRect.h),\n            });\n        }\n        return new Path(startPoint, result);\n    }\n    /**\n     * @returns this background's bounding box if the screen size is taken into\n     * account (which may be necessary if this component is configured to fill the\n     * entire screen).\n     */\n    getFullBoundingBox(visibleRect) {\n        return (this.fillsScreen ? visibleRect : this.contentBBox) ?? this.contentBBox;\n    }\n    render(canvas, visibleRect) {\n        if (this.backgroundType === BackgroundType.None) {\n            return;\n        }\n        // If visibleRect is null, components should render everything.\n        // In that case, a full render is being done.\n        const mustRender = !visibleRect;\n        // If this.fillsScreen, the visibleRect needs to be known.\n        // Use the screen rect.\n        if (this.fillsScreen) {\n            visibleRect ??= canvas.getVisibleRect();\n        }\n        const clip = this.backgroundType === BackgroundType.Grid;\n        const contentBBox = this.getFullBoundingBox(visibleRect);\n        canvas.startObject(contentBBox, clip);\n        if (this.backgroundType === BackgroundType.SolidColor ||\n            this.backgroundType === BackgroundType.Grid) {\n            // If the rectangle for this region contains the visible rect,\n            // we can fill the entire visible rectangle (which may be more efficient than\n            // filling the entire region for this.)\n            const intersection = visibleRect?.intersection(contentBBox);\n            if (intersection) {\n                canvas.fillRect(intersection, this.mainColor);\n            }\n            else if (mustRender) {\n                canvas.fillRect(contentBBox, this.mainColor);\n            }\n        }\n        if (this.backgroundType === BackgroundType.Grid) {\n            let gridColor = this.secondaryColor;\n            gridColor ??= Color4.ofRGBA(1 - this.mainColor.r, 1 - this.mainColor.g, 1 - this.mainColor.b, 0.2);\n            // If the background fill is completely transparent, ensure visibility on otherwise light\n            // and dark backgrounds.\n            if (this.mainColor.a === 0) {\n                gridColor = Color4.ofRGBA(0.5, 0.5, 0.5, 0.2);\n            }\n            const style = {\n                fill: Color4.transparent,\n                stroke: { width: this.gridStrokeWidth, color: gridColor },\n            };\n            canvas.drawPath(pathToRenderable(this.generateGridPath(visibleRect), style));\n        }\n        const backgroundTypeCSSClass = backgroundTypeToClassNameMap[this.backgroundType];\n        const classNames = [imageBackgroundCSSClassName];\n        if (backgroundTypeCSSClass !== imageBackgroundCSSClassName) {\n            classNames.push(backgroundTypeCSSClass);\n            const gridSizeStr = toRoundedString(this.gridSize).replace(/[.]/g, 'p');\n            classNames.push(imageBackgroundGridSizeCSSPrefix + gridSizeStr);\n        }\n        if (this.secondaryColor !== null) {\n            classNames.push(imageBackgroundNonAutomaticSecondaryColorCSSClassName);\n        }\n        canvas.endObject(this.getLoadSaveData(), classNames);\n    }\n    intersects(lineSegment) {\n        return this.contentBBox.getEdges().some((edge) => edge.intersects(lineSegment));\n    }\n    isSelectable() {\n        return false;\n    }\n    isBackground() {\n        return true;\n    }\n    getSizingMode() {\n        return this.fillsScreen ? ComponentSizingMode.FillScreen : ComponentSizingMode.BoundingBox;\n    }\n    serializeToJSON() {\n        return {\n            mainColor: this.mainColor.toHexString(),\n            secondaryColor: this.secondaryColor?.toHexString(),\n            backgroundType: this.backgroundType,\n            gridSize: this.gridSize,\n            gridStrokeWidth: this.gridStrokeWidth,\n        };\n    }\n    applyTransformation(_affineTransfm) {\n        // Do nothing — it doesn't make sense to transform the background.\n    }\n    description(localizationTable) {\n        if (this.backgroundType === BackgroundType.SolidColor) {\n            return localizationTable.filledBackgroundWithColor(this.mainColor.toString());\n        }\n        else if (this.backgroundType === BackgroundType.None) {\n            return localizationTable.emptyBackground;\n        }\n        else if (this.backgroundType === BackgroundType.Grid) {\n            return localizationTable.gridBackground;\n        }\n        else {\n            const exhaustivenessCheck = this.backgroundType;\n            return exhaustivenessCheck;\n        }\n    }\n    createClone() {\n        return new BackgroundComponent(this.backgroundType, this.mainColor);\n    }\n    // @internal\n    static deserializeFromJSON(json) {\n        if (typeof json === 'string') {\n            json = JSON.parse(json);\n        }\n        if (typeof json.mainColor !== 'string') {\n            throw new Error('Error deserializing — mainColor must be of type string.');\n        }\n        let backgroundType;\n        const jsonBackgroundType = json.backgroundType;\n        if (jsonBackgroundType === BackgroundType.None ||\n            jsonBackgroundType === BackgroundType.Grid ||\n            jsonBackgroundType === BackgroundType.SolidColor) {\n            backgroundType = jsonBackgroundType;\n        }\n        else {\n            const exhaustivenessCheck = jsonBackgroundType;\n            return exhaustivenessCheck;\n        }\n        const mainColor = Color4.fromHex(json.mainColor);\n        const secondaryColor = json.secondaryColor ? Color4.fromHex(json.secondaryColor) : null;\n        const gridSize = json.gridSize ?? undefined;\n        const gridStrokeWidth = json.gridStrokeWidth ?? undefined;\n        const result = new BackgroundComponent(backgroundType, mainColor);\n        result.secondaryColor = secondaryColor;\n        if (gridSize) {\n            result.gridSize = gridSize;\n        }\n        if (gridStrokeWidth) {\n            result.gridStrokeWidth = gridStrokeWidth;\n        }\n        return result;\n    }\n}\nAbstractComponent.registerComponent('image-background', BackgroundComponent.deserializeFromJSON);\n", "const waitForImageLoad = async (image) => {\n    if (!image.complete) {\n        await new Promise((resolve, reject) => {\n            image.onload = (event) => resolve(event);\n            // TODO(v2): Return a `new Error(event.message)`\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors -- Forwarding an error-like object.\n            image.onerror = (event) => reject(event);\n            // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors -- Forwarding an error-like object.\n            image.onabort = (event) => reject(event);\n        });\n    }\n};\nexport default waitForImageLoad;\n", "import { Rect2, Mat33 } from '@js-draw/math';\nimport  { assertIsNumber, assertIsNumberArray }  from '../util/assertions.mjs';\nimport  AbstractComponent  from './AbstractComponent.mjs';\nimport  waitForImageLoaded  from '../util/waitForImageLoaded.mjs';\n/**\n * Represents a raster image.\n *\n * **Example: Adding images**:\n * [[include:doc-pages/inline-examples/adding-an-image-and-data-urls.md]]\n */\nexport default class ImageComponent extends AbstractComponent {\n    constructor(image) {\n        super('image-component');\n        this.image = {\n            ...image,\n            label: image.label ??\n                image.image.getAttribute('alt') ??\n                image.image.getAttribute('aria-label') ??\n                undefined,\n        };\n        const isHTMLImageElem = (elem) => {\n            return elem.getAttribute('src') !== undefined;\n        };\n        if (isHTMLImageElem(image.image) && !image.image.complete) {\n            image.image.onload = () => this.recomputeBBox();\n        }\n        this.recomputeBBox();\n    }\n    getImageRect() {\n        return new Rect2(0, 0, this.image.image.width, this.image.image.height);\n    }\n    recomputeBBox() {\n        this.contentBBox = this.getImageRect();\n        this.contentBBox = this.contentBBox.transformedBoundingBox(this.image.transform);\n    }\n    /**\n     * Load from an image. Waits for the image to load if incomplete.\n     *\n     * The image, `elem`, must not [taint](https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image#security_and_tainted_canvases)\n     * an HTMLCanvasElement when rendered.\n     */\n    static async fromImage(elem, transform) {\n        await waitForImageLoaded(elem);\n        let width, height;\n        if (typeof elem.width === 'number' &&\n            typeof elem.height === 'number' &&\n            elem.width !== 0 &&\n            elem.height !== 0) {\n            width = elem.width;\n            height = elem.height;\n        }\n        else {\n            width = elem.clientWidth;\n            height = elem.clientHeight;\n        }\n        let image;\n        let url = elem.src ?? '';\n        if (!url.startsWith('data:image/')) {\n            // Convert to a data URL:\n            const canvas = document.createElement('canvas');\n            canvas.width = width;\n            canvas.height = height;\n            const ctx = canvas.getContext('2d');\n            ctx.drawImage(elem, 0, 0, canvas.width, canvas.height);\n            url = canvas.toDataURL();\n            image = canvas;\n        }\n        else {\n            image = new Image();\n            image.src = url;\n            image.width = width;\n            image.height = height;\n        }\n        image.setAttribute('alt', elem.getAttribute('alt') ?? '');\n        image.setAttribute('aria-label', elem.getAttribute('aria-label') ?? '');\n        return new ImageComponent({\n            image,\n            base64Url: url,\n            transform: transform,\n        });\n    }\n    render(canvas, _visibleRect) {\n        canvas.startObject(this.contentBBox);\n        canvas.drawImage(this.image);\n        canvas.endObject(this.getLoadSaveData());\n    }\n    // A *very* rough estimate of how long it takes to render this component\n    getProportionalRenderingTime() {\n        // Estimate: Equivalent to a stroke with 10 segments.\n        return 10;\n    }\n    intersects(lineSegment) {\n        const rect = this.getImageRect();\n        const edges = rect.getEdges().map((edge) => edge.transformedBy(this.image.transform));\n        for (const edge of edges) {\n            if (edge.intersects(lineSegment)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    applyTransformation(affineTransfm) {\n        this.image.transform = affineTransfm.rightMul(this.image.transform);\n        this.recomputeBBox();\n    }\n    description(localizationTable) {\n        return this.image.label\n            ? localizationTable.imageNode(this.image.label)\n            : localizationTable.unlabeledImageNode;\n    }\n    getAltText() {\n        return this.image.label;\n    }\n    // The base64 image URL of this image.\n    getURL() {\n        return this.image.base64Url;\n    }\n    getTransformation() {\n        return this.image.transform;\n    }\n    createClone() {\n        return new ImageComponent({\n            ...this.image,\n        });\n    }\n    serializeToJSON() {\n        return {\n            src: this.image.base64Url,\n            label: this.image.label,\n            // Store the width and height for bounding box computations while the image is loading.\n            width: this.image.image.width,\n            height: this.image.image.height,\n            transform: this.image.transform.toArray(),\n        };\n    }\n    static deserializeFromJSON(data) {\n        if (!(typeof data.src === 'string')) {\n            throw new Error(`${data} has invalid format! Expected src property.`);\n        }\n        assertIsNumberArray(data.transform);\n        assertIsNumber(data.width);\n        assertIsNumber(data.height);\n        const image = new Image();\n        image.src = data.src;\n        image.width = data.width;\n        image.height = data.height;\n        const transform = new Mat33(...data.transform);\n        return new ImageComponent({\n            image: image,\n            base64Url: data.src,\n            label: data.label,\n            transform,\n        });\n    }\n}\nAbstractComponent.registerComponent('image-component', ImageComponent.deserializeFromJSON);\n", "//\n// Used by `SVGLoader`s to store unrecognised global attributes\n// (e.g. unrecognised XML namespace declarations).\n// @internal\n// @packageDocumentation\n//\nimport { Rect2 } from '@js-draw/math';\nimport  SVGRenderer  from '../rendering/renderers/SVGRenderer.mjs';\nimport  AbstractComponent, { ComponentSizingMode }  from './AbstractComponent.mjs';\nconst componentKind = 'svg-global-attributes';\n// Stores global SVG attributes (e.g. namespace identifiers.)\nexport default class SVGGlobalAttributesObject extends AbstractComponent {\n    // Does not modify `attrs`\n    constructor(attrs) {\n        super(componentKind);\n        this.contentBBox = Rect2.empty;\n        // Already stored/managed in `editor.image`.\n        const attrsManagedByRenderer = ['viewBox', 'width', 'height'];\n        // Only store attributes that aren't managed by other parts of the app.\n        this.attrs = attrs.filter(([attr, _value]) => {\n            return !attrsManagedByRenderer.includes(attr);\n        });\n    }\n    render(canvas, _visibleRect) {\n        if (!(canvas instanceof SVGRenderer)) {\n            // Don't draw unrenderable objects if we can't\n            return;\n        }\n        for (const [attr, value] of this.attrs) {\n            canvas.setRootSVGAttribute(attr, value);\n        }\n    }\n    intersects(_lineSegment) {\n        return false;\n    }\n    applyTransformation(_affineTransfm) { }\n    isSelectable() {\n        return false;\n    }\n    getSizingMode() {\n        // This component can be shown anywhere (it won't be\n        // visible to the user, it just needs to be saved with\n        // the image).\n        return ComponentSizingMode.Anywhere;\n    }\n    createClone() {\n        return new SVGGlobalAttributesObject(this.attrs);\n    }\n    description(localization) {\n        return localization.svgObject;\n    }\n    serializeToJSON() {\n        return JSON.stringify(this.attrs);\n    }\n    static deserializeFromString(_data) {\n        // To be safe, don't deserialize any attributes\n        return new SVGGlobalAttributesObject([]);\n    }\n}\nAbstractComponent.registerComponent(componentKind, SVGGlobalAttributesObject.deserializeFromString);\n", "//\n// Stores objects loaded from an SVG that aren't recognised by the editor.\n// @internal\n// @packageDocumentation\n//\nimport { Rect2 } from '@js-draw/math';\nimport  SVGRenderer  from '../rendering/renderers/SVGRenderer.mjs';\nimport  AbstractComponent, { ComponentSizingMode }  from './AbstractComponent.mjs';\nconst componentId = 'unknown-svg-object';\nexport default class UnknownSVGObject extends AbstractComponent {\n    constructor(svgObject) {\n        super(componentId);\n        this.svgObject = svgObject;\n        this.contentBBox = Rect2.of(svgObject.getBoundingClientRect());\n    }\n    render(canvas, _visibleRect) {\n        if (!(canvas instanceof SVGRenderer)) {\n            // Don't draw unrenderable objects if we can't\n            return;\n        }\n        canvas.startObject(this.contentBBox);\n        canvas.drawSVGElem(this.svgObject);\n        canvas.endObject(this.getLoadSaveData());\n    }\n    intersects(lineSegment) {\n        return this.contentBBox.getEdges().some((edge) => edge.intersection(lineSegment) !== null);\n    }\n    applyTransformation(_affineTransfm) { }\n    isSelectable() {\n        return false;\n    }\n    getSizingMode() {\n        // This component can be shown anywhere (it won't be\n        // visible to the user, it just needs to be saved with\n        // the image).\n        return ComponentSizingMode.Anywhere;\n    }\n    createClone() {\n        return new UnknownSVGObject(this.svgObject.cloneNode(true));\n    }\n    description(localization) {\n        return localization.svgObject;\n    }\n    serializeToJSON() {\n        return JSON.stringify({\n            html: this.svgObject.outerHTML,\n        });\n    }\n}\n// null: Do not deserialize UnknownSVGObjects.\nAbstractComponent.registerComponent(componentId, null);\n", "/** Computes the font size of a text element, based on style information. */\nconst determineFontSize = (elem, computedStyles, \n// output: Written to to update supported style attributes\nsupportedStyleAttrs) => {\n    const fontSizeExp = /^([-0-9.e]+)px/i;\n    // In some environments, computedStyles.fontSize can be increased by the system.\n    // Thus, to prevent text from growing on load/save, prefer .style.fontSize.\n    let fontSizeMatch = fontSizeExp.exec(elem.style?.fontSize ?? '');\n    if (!fontSizeMatch && elem.tagName.toLowerCase() === 'tspan' && elem.parentElement) {\n        // Try to inherit the font size of the parent text element.\n        fontSizeMatch = fontSizeExp.exec(elem.parentElement.style?.fontSize ?? '');\n    }\n    // If we still couldn't find a font size, try to use computedStyles (which can be\n    // wrong).\n    if (!fontSizeMatch && computedStyles) {\n        fontSizeMatch = fontSizeExp.exec(computedStyles.fontSize);\n    }\n    let fontSize = 12;\n    if (fontSizeMatch) {\n        supportedStyleAttrs.add('fontSize');\n        fontSize = parseFloat(fontSizeMatch[1]);\n    }\n    return fontSize;\n};\nexport default determineFontSize;\n", "import { Color4, Mat33, Path, Rect2, Vec2 } from '@js-draw/math';\nimport  BackgroundComponent, { BackgroundType, backgroundTypeToClassNameMap, imageBackgroundCSSClassName, imageBackgroundGridSizeCSSPrefix, imageBackgroundNonAutomaticSecondaryColorCSSClassName, }  from '../components/BackgroundComponent.mjs';\nimport  ImageComponent  from '../components/ImageComponent.mjs';\nimport  Stroke  from '../components/Stroke.mjs';\nimport  SVGGlobalAttributesObject  from '../components/SVGGlobalAttributesObject.mjs';\nimport  TextComponent, { TextTransformMode }  from '../components/TextComponent.mjs';\nimport  UnknownSVGObject  from '../components/UnknownSVGObject.mjs';\nimport  { pathToRenderable }  from '../rendering/RenderablePathSpec.mjs';\nimport  { renderedStylesheetId }  from '../rendering/renderers/SVGRenderer.mjs';\nimport  determineFontSize  from './utils/determineFontSize.mjs';\n// Size of a loaded image if no size is specified.\nexport const defaultSVGViewRect = new Rect2(0, 0, 500, 500);\n// Key to retrieve unrecognised attributes from an AbstractComponent\nexport const svgAttributesDataKey = 'svgAttrs';\n// Like {@link svgAttributesDataKey}, but for styles\nexport const svgStyleAttributesDataKey = 'svgStyleAttrs';\n// Key that specifies the ID of an SVG element that contained a given node when the image\n// was first loaded.\nexport const svgLoaderAttributeContainerID = 'svgContainerID';\n// If present in the exported SVG's class list, the image will be\n// autoresized when components are added/removed.\nexport const svgLoaderAutoresizeClassName = 'js-draw--autoresize';\n// @internal\nexport var SVGLoaderLoadMethod;\n(function (SVGLoaderLoadMethod) {\n    SVGLoaderLoadMethod[\"IFrame\"] = \"iframe\";\n    SVGLoaderLoadMethod[\"DOMParser\"] = \"domparser\";\n})(SVGLoaderLoadMethod || (SVGLoaderLoadMethod = {}));\nconst supportedStrokeFillStyleAttrs = ['stroke', 'fill', 'stroke-width'];\n// Handles loading images from SVG.\nexport default class SVGLoader {\n    constructor(source, onFinish, options) {\n        this.source = source;\n        this.onFinish = onFinish;\n        this.onAddComponent = null;\n        this.onProgress = null;\n        this.onDetermineExportRect = null;\n        this.processedCount = 0;\n        this.totalToProcess = 0;\n        this.containerGroupIDs = [];\n        this.encounteredIDs = [];\n        this.plugins = options.plugins ?? [];\n        this.storeUnknown = !(options.sanitize ?? false);\n        this.disableUnknownObjectWarnings = !!options.disableUnknownObjectWarnings;\n    }\n    // If [computedStyles] is given, it is preferred to directly accessing node's style object.\n    getStyle(node, computedStyles) {\n        let fill = Color4.transparent;\n        let stroke;\n        // If possible, use computedStyles (allows property inheritance).\n        // Chromium, however, sets .fill to a falsy, but not undefined value in some cases where\n        // styles are available. As such, use || instead of ??.\n        const fillAttribute = node.getAttribute('fill') ?? (computedStyles?.fill || node.style?.fill);\n        if (fillAttribute) {\n            try {\n                fill = Color4.fromString(fillAttribute);\n            }\n            catch {\n                console.error('Unknown fill color,', fillAttribute);\n            }\n        }\n        const strokeAttribute = node.getAttribute('stroke') ?? computedStyles?.stroke ?? node.style?.stroke ?? '';\n        const strokeWidthAttr = node.getAttribute('stroke-width') ??\n            computedStyles?.strokeWidth ??\n            node.style?.strokeWidth ??\n            '';\n        if (strokeAttribute && strokeWidthAttr) {\n            try {\n                let width = parseFloat(strokeWidthAttr ?? '1');\n                if (!isFinite(width)) {\n                    width = 0;\n                }\n                const strokeColor = Color4.fromString(strokeAttribute);\n                if (strokeColor.a > 0) {\n                    stroke = {\n                        width,\n                        color: strokeColor,\n                    };\n                }\n            }\n            catch (e) {\n                console.error('Error parsing stroke data:', e);\n            }\n        }\n        const style = {\n            fill,\n            stroke,\n        };\n        return style;\n    }\n    strokeDataFromElem(node) {\n        const result = [];\n        const pathData = node.getAttribute('d') ?? '';\n        const style = this.getStyle(node);\n        // Break the path into chunks at each moveTo ('M') command:\n        const parts = pathData.split('M');\n        let isFirst = true;\n        for (const part of parts) {\n            // Skip effective no-ops -- moveTos without additional commands.\n            const isNoOpMoveTo = /^[0-9., \\t\\n]+$/.exec(part);\n            if (part !== '' && !isNoOpMoveTo) {\n                // We split the path by moveTo commands, so add the 'M' back in\n                // if it was present.\n                const current = !isFirst ? `M${part}` : part;\n                const path = Path.fromString(current);\n                const spec = pathToRenderable(path, style);\n                result.push(spec);\n            }\n            isFirst = false;\n        }\n        return result;\n    }\n    attachUnrecognisedAttrs(elem, node, supportedAttrs, supportedStyleAttrs) {\n        if (!this.storeUnknown) {\n            return;\n        }\n        for (const attr of node.getAttributeNames()) {\n            if (supportedAttrs.has(attr) || (attr === 'style' && supportedStyleAttrs)) {\n                continue;\n            }\n            elem.attachLoadSaveData(svgAttributesDataKey, [\n                attr,\n                node.getAttribute(attr),\n            ]);\n        }\n        if (supportedStyleAttrs && node.style) {\n            // Use a for loop instead of an iterator: js-dom seems to not\n            // support using node.style as an iterator.\n            for (let i = 0; i < node.style.length; i++) {\n                const attr = node.style[i];\n                if (attr === '' || !attr) {\n                    continue;\n                }\n                if (supportedStyleAttrs.has(attr)) {\n                    continue;\n                }\n                // TODO: Do we need special logic for !important properties?\n                elem.attachLoadSaveData(svgStyleAttributesDataKey, {\n                    key: attr,\n                    value: node.style.getPropertyValue(attr),\n                    priority: node.style.getPropertyPriority(attr),\n                });\n            }\n        }\n    }\n    // Adds a stroke with a single path\n    async addPath(node) {\n        let elem;\n        try {\n            const strokeData = this.strokeDataFromElem(node);\n            elem = new Stroke(strokeData);\n            this.attachUnrecognisedAttrs(elem, node, new Set([...supportedStrokeFillStyleAttrs, 'd']), new Set(supportedStrokeFillStyleAttrs));\n        }\n        catch (e) {\n            console.error('Invalid path in node', node, '\\nError:', e, '\\nAdding as an unknown object.');\n            if (this.storeUnknown) {\n                elem = new UnknownSVGObject(node);\n            }\n            else {\n                return;\n            }\n        }\n        await this.addComponent(elem);\n    }\n    async addBackground(node) {\n        // If a grid background,\n        if (node.classList.contains(backgroundTypeToClassNameMap[BackgroundType.Grid])) {\n            let foregroundStr;\n            let backgroundStr;\n            let gridStrokeWidthStr;\n            // If a group,\n            if (node.tagName.toLowerCase() === 'g') {\n                // We expect exactly two children. One of these is the solid\n                // background of the grid\n                if (node.children.length !== 2) {\n                    await this.addUnknownNode(node);\n                    return;\n                }\n                const background = node.children[0];\n                const grid = node.children[1];\n                backgroundStr = background.getAttribute('fill');\n                foregroundStr = grid.getAttribute('stroke');\n                gridStrokeWidthStr = grid.getAttribute('stroke-width');\n            }\n            else {\n                backgroundStr = node.getAttribute('fill');\n                foregroundStr = node.getAttribute('stroke');\n                gridStrokeWidthStr = node.getAttribute('stroke-width');\n            }\n            // Default to a transparent background.\n            backgroundStr ??= Color4.transparent.toHexString();\n            // A grid must have a foreground color specified.\n            if (!foregroundStr) {\n                await this.addUnknownNode(node);\n                return;\n            }\n            // Extract the grid size from the class name\n            let gridSize = undefined;\n            for (const className of node.classList) {\n                if (className.startsWith(imageBackgroundGridSizeCSSPrefix)) {\n                    const sizeStr = className.substring(imageBackgroundGridSizeCSSPrefix.length);\n                    gridSize = parseFloat(sizeStr.replace(/p/g, '.'));\n                }\n            }\n            let gridStrokeWidth = undefined;\n            if (gridStrokeWidthStr) {\n                gridStrokeWidth = parseFloat(gridStrokeWidthStr);\n            }\n            const backgroundColor = Color4.fromString(backgroundStr);\n            let foregroundColor = Color4.fromString(foregroundStr);\n            // Should the foreground color be determined automatically?\n            if (!node.classList.contains(imageBackgroundNonAutomaticSecondaryColorCSSClassName)) {\n                foregroundColor = undefined;\n            }\n            const elem = BackgroundComponent.ofGrid(backgroundColor, gridSize, foregroundColor, gridStrokeWidth);\n            await this.addComponent(elem);\n        }\n        // Otherwise, if just a <path/>, it's a solid color background.\n        else if (node.tagName.toLowerCase() === 'path') {\n            const fill = Color4.fromString(node.getAttribute('fill') ?? node.style.fill ?? 'black');\n            const elem = new BackgroundComponent(BackgroundType.SolidColor, fill);\n            await this.addComponent(elem);\n        }\n        else {\n            await this.addUnknownNode(node);\n        }\n    }\n    getComputedStyle(element) {\n        try {\n            // getComputedStyle may fail in jsdom when using a DOMParser.\n            return window.getComputedStyle(element);\n        }\n        catch (error) {\n            console.warn('Error computing style', error);\n            return undefined;\n        }\n    }\n    // If given, 'supportedAttrs' will have x, y, etc. attributes that were used in computing the transform added to it,\n    // to prevent storing duplicate transform information when saving the component.\n    getTransform(elem, supportedAttrs, computedStyles) {\n        // If possible, load the js-draw specific transform attribute\n        const highpTransformAttribute = 'data-highp-transform';\n        const rawTransformData = elem.getAttribute(highpTransformAttribute);\n        let transform;\n        if (rawTransformData) {\n            try {\n                transform = Mat33.fromCSSMatrix(rawTransformData);\n                supportedAttrs?.push(highpTransformAttribute);\n            }\n            catch (e) {\n                console.warn(`Unable to parse raw transform data, ${rawTransformData}. Falling back to CSS data. Error:`, e);\n            }\n        }\n        if (!transform) {\n            computedStyles ??= this.getComputedStyle(elem);\n            let transformProperty = computedStyles?.transform;\n            if (!transformProperty || transformProperty === 'none') {\n                transformProperty = elem.style?.transform || 'none';\n            }\n            // Prefer the actual .style.transform\n            // to the computed stylesheet -- in some browsers, the computedStyles version\n            // can have lower precision.\n            try {\n                transform = Mat33.fromCSSMatrix(elem.style.transform);\n            }\n            catch (_e) {\n                console.warn('matrix parse error', _e);\n                transform = Mat33.fromCSSMatrix(transformProperty);\n            }\n            const elemX = elem.getAttribute('x');\n            const elemY = elem.getAttribute('y');\n            if (elemX || elemY) {\n                const x = parseFloat(elemX ?? '0');\n                const y = parseFloat(elemY ?? '0');\n                if (!isNaN(x) && !isNaN(y)) {\n                    supportedAttrs?.push('x', 'y');\n                    transform = transform.rightMul(Mat33.translation(Vec2.of(x, y)));\n                }\n            }\n        }\n        return transform;\n    }\n    makeText(elem) {\n        const contentList = [];\n        for (const child of elem.childNodes) {\n            if (child.nodeType === Node.TEXT_NODE) {\n                contentList.push(child.nodeValue ?? '');\n            }\n            else if (child.nodeType === Node.ELEMENT_NODE) {\n                const subElem = child;\n                if (subElem.tagName.toLowerCase() === 'tspan') {\n                    // FIXME: tspan's (x, y) components are absolute, not relative to the parent.\n                    contentList.push(this.makeText(subElem));\n                }\n                else {\n                    throw new Error(`Unrecognized text child element: ${subElem}`);\n                }\n            }\n            else {\n                throw new Error(`Unrecognized text child node: ${child}.`);\n            }\n        }\n        // If no content, the content is an empty string.\n        if (contentList.length === 0) {\n            contentList.push('');\n        }\n        // Compute styles.\n        const computedStyles = this.getComputedStyle(elem);\n        const supportedStyleAttrs = new Set([\n            'fontFamily',\n            'transform',\n            ...supportedStrokeFillStyleAttrs,\n        ]);\n        const style = {\n            size: determineFontSize(elem, computedStyles, supportedStyleAttrs),\n            fontFamily: computedStyles?.fontFamily || elem.style?.fontFamily || 'sans-serif',\n            fontWeight: computedStyles?.fontWeight || elem.style?.fontWeight || undefined,\n            fontStyle: computedStyles?.fontStyle || elem.style?.fontStyle || undefined,\n            renderingStyle: this.getStyle(elem, computedStyles),\n        };\n        const supportedAttrs = [];\n        let transform = this.getTransform(elem, supportedAttrs, computedStyles);\n        let transformMode = TextTransformMode.ABSOLUTE_XY;\n        const elemDX = elem.getAttribute('dx');\n        if (elemDX) {\n            transformMode = TextTransformMode.RELATIVE_X_ABSOLUTE_Y;\n            transform = transform.rightMul(Mat33.translation(Vec2.of(parseFloat(elemDX), 0)));\n            supportedAttrs.push('dx');\n        }\n        const elemDY = elem.getAttribute('dy');\n        if (elemDY) {\n            if (transformMode === TextTransformMode.RELATIVE_X_ABSOLUTE_Y) {\n                transformMode = TextTransformMode.RELATIVE_XY;\n            }\n            else {\n                transformMode = TextTransformMode.RELATIVE_Y_ABSOLUTE_X;\n            }\n            transform = transform.rightMul(Mat33.translation(Vec2.of(0, parseFloat(elemDY))));\n            supportedAttrs.push('dy');\n        }\n        const result = new TextComponent(contentList, transform, style, transformMode);\n        this.attachUnrecognisedAttrs(result, elem, new Set(supportedAttrs), new Set(supportedStyleAttrs));\n        return result;\n    }\n    async addText(elem) {\n        try {\n            const textElem = this.makeText(elem);\n            await this.addComponent(textElem);\n        }\n        catch (e) {\n            console.error('Invalid text object in node', elem, '. Continuing.... Error:', e);\n            this.addUnknownNode(elem);\n        }\n    }\n    async addImage(elem) {\n        const image = new Image();\n        image.src = elem.getAttribute('xlink:href') ?? elem.href.baseVal;\n        image.setAttribute('alt', elem.getAttribute('aria-label') ?? '');\n        try {\n            const supportedAttrs = [];\n            const transform = this.getTransform(elem, supportedAttrs);\n            const imageElem = await ImageComponent.fromImage(image, transform);\n            this.attachUnrecognisedAttrs(imageElem, elem, new Set(supportedAttrs), new Set(['transform']));\n            await this.addComponent(imageElem);\n        }\n        catch (e) {\n            console.error('Error loading image:', e, '. Element: ', elem, '. Continuing...');\n            await this.addUnknownNode(elem);\n        }\n    }\n    async addUnknownNode(node) {\n        if (this.storeUnknown) {\n            const component = new UnknownSVGObject(node);\n            await this.addComponent(component);\n        }\n    }\n    async startGroup(node) {\n        node = node.cloneNode(false);\n        // Select a unique ID based on the node's ID property (if it exists).\n        // Use `||` and not `??` so that empty string IDs are also replaced.\n        let id = node.id || `id-${this.encounteredIDs.length}`;\n        // Make id unique.\n        let idSuffixCounter = 0;\n        let suffix = '';\n        while (this.encounteredIDs.includes(id + suffix)) {\n            idSuffixCounter++;\n            suffix = '--' + idSuffixCounter;\n        }\n        id += suffix;\n        // Remove all children from the node -- children will be handled separately\n        // (not removing children here could cause duplicates in the result, when rendered).\n        node.replaceChildren();\n        node.id = id;\n        const component = new UnknownSVGObject(node);\n        this.addComponent(component);\n        // Add to IDs after -- we don't want the <g> element to be marked\n        // as its own container.\n        this.containerGroupIDs.push(node.id);\n        this.encounteredIDs.push(node.id);\n    }\n    // Ends the most recent group started by .startGroup\n    async endGroup() {\n        this.containerGroupIDs.pop();\n    }\n    async addComponent(component) {\n        // Attach the stack of container IDs\n        if (this.containerGroupIDs.length > 0) {\n            component.attachLoadSaveData(svgLoaderAttributeContainerID, [...this.containerGroupIDs]);\n        }\n        await this.onAddComponent?.(component);\n    }\n    updateViewBox(node) {\n        const viewBoxAttr = node.getAttribute('viewBox');\n        if (this.rootViewBox || !viewBoxAttr) {\n            return;\n        }\n        const components = viewBoxAttr.split(/[ \\t\\n,]+/);\n        const x = parseFloat(components[0]);\n        const y = parseFloat(components[1]);\n        const width = parseFloat(components[2]);\n        const height = parseFloat(components[3]);\n        if (isNaN(x) || isNaN(y) || isNaN(width) || isNaN(height)) {\n            console.warn(`node ${node} has an unparsable viewbox. Viewbox: ${viewBoxAttr}. Match: ${components}.`);\n            return;\n        }\n        const autoresize = node.classList.contains(svgLoaderAutoresizeClassName);\n        this.rootViewBox = new Rect2(x, y, width, height);\n        this.onDetermineExportRect?.(this.rootViewBox, { autoresize });\n    }\n    async updateSVGAttrs(node) {\n        if (this.storeUnknown) {\n            await this.onAddComponent?.(new SVGGlobalAttributesObject(this.getSourceAttrs(node)));\n        }\n    }\n    async visit(node) {\n        this.totalToProcess += node.childElementCount;\n        let visitChildren = true;\n        const visitPlugin = async () => {\n            for (const plugin of this.plugins) {\n                const processed = await plugin.visit(node, {\n                    addComponent: (component) => {\n                        return this.onAddComponent?.(component);\n                    },\n                });\n                if (processed) {\n                    visitChildren = false;\n                    return true;\n                }\n            }\n            return false;\n        };\n        const visitBuiltIn = async () => {\n            switch (node.tagName.toLowerCase()) {\n                case 'g':\n                    if (node.classList.contains(imageBackgroundCSSClassName)) {\n                        await this.addBackground(node);\n                        visitChildren = false;\n                    }\n                    else {\n                        await this.startGroup(node);\n                    }\n                    // Otherwise, continue -- visit the node's children.\n                    break;\n                case 'path':\n                    if (node.classList.contains(imageBackgroundCSSClassName)) {\n                        await this.addBackground(node);\n                    }\n                    else {\n                        await this.addPath(node);\n                    }\n                    break;\n                case 'text':\n                    await this.addText(node);\n                    visitChildren = false;\n                    break;\n                case 'image':\n                    await this.addImage(node);\n                    // Images should not have children.\n                    visitChildren = false;\n                    break;\n                case 'svg':\n                    this.updateViewBox(node);\n                    this.updateSVGAttrs(node);\n                    break;\n                case 'style':\n                    // Keeping unnecessary style sheets can cause the browser to keep all\n                    // SVG elements *referenced* by the style sheet in some browsers.\n                    //\n                    // Only keep the style sheet if it won't be discarded on save.\n                    if (node.getAttribute('id') !== renderedStylesheetId) {\n                        await this.addUnknownNode(node);\n                    }\n                    break;\n                default:\n                    if (!this.disableUnknownObjectWarnings) {\n                        console.warn('Unknown SVG element,', node, node.tagName);\n                        if (!(node instanceof SVGElement)) {\n                            console.warn('Element', node, 'is not an SVGElement!', this.storeUnknown ? 'Continuing anyway.' : 'Skipping.');\n                        }\n                    }\n                    await this.addUnknownNode(node);\n                    return;\n            }\n        };\n        if (await visitPlugin()) {\n            visitChildren = false;\n        }\n        else {\n            await visitBuiltIn();\n        }\n        if (visitChildren) {\n            for (const child of node.children) {\n                await this.visit(child);\n            }\n            if (node.tagName.toLowerCase() === 'g') {\n                await this.endGroup();\n            }\n        }\n        this.processedCount++;\n        await this.onProgress?.(this.processedCount, this.totalToProcess);\n    }\n    // Get SVG element attributes (e.g. xlink=...)\n    getSourceAttrs(node) {\n        return node.getAttributeNames().map((attr) => {\n            return [attr, node.getAttribute(attr)];\n        });\n    }\n    async start(onAddComponent, onProgress, onDetermineExportRect = null) {\n        this.onAddComponent = onAddComponent;\n        this.onProgress = onProgress;\n        this.onDetermineExportRect = onDetermineExportRect;\n        // Estimate the number of tags to process.\n        this.totalToProcess = this.source.childElementCount;\n        this.processedCount = 0;\n        this.rootViewBox = null;\n        await this.visit(this.source);\n        const viewBox = this.rootViewBox;\n        if (!viewBox) {\n            this.onDetermineExportRect?.(defaultSVGViewRect);\n        }\n        this.onFinish?.();\n        this.onFinish = null;\n    }\n    /**\n     * Create an `SVGLoader` from the content of an SVG image. SVGs are loaded within a sandboxed\n     * iframe with `sandbox=\"allow-same-origin\"`\n     * [thereby disabling JavaScript](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox).\n     *\n     * @see {@link Editor.loadFrom}\n     * @param text - Textual representation of the SVG (e.g. `<svg viewbox='...'>...</svg>`).\n     * @param options - if `true` or `false`, treated as the `sanitize` option -- don't store unknown attributes.\n     */\n    static fromString(text, options = false) {\n        const domParserLoad = typeof options !== 'boolean' && options?.loadMethod === SVGLoaderLoadMethod.DOMParser;\n        const { svgElem, cleanUp } = (() => {\n            // If the user requested an iframe load (the default) try to load with an iframe.\n            // There are some cases (e.g. in a sandboxed iframe) where this doesn't work.\n            // TODO(v2): Use domParserLoad by default.\n            if (!domParserLoad) {\n                try {\n                    const sandbox = document.createElement('iframe');\n                    sandbox.src = 'about:blank';\n                    // allow-same-origin is necessary for how we interact with the sandbox. As such,\n                    // DO NOT ENABLE ALLOW-SCRIPTS.\n                    sandbox.setAttribute('sandbox', 'allow-same-origin');\n                    sandbox.setAttribute('csp', \"default-src 'about:blank'\");\n                    sandbox.style.display = 'none';\n                    // Required to access the frame's DOM. See https://stackoverflow.com/a/17777943/17055750\n                    document.body.appendChild(sandbox);\n                    if (!sandbox.hasAttribute('sandbox')) {\n                        sandbox.remove();\n                        throw new Error('SVG loading iframe is not sandboxed.');\n                    }\n                    const sandboxDoc = sandbox.contentWindow?.document ?? sandbox.contentDocument;\n                    if (sandboxDoc == null)\n                        throw new Error('Unable to open a sandboxed iframe!');\n                    sandboxDoc.open();\n                    sandboxDoc.write(`\n\t\t\t\t\t\t<!DOCTYPE html>\n\t\t\t\t\t\t<html>\n\t\t\t\t\t\t\t<head>\n\t\t\t\t\t\t\t\t<title>SVG Loading Sandbox</title>\n\t\t\t\t\t\t\t\t<meta name='viewport' conent='width=device-width,initial-scale=1.0'/>\n\t\t\t\t\t\t\t\t<meta charset='utf-8'/>\n\t\t\t\t\t\t\t</head>\n\t\t\t\t\t\t\t<body style='font-size: 12px;'>\n\t\t\t\t\t\t\t\t<script>\n\t\t\t\t\t\t\t\t\tconsole.error('JavaScript should not be able to run here!');\n\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t'The SVG sandbox is broken! Please double-check the sandboxing setting.'\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t</script>\n\t\t\t\t\t\t\t</body>\n\t\t\t\t\t\t</html>\n\t\t\t\t\t`);\n                    sandboxDoc.close();\n                    const svgElem = sandboxDoc.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                    // eslint-disable-next-line no-unsanitized/property -- setting innerHTML in a sandboxed document.\n                    svgElem.innerHTML = text;\n                    sandboxDoc.body.appendChild(svgElem);\n                    const cleanUp = () => {\n                        svgElem.remove();\n                        sandbox.remove();\n                        sandbox.src = '';\n                    };\n                    return { svgElem, cleanUp };\n                }\n                catch (error) {\n                    console.warn('Failed loading SVG via a sandboxed iframe. Some styles may not be loaded correctly. Error: ', error);\n                }\n            }\n            // Fall back to creating a DOMParser\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${text}</svg>`, 'text/html');\n            const svgElem = doc.querySelector('svg');\n            // Handle error messages reported while parsing. See\n            // https://developer.mozilla.org/en-US/docs/Web/Guide/Parsing_and_serializing_XML\n            const errorReportNode = doc.querySelector('parsererror');\n            if (errorReportNode) {\n                throw new Error('Parse error: ' + errorReportNode.textContent);\n            }\n            const cleanUp = () => { };\n            return { svgElem, cleanUp };\n        })();\n        // Handle options\n        let sanitize;\n        let disableUnknownObjectWarnings;\n        let plugins;\n        if (typeof options === 'boolean') {\n            sanitize = options;\n            disableUnknownObjectWarnings = false;\n            plugins = [];\n        }\n        else {\n            sanitize = options.sanitize ?? false;\n            disableUnknownObjectWarnings = options.disableUnknownObjectWarnings ?? false;\n            plugins = options.plugins;\n        }\n        return new SVGLoader(svgElem, cleanUp, {\n            sanitize,\n            disableUnknownObjectWarnings,\n            plugins,\n        });\n    }\n}\n", "/**\n * Returns true iff all elements in the shorter list equal (===) the elements\n * in the longer list.\n */\nconst listPrefixMatch = (a, b) => {\n    const shorter = a.length < b.length ? a : b;\n    const longer = shorter === a ? b : a;\n    for (let i = 0; i < shorter.length; i++) {\n        if (shorter[i] !== longer[i]) {\n            return false;\n        }\n    }\n    return true;\n};\nexport default listPrefixMatch;\n", "import { Mat33, Vec2, toRoundedString } from '@js-draw/math';\nimport  { svgAttributesDataKey, svgLoaderAttributeContainerID, svgStyleAttributesDataKey, }  from '../../SVGLoader/SVGLoader.mjs';\nimport  { stylesEqual }  from '../RenderingStyle.mjs';\nimport  AbstractRenderer  from './AbstractRenderer.mjs';\nimport  { pathFromRenderable }  from '../RenderablePathSpec.mjs';\nimport  listPrefixMatch  from '../../util/listPrefixMatch.mjs';\nexport const renderedStylesheetId = 'js-draw-style-sheet';\nconst svgNameSpace = 'http://www.w3.org/2000/svg';\nconst defaultTextStyle = {\n    fontWeight: '400',\n    fontStyle: 'normal',\n};\n/**\n * Renders onto an `SVGElement`.\n *\n * @see {@link Editor.toSVG}\n */\nexport default class SVGRenderer extends AbstractRenderer {\n    /**\n     * Creates a renderer that renders onto `elem`. If `sanitize`, don't render potentially untrusted data.\n     *\n     * `viewport` is used to determine the translation/rotation/scaling/output size of the rendered\n     * data.\n     */\n    constructor(elem, viewport, sanitize = false) {\n        super(viewport);\n        this.elem = elem;\n        this.sanitize = sanitize;\n        this.lastPathStyle = null;\n        this.lastPathString = [];\n        this.lastContainerIDList = [];\n        // Elements that make up the current object (as created by startObject)\n        // if any.\n        this.objectElems = null;\n        this.overwrittenAttrs = {};\n        this.textContainer = null;\n        this.textContainerTransform = null;\n        this.textParentStyle = defaultTextStyle;\n        this.clear();\n        this.addStyleSheet();\n    }\n    addStyleSheet() {\n        if (!this.elem.querySelector(`#${renderedStylesheetId}`)) {\n            // Default to rounded strokes.\n            const styleSheet = document.createElementNS('http://www.w3.org/2000/svg', 'style');\n            styleSheet.appendChild(document.createTextNode(`\n\t\t\t\tpath {\n\t\t\t\t\tstroke-linecap: round;\n\t\t\t\t\tstroke-linejoin: round;\n\t\t\t\t}\n\n\t\t\t\ttext {\n\t\t\t\t\twhite-space: pre;\n\t\t\t\t}\n\t\t\t`.replace(/\\s+/g, '')));\n            styleSheet.setAttribute('id', renderedStylesheetId);\n            this.elem.appendChild(styleSheet);\n        }\n    }\n    // Sets an attribute on the root SVG element.\n    setRootSVGAttribute(name, value) {\n        if (this.sanitize) {\n            return;\n        }\n        // Make the original value of the attribute restorable on clear\n        if (!(name in this.overwrittenAttrs)) {\n            this.overwrittenAttrs[name] = this.elem.getAttribute(name);\n        }\n        if (value !== null) {\n            this.elem.setAttribute(name, value);\n        }\n        else {\n            this.elem.removeAttribute(name);\n        }\n    }\n    displaySize() {\n        return Vec2.of(this.elem.clientWidth, this.elem.clientHeight);\n    }\n    clear() {\n        this.lastPathString = [];\n        this.lastContainerIDList = [];\n        if (!this.sanitize) {\n            // Restore all all attributes\n            for (const attrName in this.overwrittenAttrs) {\n                const value = this.overwrittenAttrs[attrName];\n                if (value) {\n                    this.elem.setAttribute(attrName, value);\n                }\n                else {\n                    this.elem.removeAttribute(attrName);\n                }\n            }\n            this.overwrittenAttrs = {};\n        }\n    }\n    // Push `this.fullPath` to the SVG. Returns the path added to the SVG, if any.\n    // @internal\n    addPathToSVG() {\n        if (!this.lastPathStyle || this.lastPathString.length === 0) {\n            return null;\n        }\n        const pathElem = document.createElementNS(svgNameSpace, 'path');\n        pathElem.setAttribute('d', this.lastPathString.join(' '));\n        const style = this.lastPathStyle;\n        if (style.fill.a > 0) {\n            pathElem.setAttribute('fill', style.fill.toHexString());\n        }\n        else {\n            pathElem.setAttribute('fill', 'none');\n        }\n        if (style.stroke) {\n            pathElem.setAttribute('stroke', style.stroke.color.toHexString());\n            pathElem.setAttribute('stroke-width', toRoundedString(style.stroke.width * this.getSizeOfCanvasPixelOnScreen()));\n        }\n        this.elem.appendChild(pathElem);\n        this.objectElems?.push(pathElem);\n        return pathElem;\n    }\n    drawPath(pathSpec) {\n        const style = pathSpec.style;\n        const path = pathFromRenderable(pathSpec).transformedBy(this.getCanvasToScreenTransform());\n        // Try to extend the previous path, if possible\n        if (this.lastPathString.length === 0 ||\n            !this.lastPathStyle ||\n            !stylesEqual(this.lastPathStyle, style)) {\n            this.addPathToSVG();\n            this.lastPathStyle = style;\n            this.lastPathString = [];\n        }\n        this.lastPathString.push(path.toString());\n    }\n    // Apply [elemTransform] to [elem]. Uses both a `matrix` and `.x`, `.y` properties if `setXY` is true.\n    // Otherwise, just uses a `matrix`.\n    transformFrom(elemTransform, elem, inCanvasSpace = false) {\n        const transform = !inCanvasSpace\n            ? this.getCanvasToScreenTransform().rightMul(elemTransform)\n            : elemTransform;\n        if (!transform.eq(Mat33.identity)) {\n            const matrixString = transform.toCSSMatrix();\n            elem.style.transform = matrixString;\n            // Most browsers round the components of CSS transforms.\n            // Include a higher precision copy of the element's transform.\n            elem.setAttribute('data-highp-transform', matrixString);\n        }\n        else {\n            elem.style.transform = '';\n        }\n    }\n    drawText(text, transform, style) {\n        const applyTextStyles = (elem, style) => {\n            if (style.fontFamily !== this.textParentStyle?.fontFamily) {\n                elem.style.fontFamily = style.fontFamily;\n            }\n            if (style.fontVariant !== this.textParentStyle?.fontVariant) {\n                elem.style.fontVariant = style.fontVariant ?? '';\n            }\n            if (style.fontWeight !== this.textParentStyle?.fontWeight) {\n                elem.style.fontWeight = style.fontWeight ?? '';\n            }\n            if (style.fontStyle !== this.textParentStyle?.fontStyle) {\n                elem.style.fontStyle = style.fontStyle ?? '';\n            }\n            if (style.size !== this.textParentStyle?.size) {\n                elem.style.fontSize = style.size + 'px';\n            }\n            const fillString = style.renderingStyle.fill.toHexString();\n            // TODO: Uncomment at some future major version release --- currently causes incompatibility due\n            //       to an SVG parsing bug in older versions.\n            //const parentFillString = this.textParentStyle?.renderingStyle?.fill?.toHexString();\n            //if (fillString !== parentFillString) {\n            elem.style.fill = fillString;\n            //}\n            if (style.renderingStyle.stroke) {\n                const strokeStyle = style.renderingStyle.stroke;\n                elem.style.stroke = strokeStyle.color.toHexString();\n                elem.style.strokeWidth = strokeStyle.width + 'px';\n            }\n        };\n        transform = this.getCanvasToScreenTransform().rightMul(transform);\n        if (!this.textContainer) {\n            const container = document.createElementNS(svgNameSpace, 'text');\n            container.appendChild(document.createTextNode(text));\n            this.transformFrom(transform, container, true);\n            applyTextStyles(container, style);\n            this.elem.appendChild(container);\n            this.objectElems?.push(container);\n            if (this.objectLevel > 0) {\n                this.textContainer = container;\n                this.textContainerTransform = transform;\n                this.textParentStyle = { ...defaultTextStyle, ...style };\n            }\n        }\n        else {\n            const elem = document.createElementNS(svgNameSpace, 'tspan');\n            elem.appendChild(document.createTextNode(text));\n            this.textContainer.appendChild(elem);\n            // Make .x/.y relative to the parent.\n            transform = this.textContainerTransform.inverse().rightMul(transform);\n            // .style.transform does nothing to tspan elements. As such, we need to set x/y:\n            const translation = transform.transformVec2(Vec2.zero);\n            elem.setAttribute('x', `${toRoundedString(translation.x)}`);\n            elem.setAttribute('y', `${toRoundedString(translation.y)}`);\n            applyTextStyles(elem, style);\n        }\n    }\n    drawImage(image) {\n        let label = image.label ?? image.image.getAttribute('aria-label') ?? '';\n        if (label === '') {\n            label = image.image.getAttribute('alt') ?? '';\n        }\n        const svgImgElem = document.createElementNS(svgNameSpace, 'image');\n        svgImgElem.setAttribute('href', image.base64Url);\n        svgImgElem.setAttribute('width', image.image.getAttribute('width') ?? '');\n        svgImgElem.setAttribute('height', image.image.getAttribute('height') ?? '');\n        svgImgElem.setAttribute('aria-label', label);\n        this.transformFrom(image.transform, svgImgElem);\n        this.elem.appendChild(svgImgElem);\n        this.objectElems?.push(svgImgElem);\n    }\n    startObject(boundingBox) {\n        super.startObject(boundingBox);\n        // Only accumulate a path within an object\n        this.lastPathString = [];\n        this.lastPathStyle = null;\n        this.textContainer = null;\n        this.textParentStyle = defaultTextStyle;\n        this.objectElems = [];\n    }\n    endObject(loaderData, elemClassNames) {\n        super.endObject(loaderData);\n        // Don't extend paths across objects\n        this.addPathToSVG();\n        // If empty/not an object, stop.\n        if (!this.objectElems) {\n            return;\n        }\n        if (loaderData && !this.sanitize) {\n            // Restore any attributes unsupported by the app.\n            for (const elem of this.objectElems) {\n                const attrs = loaderData[svgAttributesDataKey];\n                const styleAttrs = loaderData[svgStyleAttributesDataKey];\n                if (attrs) {\n                    for (const [attr, value] of attrs) {\n                        elem.setAttribute(attr, value);\n                    }\n                }\n                if (styleAttrs) {\n                    for (const attr of styleAttrs) {\n                        elem.style.setProperty(attr.key, attr.value, attr.priority);\n                    }\n                }\n            }\n            // Update the parent\n            const containerIDData = loaderData[svgLoaderAttributeContainerID];\n            let containerIDList = [];\n            if (containerIDData && containerIDData[0]) {\n                // If a string list,\n                if (containerIDData[0].length) {\n                    containerIDList = containerIDData[0];\n                }\n            }\n            if (containerIDList.length > 0 &&\n                // containerIDList must share a prefix with the last ID list\n                // otherwise, the z order of elements may have been changed from\n                // the original image.\n                // In the case that the z order has been changed, keep the current\n                // element as a child of the root to preserve z order.\n                listPrefixMatch(this.lastContainerIDList, containerIDList) &&\n                // The component can add at most one more parent than the previous item.\n                this.lastContainerIDList.length >= containerIDList.length - 1) {\n                // Select the last\n                const containerID = containerIDList[containerIDList.length - 1];\n                const containerCandidates = this.elem.querySelectorAll(`g#${containerID}`);\n                if (containerCandidates.length >= 1) {\n                    const container = containerCandidates[0];\n                    // If this is the first time we're entering the group, the\n                    // group should be empty.\n                    // Otherwise, this may be a case that would break z-ordering.\n                    if (container.children.length === 0 ||\n                        this.lastContainerIDList.length >= containerIDList.length) {\n                        // Move all objectElems to the found container\n                        for (const elem of this.objectElems) {\n                            elem.remove();\n                            container.appendChild(elem);\n                        }\n                    }\n                    else {\n                        containerIDList = [];\n                    }\n                }\n            }\n            else {\n                containerIDList = [];\n            }\n            this.lastContainerIDList = containerIDList;\n        }\n        // Add class names to the object, if given.\n        if (elemClassNames && this.objectElems) {\n            if (this.objectElems.length === 1) {\n                this.objectElems[0].classList.add(...elemClassNames);\n            }\n            else {\n                const wrapper = document.createElementNS(svgNameSpace, 'g');\n                wrapper.classList.add(...elemClassNames);\n                for (const elem of this.objectElems) {\n                    elem.remove();\n                    wrapper.appendChild(elem);\n                }\n                this.elem.appendChild(wrapper);\n            }\n        }\n    }\n    // Not implemented -- use drawPath instead.\n    unimplementedMessage() {\n        throw new Error('Not implemenented!');\n    }\n    beginPath(_startPoint) {\n        this.unimplementedMessage();\n    }\n    endPath(_style) {\n        this.unimplementedMessage();\n    }\n    lineTo(_point) {\n        this.unimplementedMessage();\n    }\n    moveTo(_point) {\n        this.unimplementedMessage();\n    }\n    traceCubicBezierCurve(_controlPoint1, _controlPoint2, _endPoint) {\n        this.unimplementedMessage();\n    }\n    traceQuadraticBezierCurve(_controlPoint, _endPoint) {\n        this.unimplementedMessage();\n    }\n    drawPoints(...points) {\n        points.map((point) => {\n            const elem = document.createElementNS(svgNameSpace, 'circle');\n            elem.setAttribute('cx', `${point.x}`);\n            elem.setAttribute('cy', `${point.y}`);\n            elem.setAttribute('r', '15');\n            this.elem.appendChild(elem);\n        });\n    }\n    /**\n     * Adds a **copy** of the given element directly to the container\n     * SVG element, **without applying transforms**.\n     *\n     * If `sanitize` is enabled, this does nothing.\n     */\n    drawSVGElem(elem) {\n        if (this.sanitize) {\n            return;\n        }\n        // Don't add multiple copies of the default stylesheet.\n        if (elem.tagName.toLowerCase() === 'style' &&\n            elem.getAttribute('id') === renderedStylesheetId) {\n            return;\n        }\n        const elemToDraw = elem.cloneNode(true);\n        this.elem.appendChild(elemToDraw);\n        this.objectElems?.push(elemToDraw);\n    }\n    /**\n     * Allows rendering directly to the underlying SVG element. Rendered\n     * content is added to a `<g>` element that's passed as `parent` to `callback`.\n     *\n     * **Note**: Unlike {@link drawSVGElem}, this method can be used even if `sanitize` is `true`.\n     * In this case, it's the responsibility of `callback` to ensure that everything added\n     * to `parent` is safe to render.\n     */\n    drawWithSVGParent(callback) {\n        const parent = document.createElementNS(svgNameSpace, 'g');\n        this.transformFrom(Mat33.identity, parent, true);\n        callback(parent, { sanitize: this.sanitize });\n        this.elem.appendChild(parent);\n        this.objectElems?.push(parent);\n    }\n    isTooSmallToRender(_rect) {\n        return false;\n    }\n    /**\n     * Creates a new SVG element and `SVGRenerer` with `width`, `height`, `viewBox`,\n     * and other metadata attributes set for the given `Viewport`.\n     *\n     * If `options` is a `boolean`, it is interpreted as whether to sanitize (not add unknown\n     * SVG entities to) the output.\n     */\n    static fromViewport(viewport, options = true) {\n        let sanitize;\n        let useViewBoxForPositioning;\n        if (typeof options === 'boolean') {\n            sanitize = options;\n            useViewBoxForPositioning = false;\n        }\n        else {\n            sanitize = options.sanitize ?? true;\n            useViewBoxForPositioning = options.useViewBoxForPositioning ?? false;\n        }\n        const svgNameSpace = 'http://www.w3.org/2000/svg';\n        const result = document.createElementNS(svgNameSpace, 'svg');\n        const screenRectSize = viewport.getScreenRectSize();\n        const visibleRect = viewport.visibleRect;\n        let viewBoxComponents;\n        if (useViewBoxForPositioning) {\n            const exportRect = viewport.visibleRect;\n            viewBoxComponents = [exportRect.x, exportRect.y, exportRect.w, exportRect.h];\n            // Replace the viewport with a copy that has a modified transform.\n            // (Avoids modifying the original viewport).\n            viewport = viewport.getTemporaryClone();\n            // TODO: This currently discards any rotation information.\n            // Render with (0,0) at (0,0) -- the translation is handled by the viewBox.\n            viewport.resetTransform(Mat33.identity);\n        }\n        else {\n            viewBoxComponents = [0, 0, screenRectSize.x, screenRectSize.y];\n        }\n        // rect.x -> size of rect in x direction, rect.y -> size of rect in y direction.\n        result.setAttribute('viewBox', viewBoxComponents.map((part) => toRoundedString(part)).join(' '));\n        result.setAttribute('width', toRoundedString(screenRectSize.x));\n        result.setAttribute('height', toRoundedString(screenRectSize.y));\n        // Ensure the image can be identified as an SVG if downloaded.\n        // See https://jwatt.org/svg/authoring/\n        result.setAttribute('version', '1.1');\n        result.setAttribute('baseProfile', 'full');\n        result.setAttribute('xmlns', svgNameSpace);\n        const renderer = new SVGRenderer(result, viewport, sanitize);\n        if (!visibleRect.eq(viewport.visibleRect)) {\n            renderer.overrideVisibleRect(visibleRect);\n        }\n        return { element: result, renderer };\n    }\n}\n", "import  { assertUnreachable }  from '../../util/assertions.mjs';\nimport { Rect2, Vec2 } from '@js-draw/math';\nimport  { cssPrefix }  from './SelectionTool.mjs';\nvar HandleShape;\n(function (HandleShape) {\n    HandleShape[HandleShape[\"Circle\"] = 0] = \"Circle\";\n    HandleShape[HandleShape[\"Square\"] = 1] = \"Square\";\n})(HandleShape || (HandleShape = {}));\nexport var HandleAction;\n(function (HandleAction) {\n    HandleAction[\"ResizeXY\"] = \"resize-xy\";\n    HandleAction[\"Rotate\"] = \"rotate\";\n    HandleAction[\"ResizeX\"] = \"resize-x\";\n    HandleAction[\"ResizeY\"] = \"resize-y\";\n})(HandleAction || (HandleAction = {}));\n// The *interactable* handle size. The visual size will be slightly smaller.\nexport const handleSize = 30;\nexport default class SelectionHandle {\n    constructor(presentation, parent, viewport, onDragStart, onDragUpdate, onDragEnd) {\n        this.presentation = presentation;\n        this.parent = parent;\n        this.viewport = viewport;\n        this.onDragStart = onDragStart;\n        this.onDragUpdate = onDragUpdate;\n        this.onDragEnd = onDragEnd;\n        this.dragLastPos = null;\n        this.element = document.createElement('div');\n        this.element.classList.add(`${cssPrefix}handle`, `${cssPrefix}${presentation.action}`);\n        // Create a slightly smaller content/background element.\n        const visibleContent = document.createElement('div');\n        visibleContent.classList.add(`${cssPrefix}content`);\n        this.element.appendChild(visibleContent);\n        this.parentSide = presentation.side;\n        const icon = presentation.icon;\n        if (icon) {\n            visibleContent.appendChild(icon);\n            icon.classList.add('icon');\n        }\n        if (presentation.action === HandleAction.Rotate) {\n            this.shape = HandleShape.Circle;\n        }\n        else {\n            this.shape = HandleShape.Square;\n        }\n        switch (this.shape) {\n            case HandleShape.Circle:\n                this.element.classList.add(`${cssPrefix}circle`);\n                break;\n            case HandleShape.Square:\n                this.element.classList.add(`${cssPrefix}square`);\n                break;\n            default:\n                assertUnreachable(this.shape);\n        }\n        this.updatePosition();\n    }\n    /**\n     * Adds this to `container`, where `conatiner` should be the background/selection\n     * element visible on the screen.\n     */\n    addTo(container) {\n        container.appendChild(this.element);\n    }\n    /**\n     * Removes this element from its container. Should only be called\n     * after {@link addTo}.\n     */\n    remove() {\n        this.element.remove();\n    }\n    /**\n     * Returns this handle's bounding box relative to the top left of the\n     * selection box.\n     */\n    getBBoxParentCoords() {\n        const parentRect = this.parent.getScreenRegion();\n        const size = Vec2.of(handleSize, handleSize);\n        const topLeft = parentRect.size\n            .scale(this.parentSide)\n            // Center\n            .minus(size.times(1 / 2));\n        return new Rect2(topLeft.x, topLeft.y, size.x, size.y);\n    }\n    /** @returns this handle's bounding box relative to the canvas. */\n    getBBoxCanvasCoords() {\n        const parentRect = this.parent.region;\n        const size = Vec2.of(handleSize, handleSize).times(1 / this.viewport.getScaleFactor());\n        const topLeftFromParent = parentRect.size.scale(this.parentSide).minus(size.times(0.5));\n        return new Rect2(topLeftFromParent.x, topLeftFromParent.y, size.x, size.y).translatedBy(parentRect.topLeft);\n    }\n    /**\n     * Moves the HTML representation of this to the location matching its internal representation.\n     */\n    updatePosition() {\n        const bbox = this.getBBoxParentCoords();\n        // Position within the selection box.\n        this.element.style.marginLeft = `${bbox.topLeft.x}px`;\n        this.element.style.marginTop = `${bbox.topLeft.y}px`;\n        this.element.style.width = `${bbox.w}px`;\n        this.element.style.height = `${bbox.h}px`;\n    }\n    /** @returns true iff `point` (in editor **canvas** coordinates) is in this. */\n    containsPoint(point) {\n        const bbox = this.getBBoxCanvasCoords();\n        const delta = point.minus(bbox.center);\n        // Should have same x and y radius\n        const radius = bbox.size.x / 2;\n        let result;\n        if (this.shape === HandleShape.Circle) {\n            result = delta.magnitude() <= radius;\n        }\n        else {\n            result = Math.abs(delta.x) <= radius && Math.abs(delta.y) <= radius;\n        }\n        return result;\n    }\n    handleDragStart(pointer) {\n        this.onDragStart(pointer.canvasPos);\n        this.dragLastPos = pointer.canvasPos;\n        return true;\n    }\n    handleDragUpdate(pointer) {\n        if (!this.dragLastPos) {\n            return;\n        }\n        this.onDragUpdate(pointer.canvasPos);\n    }\n    handleDragEnd() {\n        if (!this.dragLastPos) {\n            return;\n        }\n        return this.onDragEnd();\n    }\n    setSnapToGrid(snap) {\n        this.snapToGrid = snap;\n    }\n    isSnappingToGrid() {\n        return this.snapToGrid;\n    }\n}\n", "import  describeComponentList  from '../components/util/describeComponentList.mjs';\nimport  { assertIsStringArray }  from '../util/assertions.mjs';\nimport  Erase  from './Erase.mjs';\nimport  SerializableCommand  from './SerializableCommand.mjs';\n/**\n * A command that duplicates the {@link AbstractComponent}s it's given. This command\n * is the reverse of an {@link Erase} command.\n *\n * @example\n * ```ts\n * // Given some editor...\n *\n * // Find all elements intersecting the rectangle with top left (0,0) and\n * // (width,height)=(100,100).\n * const elems = editor.image.getComponentsIntersecting(\n * \tnew Rect2(0, 0, 100, 100)\n * );\n *\n * // Create a command that, when applied, will duplicate the elements.\n * const duplicateElems = new Duplicate(elems);\n *\n * // Apply the command (and make it undoable)\n * editor.dispatch(duplicateElems);\n * ```\n *\n * @see {@link Editor.dispatch} {@link EditorImage.getComponentsIntersecting}\n */\nclass Duplicate extends SerializableCommand {\n    constructor(toDuplicate, \n    // @internal -- IDs given to the duplicate elements\n    idsForDuplicates) {\n        super('duplicate');\n        this.toDuplicate = toDuplicate;\n        this.duplicates = toDuplicate.map((elem, idx) => {\n            // For collaborative editing, it's important for the clones to have\n            // the same IDs as the originals\n            if (idsForDuplicates && idsForDuplicates[idx]) {\n                return elem.cloneWithId(idsForDuplicates[idx]);\n            }\n            else {\n                return elem.clone();\n            }\n        });\n        this.reverse = new Erase(this.duplicates);\n    }\n    apply(editor) {\n        this.reverse.unapply(editor);\n    }\n    unapply(editor) {\n        this.reverse.apply(editor);\n    }\n    onDrop(editor) {\n        this.reverse.onDrop(editor);\n    }\n    description(_editor, localizationTable) {\n        if (this.duplicates.length === 0) {\n            return localizationTable.duplicatedNoElements;\n        }\n        return localizationTable.duplicateAction(describeComponentList(localizationTable, this.duplicates) ?? localizationTable.elements, this.duplicates.length);\n    }\n    serializeToJSON() {\n        return {\n            originalIds: this.toDuplicate.map((elem) => elem.getId()),\n            cloneIds: this.duplicates.map((elem) => elem.getId()),\n        };\n    }\n}\n(() => {\n    SerializableCommand.register('duplicate', (json, editor) => {\n        let originalIds;\n        let cloneIds;\n        // Compatibility with older editors\n        if (Array.isArray(json)) {\n            originalIds = json;\n            cloneIds = [];\n        }\n        else {\n            originalIds = json.originalIds;\n            cloneIds = json.cloneIds;\n        }\n        assertIsStringArray(originalIds);\n        assertIsStringArray(cloneIds);\n        // Resolve to elements -- only keep the elements that can be found in the image.\n        const resolvedElements = [];\n        const filteredCloneIds = [];\n        for (let i = 0; i < originalIds.length; i++) {\n            const originalId = originalIds[i];\n            const foundElement = editor.image.lookupElement(originalId);\n            if (!foundElement) {\n                console.warn('Duplicate command: Could not find element with ID', originalId);\n            }\n            else {\n                filteredCloneIds.push(cloneIds[i]);\n                resolvedElements.push(foundElement);\n            }\n        }\n        return new Duplicate(resolvedElements, filteredCloneIds);\n    });\n})();\nexport default Duplicate;\n", "export var SelectionMode;\n(function (SelectionMode) {\n    SelectionMode[\"Lasso\"] = \"lasso\";\n    SelectionMode[\"Rectangle\"] = \"rect\";\n})(SelectionMode || (SelectionMode = {}));\nexport var ResizeMode;\n(function (ResizeMode) {\n    ResizeMode[ResizeMode[\"Both\"] = 0] = \"Both\";\n    ResizeMode[ResizeMode[\"HorizontalOnly\"] = 1] = \"HorizontalOnly\";\n    ResizeMode[ResizeMode[\"VerticalOnly\"] = 2] = \"VerticalOnly\";\n})(ResizeMode || (ResizeMode = {}));\nexport var TransformMode;\n(function (TransformMode) {\n    TransformMode[TransformMode[\"Snap\"] = 0] = \"Snap\";\n    TransformMode[TransformMode[\"NoSnap\"] = 1] = \"NoSnap\";\n})(TransformMode || (TransformMode = {}));\n", "import { Mat33, Vec2 } from '@js-draw/math';\nimport  Viewport  from '../../Viewport.mjs';\nimport  { ResizeMode }  from './types.mjs';\nexport class DragTransformer {\n    constructor(editor, selection) {\n        this.editor = editor;\n        this.selection = selection;\n    }\n    onDragStart(startPoint) {\n        this.selection.setTransform(Mat33.identity);\n        this.dragStartPoint = startPoint;\n    }\n    onDragUpdate(canvasPos) {\n        const delta = this.editor.viewport.roundPoint(canvasPos.minus(this.dragStartPoint));\n        this.selection.setTransform(Mat33.translation(delta));\n    }\n    onDragEnd() {\n        return this.selection.finalizeTransform();\n    }\n}\nexport class ResizeTransformer {\n    constructor(editor, selection) {\n        this.editor = editor;\n        this.selection = selection;\n        this.mode = ResizeMode.Both;\n    }\n    onDragStart(startPoint, mode) {\n        this.selection.setTransform(Mat33.identity);\n        this.mode = mode;\n        this.dragStartPoint = startPoint;\n        this.computeOriginAndScaleRate();\n    }\n    computeOriginAndScaleRate() {\n        // Store the index of the furthest corner from startPoint. We'll use that\n        // to determine where the transform considers (0, 0) (where we scale from).\n        const selectionRect = this.selection.preTransformRegion;\n        const selectionBoxCorners = selectionRect.corners;\n        let largestDistSquared = 0;\n        for (let i = 0; i < selectionBoxCorners.length; i++) {\n            const currentCorner = selectionBoxCorners[i];\n            const distSquaredToCurrent = this.dragStartPoint.minus(currentCorner).magnitudeSquared();\n            if (distSquaredToCurrent > largestDistSquared) {\n                largestDistSquared = distSquaredToCurrent;\n                this.transformOrigin = currentCorner;\n            }\n        }\n        // Determine whether moving the mouse to the right increases or decreases the width.\n        let widthScaleRate = 1;\n        let heightScaleRate = 1;\n        if (this.transformOrigin.x > selectionRect.center.x) {\n            widthScaleRate = -1;\n        }\n        if (this.transformOrigin.y > selectionRect.center.y) {\n            heightScaleRate = -1;\n        }\n        this.scaleRate = Vec2.of(widthScaleRate, heightScaleRate);\n    }\n    onDragUpdate(canvasPos) {\n        const canvasDelta = canvasPos.minus(this.dragStartPoint);\n        const origWidth = this.selection.preTransformRegion.width;\n        const origHeight = this.selection.preTransformRegion.height;\n        let scale = Vec2.of(1, 1);\n        if (this.mode === ResizeMode.HorizontalOnly) {\n            const newWidth = origWidth + canvasDelta.x * this.scaleRate.x;\n            scale = Vec2.of(newWidth / origWidth, scale.y);\n        }\n        if (this.mode === ResizeMode.VerticalOnly) {\n            const newHeight = origHeight + canvasDelta.y * this.scaleRate.y;\n            scale = Vec2.of(scale.x, newHeight / origHeight);\n        }\n        if (this.mode === ResizeMode.Both) {\n            const delta = Math.abs(canvasDelta.x) > Math.abs(canvasDelta.y) ? canvasDelta.x : canvasDelta.y;\n            const newWidth = origWidth + delta;\n            scale = Vec2.of(newWidth / origWidth, newWidth / origWidth);\n        }\n        // Round: If this isn't done, scaling can create numbers with long decimal representations.\n        //    long decimal representations => large file sizes.\n        scale = scale.map((component) => Viewport.roundScaleRatio(component, 2));\n        if (scale.x !== 0 && scale.y !== 0) {\n            const origin = this.editor.viewport.roundPoint(this.transformOrigin);\n            this.selection.setTransform(Mat33.scaling2D(scale, origin));\n        }\n    }\n    onDragEnd() {\n        return this.selection.finalizeTransform();\n    }\n}\nexport class RotateTransformer {\n    constructor(editor, selection) {\n        this.editor = editor;\n        this.selection = selection;\n        this.startAngle = 0;\n        this.targetRotation = 0;\n        this.maximumDistFromStart = 0;\n    }\n    getAngle(canvasPoint) {\n        const selectionCenter = this.selection.preTransformRegion.center;\n        const offset = canvasPoint.minus(selectionCenter);\n        return offset.angle();\n    }\n    roundAngle(angle) {\n        // Round angles to the nearest 16th of a turn\n        const roundingFactor = 16 / 2 / Math.PI;\n        return Math.round(angle * roundingFactor) / roundingFactor;\n    }\n    onDragStart(startPoint) {\n        this.startPoint = startPoint;\n        this.selection.setTransform(Mat33.identity);\n        this.startAngle = this.getAngle(startPoint);\n        this.targetRotation = 0;\n        // Used to determine whether the user clicked or not.\n        this.maximumDistFromStart = 0;\n        this.startTime = performance.now();\n    }\n    setRotationTo(angle) {\n        // Transform in canvas space\n        const canvasSelCenter = this.editor.viewport.roundPoint(this.selection.preTransformRegion.center);\n        const unrounded = Mat33.zRotation(angle);\n        const roundedRotationTransform = unrounded.mapEntries((entry) => Viewport.roundScaleRatio(entry));\n        const fullRoundedTransform = Mat33.translation(canvasSelCenter)\n            .rightMul(roundedRotationTransform)\n            .rightMul(Mat33.translation(canvasSelCenter.times(-1)));\n        this.selection.setTransform(fullRoundedTransform);\n    }\n    onDragUpdate(canvasPos) {\n        this.targetRotation = this.roundAngle(this.getAngle(canvasPos) - this.startAngle);\n        this.setRotationTo(this.targetRotation);\n        const distFromStart = canvasPos.minus(this.startPoint).magnitude();\n        if (distFromStart > this.maximumDistFromStart) {\n            this.maximumDistFromStart = distFromStart;\n        }\n    }\n    onDragEnd() {\n        // Anything with motion less than this is considered a click\n        const clickThresholdDist = 10;\n        const clickThresholdTime = 0.4; // s\n        const dragTimeSeconds = (performance.now() - this.startTime) / 1000;\n        if (dragTimeSeconds < clickThresholdTime &&\n            this.maximumDistFromStart < clickThresholdDist &&\n            this.targetRotation === 0) {\n            this.setRotationTo(-Math.PI / 2);\n        }\n        return this.selection.finalizeTransform();\n    }\n}\n", "import { Rect2, Vec2 } from '@js-draw/math';\nimport  { cssPrefix }  from './SelectionTool.mjs';\nconst verticalOffset = 40;\nexport default class SelectionMenuShortcut {\n    constructor(parent, viewport, icon, showContextMenu, localization) {\n        this.parent = parent;\n        this.viewport = viewport;\n        this.icon = icon;\n        this.localization = localization;\n        this.lastDragPointer = null;\n        this.element = document.createElement('div');\n        this.element.classList.add(`${cssPrefix}handle`, `${cssPrefix}selection-menu`);\n        this.element.style.setProperty('--vertical-offset', `${verticalOffset}px`);\n        this.onClick = () => {\n            this.button?.focus({ preventScroll: true });\n            const anchor = this.getBBoxCanvasCoords().center;\n            showContextMenu(anchor);\n        };\n        this.initUI();\n        this.updatePosition();\n    }\n    initUI() {\n        const button = document.createElement('button');\n        this.icon.classList.add('icon');\n        button.replaceChildren(this.icon);\n        button.ariaLabel = this.localization.selectionMenu__show;\n        button.title = button.ariaLabel;\n        this.button = button;\n        // To prevent editor event handlers from conflicting with those for the button,\n        // don't register a [click] handler. An onclick handler can be fired incorrectly\n        // in this case (in Chrome) after onClick is fired in onDragEnd, leading to a double\n        // on-click action.\n        button.onkeydown = (event) => {\n            if (event.key === 'Enter') {\n                // .preventDefault prevents [Enter] from activating the first item in the\n                // selection menu.\n                event.preventDefault();\n                this.onClick();\n            }\n        };\n        this.element.appendChild(button);\n        // Update the bounding box of this in response to the new button.\n        requestAnimationFrame(() => {\n            this.updatePosition();\n        });\n    }\n    addTo(container) {\n        container.appendChild(this.element);\n    }\n    remove() {\n        this.element.remove();\n    }\n    getElementScreenSize() {\n        return Vec2.of(this.element.clientWidth, this.element.clientHeight);\n    }\n    /** Gets this menu's bounding box relative to the top left of its parent. */\n    getBBoxParentCoords() {\n        const topLeft = Vec2.of(0, -verticalOffset);\n        const screenSize = this.getElementScreenSize();\n        return new Rect2(topLeft.x, topLeft.y, screenSize.x, screenSize.y);\n    }\n    getBBoxCanvasCoords() {\n        const parentCanvasRect = this.parent.region;\n        const toCanvasScale = this.viewport.getSizeOfPixelOnCanvas();\n        // Don't apply rotation -- rotation is handled by the selection container\n        const contentCanvasSize = this.getElementScreenSize().times(toCanvasScale);\n        const handleSizeCanvas = verticalOffset / this.viewport.getScaleFactor();\n        const topLeft = Vec2.of(parentCanvasRect.x, parentCanvasRect.y - handleSizeCanvas);\n        const minSize = Vec2.of(48, 48).times(toCanvasScale);\n        return new Rect2(topLeft.x, topLeft.y, contentCanvasSize.x, contentCanvasSize.y).grownToSize(minSize);\n    }\n    updatePosition() {\n        const bbox = this.getBBoxParentCoords();\n        // Position within the selection box.\n        this.element.style.marginLeft = `${bbox.topLeft.x}px`;\n        this.element.style.marginTop = `${bbox.topLeft.y}px`;\n    }\n    containsPoint(canvasPoint) {\n        return this.getBBoxCanvasCoords().containsPoint(canvasPoint);\n    }\n    handleDragStart(pointer) {\n        this.lastDragPointer = pointer;\n        return true;\n    }\n    handleDragUpdate(pointer) {\n        this.lastDragPointer = pointer;\n    }\n    handleDragEnd() {\n        if (this.lastDragPointer && this.containsPoint(this.lastDragPointer.canvasPos)) {\n            this.onClick();\n        }\n        this.lastDragPointer = null;\n    }\n}\n", "/**\n * @internal\n * @packageDocumentation\n */\nvar _a;\nimport  SerializableCommand  from '../../commands/SerializableCommand.mjs';\nimport { Mat33, Rect2, Vec2 } from '@js-draw/math';\nimport  SelectionHandle, { HandleAction, handleSize }  from './SelectionHandle.mjs';\nimport  { cssPrefix }  from './SelectionTool.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  Erase  from '../../commands/Erase.mjs';\nimport  Duplicate  from '../../commands/Duplicate.mjs';\nimport  { DragTransformer, ResizeTransformer, RotateTransformer }  from './TransformMode.mjs';\nimport  { ResizeMode }  from './types.mjs';\nimport  EditorImage  from '../../image/EditorImage.mjs';\nimport  uniteCommands  from '../../commands/uniteCommands.mjs';\nimport  SelectionMenuShortcut  from './SelectionMenuShortcut.mjs';\nimport  { assertIsNumberArray, assertIsStringArray }  from '../../util/assertions.mjs';\nimport  describeTransformation  from '../../util/describeTransformation.mjs';\nconst updateChunkSize = 100;\nconst maxPreviewElemCount = 500;\n// @internal\nclass Selection {\n    constructor(selectedElems, editor, showContextMenu) {\n        this.editor = editor;\n        // The last-computed bounding box of selected content\n        // @see getTightBoundingBox\n        this.selectionTightBoundingBox = null;\n        this.transform = Mat33.identity;\n        // invariant: sorted by increasing z-index\n        this.selectedElems = [];\n        this.hasParent = true;\n        // Maps IDs to whether we removed the component from the image\n        this.removedFromImage = {};\n        this.activeHandle = null;\n        this.backgroundDragging = false;\n        this.selectionDuplicatedAnimationTimeout = null;\n        selectedElems = [...selectedElems];\n        this.selectedElems = selectedElems;\n        this.originalRegion = Rect2.empty;\n        this.transformers = {\n            drag: new DragTransformer(editor, this),\n            resize: new ResizeTransformer(editor, this),\n            rotate: new RotateTransformer(editor, this),\n        };\n        // We need two containers for some CSS to apply (the outer container\n        // needs zero height, the inner needs to prevent the selection background\n        // from being visible outside of the editor).\n        this.outerContainer = document.createElement('div');\n        this.outerContainer.classList.add(`${cssPrefix}selection-outer-container`);\n        this.innerContainer = document.createElement('div');\n        this.innerContainer.classList.add(`${cssPrefix}selection-inner-container`);\n        this.backgroundElem = document.createElement('div');\n        this.backgroundElem.classList.add(`${cssPrefix}selection-background`);\n        this.innerContainer.appendChild(this.backgroundElem);\n        this.outerContainer.appendChild(this.innerContainer);\n        const makeResizeHandle = (mode, side) => {\n            const modeToAction = {\n                [ResizeMode.Both]: HandleAction.ResizeXY,\n                [ResizeMode.HorizontalOnly]: HandleAction.ResizeX,\n                [ResizeMode.VerticalOnly]: HandleAction.ResizeY,\n            };\n            return new SelectionHandle({\n                action: modeToAction[mode],\n                side,\n            }, this, this.editor.viewport, (startPoint) => this.transformers.resize.onDragStart(startPoint, mode), (currentPoint) => this.transformers.resize.onDragUpdate(currentPoint), () => this.transformers.resize.onDragEnd());\n        };\n        const resizeHorizontalHandles = [\n            makeResizeHandle(ResizeMode.HorizontalOnly, Vec2.of(0, 0.5)),\n            makeResizeHandle(ResizeMode.HorizontalOnly, Vec2.of(1, 0.5)),\n        ];\n        const resizeVerticalHandle = makeResizeHandle(ResizeMode.VerticalOnly, Vec2.of(0.5, 1));\n        const resizeBothHandle = makeResizeHandle(ResizeMode.Both, Vec2.of(1, 1));\n        const rotationHandle = new SelectionHandle({\n            action: HandleAction.Rotate,\n            side: Vec2.of(0.5, 0),\n            icon: this.editor.icons.makeRotateIcon(),\n        }, this, this.editor.viewport, (startPoint) => this.transformers.rotate.onDragStart(startPoint), (currentPoint) => this.transformers.rotate.onDragUpdate(currentPoint), () => this.transformers.rotate.onDragEnd());\n        const menuToggleButton = new SelectionMenuShortcut(this, this.editor.viewport, this.editor.icons.makeOverflowIcon(), showContextMenu, this.editor.localization);\n        this.childwidgets = [\n            menuToggleButton,\n            resizeBothHandle,\n            ...resizeHorizontalHandles,\n            resizeVerticalHandle,\n            rotationHandle,\n        ];\n        for (const widget of this.childwidgets) {\n            widget.addTo(this.backgroundElem);\n        }\n        this.recomputeRegion();\n        this.updateUI();\n    }\n    // @internal Intended for unit tests\n    getBackgroundElem() {\n        return this.backgroundElem;\n    }\n    getTransform() {\n        return this.transform;\n    }\n    get preTransformRegion() {\n        return this.originalRegion;\n    }\n    // The **canvas** region.\n    get region() {\n        // TODO: This currently assumes that the region rotates about its center.\n        // This may not be true.\n        const rotationMatrix = Mat33.zRotation(this.regionRotation, this.originalRegion.center);\n        const scaleAndTranslateMat = this.transform.rightMul(rotationMatrix.inverse());\n        return this.originalRegion.transformedBoundingBox(scaleAndTranslateMat);\n    }\n    /**\n     * Computes and returns the bounding box of the selection without\n     * any additional padding. Computes directly from the elements that are selected.\n     * @internal\n     */\n    computeTightBoundingBox() {\n        const bbox = this.selectedElems.reduce((accumulator, elem) => {\n            return (accumulator ?? elem.getBBox()).union(elem.getBBox());\n        }, null);\n        return bbox ?? Rect2.empty;\n    }\n    get regionRotation() {\n        return this.transform.transformVec3(Vec2.unitX).angle();\n    }\n    get preTransformedScreenRegion() {\n        const toScreen = (vec) => this.editor.viewport.canvasToScreen(vec);\n        return Rect2.fromCorners(toScreen(this.preTransformRegion.topLeft), toScreen(this.preTransformRegion.bottomRight));\n    }\n    get preTransformedScreenRegionRotation() {\n        return this.editor.viewport.getRotationAngle();\n    }\n    getScreenRegion() {\n        const toScreen = this.editor.viewport.canvasToScreenTransform;\n        const scaleFactor = this.editor.viewport.getScaleFactor();\n        const screenCenter = toScreen.transformVec2(this.region.center);\n        return new Rect2(screenCenter.x, screenCenter.y, scaleFactor * this.region.width, scaleFactor * this.region.height).translatedBy(this.region.size.times(-scaleFactor / 2));\n    }\n    get screenRegionRotation() {\n        return this.regionRotation + this.editor.viewport.getRotationAngle();\n    }\n    // Applies, previews, but doesn't finalize the given transformation.\n    setTransform(transform, preview = true) {\n        this.transform = transform;\n        if (preview && this.hasParent) {\n            this.previewTransformCmds();\n        }\n    }\n    getDeltaZIndexToMoveSelectionToTop() {\n        if (this.selectedElems.length === 0) {\n            return 0;\n        }\n        const selectedBottommostZIndex = this.selectedElems[0].getZIndex();\n        const visibleObjects = this.editor.image.getComponentsIntersecting(this.region);\n        const topMostVisibleZIndex = visibleObjects[visibleObjects.length - 1]?.getZIndex() ?? selectedBottommostZIndex;\n        const deltaZIndex = topMostVisibleZIndex + 1 - selectedBottommostZIndex;\n        return deltaZIndex;\n    }\n    // Applies the current transformation to the selection\n    finalizeTransform() {\n        const fullTransform = this.transform;\n        const selectedElems = this.selectedElems;\n        // Reset for the next drag\n        this.originalRegion = this.originalRegion.transformedBoundingBox(this.transform);\n        this.transform = Mat33.identity;\n        this.scrollTo();\n        let transformPromise = undefined;\n        // Make the commands undo-able.\n        // Don't check for non-empty transforms because this breaks changing the\n        // z-index of the just-transformed commands.\n        if (this.selectedElems.length > 0) {\n            const deltaZIndex = this.getDeltaZIndexToMoveSelectionToTop();\n            transformPromise = this.editor.dispatch(new _a.ApplyTransformationCommand(this, selectedElems, this.originalRegion.center, fullTransform, deltaZIndex));\n        }\n        return transformPromise;\n    }\n    /** Sends all selected elements to the bottom of the visible image. */\n    sendToBack() {\n        const visibleObjects = this.editor.image.getComponentsIntersecting(this.editor.viewport.visibleRect);\n        // VisibleObjects and selectedElems should both be sorted by z-index\n        const lowestVisibleZIndex = visibleObjects[0]?.getZIndex() ?? 0;\n        const highestSelectedZIndex = this.selectedElems[this.selectedElems.length - 1]?.getZIndex() ?? 0;\n        const targetHighestZIndex = lowestVisibleZIndex - 1;\n        const deltaZIndex = targetHighestZIndex - highestSelectedZIndex;\n        if (deltaZIndex !== 0) {\n            const commands = this.selectedElems.map((elem) => {\n                return elem.setZIndex(elem.getZIndex() + deltaZIndex);\n            });\n            return uniteCommands(commands, updateChunkSize);\n        }\n        return null;\n    }\n    // Preview the effects of the current transformation on the selection\n    previewTransformCmds() {\n        if (this.selectedElems.length === 0) {\n            return;\n        }\n        // Don't render what we're moving if it's likely to be slow.\n        if (this.selectedElems.length > maxPreviewElemCount) {\n            this.updateUI();\n            return;\n        }\n        const wetInkRenderer = this.editor.display.getWetInkRenderer();\n        wetInkRenderer.clear();\n        wetInkRenderer.pushTransform(this.transform);\n        const viewportVisibleRect = this.editor.viewport.visibleRect.union(this.region);\n        const visibleRect = viewportVisibleRect.transformedBoundingBox(this.transform.inverse());\n        for (const elem of this.selectedElems) {\n            elem.render(wetInkRenderer, visibleRect);\n        }\n        wetInkRenderer.popTransform();\n        this.updateUI();\n    }\n    // Recompute this' region from the selected elements.\n    // Returns false if the selection is empty.\n    recomputeRegion() {\n        const newRegion = this.computeTightBoundingBox();\n        this.selectionTightBoundingBox = newRegion;\n        if (!newRegion) {\n            this.cancelSelection();\n            return false;\n        }\n        this.originalRegion = newRegion;\n        this.padRegion();\n        return true;\n    }\n    // Applies padding to the current region if it is too small.\n    // @internal\n    padRegion() {\n        const sourceRegion = this.selectionTightBoundingBox ?? this.originalRegion;\n        const minSize = this.getMinCanvasSize();\n        if (sourceRegion.w < minSize || sourceRegion.h < minSize) {\n            // Add padding\n            const padding = minSize / 2;\n            this.originalRegion = Rect2.bboxOf(sourceRegion.corners, padding);\n            this.updateUI();\n        }\n    }\n    getMinCanvasSize() {\n        const canvasHandleSize = handleSize / this.editor.viewport.getScaleFactor();\n        return canvasHandleSize * 2;\n    }\n    getSelectedItemCount() {\n        return this.selectedElems.length;\n    }\n    // @internal\n    updateUI() {\n        // Don't update old selections.\n        if (!this.hasParent) {\n            return;\n        }\n        const screenRegion = this.getScreenRegion();\n        // marginLeft, marginTop: Display relative to the top left of the selection overlay.\n        // left, top don't work for this.\n        this.backgroundElem.style.marginLeft = `${screenRegion.topLeft.x}px`;\n        this.backgroundElem.style.marginTop = `${screenRegion.topLeft.y}px`;\n        this.backgroundElem.style.width = `${screenRegion.width}px`;\n        this.backgroundElem.style.height = `${screenRegion.height}px`;\n        const rotationDeg = (this.screenRegionRotation * 180) / Math.PI;\n        this.backgroundElem.style.transform = `rotate(${rotationDeg}deg)`;\n        this.backgroundElem.style.transformOrigin = 'center';\n        // If closer to perpendicular, apply different CSS\n        const perpendicularClassName = `${cssPrefix}rotated-near-perpendicular`;\n        if (Math.abs(Math.sin(this.screenRegionRotation)) > 0.5) {\n            this.innerContainer.classList.add(perpendicularClassName);\n        }\n        else {\n            this.innerContainer.classList.remove(perpendicularClassName);\n        }\n        // Hide handles when empty\n        if (screenRegion.width === 0 && screenRegion.height === 0) {\n            this.innerContainer.classList.add('-empty');\n        }\n        else {\n            this.innerContainer.classList.remove('-empty');\n        }\n        for (const widget of this.childwidgets) {\n            widget.updatePosition(this.getScreenRegion());\n        }\n    }\n    // Add/remove the contents of this seleciton from the editor.\n    // Used to prevent previewed content from looking like duplicate content\n    // while dragging.\n    //\n    // Does nothing if a large number of elements are selected (and so modifying\n    // the editor image is likely to be slow.)\n    //\n    // If removed from the image, selected elements are drawn as wet ink.\n    //\n    // [inImage] should be `true` if the selected elements should be added to the\n    // main image, `false` if they should be removed.\n    addRemoveSelectionFromImage(inImage) {\n        // Don't hide elements if doing so will be slow.\n        if (!inImage && this.selectedElems.length > maxPreviewElemCount) {\n            return;\n        }\n        for (const elem of this.selectedElems) {\n            const parent = this.editor.image.findParent(elem);\n            if (!inImage && parent) {\n                this.removedFromImage[elem.getId()] = true;\n                parent.remove();\n            }\n            // If we're making things visible and the selected object wasn't previously\n            // visible,\n            else if (!parent && this.removedFromImage[elem.getId()]) {\n                EditorImage.addComponent(elem).apply(this.editor);\n                this.removedFromImage[elem.getId()] = false;\n                delete this.removedFromImage[elem.getId()];\n            }\n        }\n        // Don't await queueRerender. If we're running in a test, the re-render might never\n        // happen.\n        this.editor.queueRerender().then(() => {\n            if (!inImage) {\n                this.previewTransformCmds();\n            }\n            else {\n                // Clear renderings of any in-progress transformations\n                const wetInkRenderer = this.editor.display.getWetInkRenderer();\n                wetInkRenderer.clear();\n            }\n        });\n    }\n    removeDeletedElemsFromSelection() {\n        // Remove any deleted elements from the selection.\n        this.selectedElems = this.selectedElems.filter((elem) => {\n            const hasParent = !!this.editor.image.findParent(elem);\n            // If we removed the element and haven't added it back yet, don't remove it\n            // from the selection.\n            const weRemoved = this.removedFromImage[elem.getId()];\n            return hasParent || weRemoved;\n        });\n    }\n    onDragStart(pointer) {\n        // If empty, it isn't possible to drag\n        if (this.selectedElems.length === 0) {\n            return false;\n        }\n        // Clear the HTML selection (prevent HTML drag and drop being triggered by this drag)\n        document.getSelection()?.removeAllRanges();\n        this.activeHandle = null;\n        let result = false;\n        this.backgroundDragging = false;\n        if (this.region.containsPoint(pointer.canvasPos)) {\n            this.backgroundDragging = true;\n            result = true;\n        }\n        for (const widget of this.childwidgets) {\n            if (widget.containsPoint(pointer.canvasPos)) {\n                this.activeHandle = widget;\n                this.backgroundDragging = false;\n                result = true;\n            }\n        }\n        if (result) {\n            this.removeDeletedElemsFromSelection();\n            this.addRemoveSelectionFromImage(false);\n        }\n        if (this.activeHandle) {\n            this.activeHandle.handleDragStart(pointer);\n        }\n        if (this.backgroundDragging) {\n            this.transformers.drag.onDragStart(pointer.canvasPos);\n        }\n        return result;\n    }\n    onDragUpdate(pointer) {\n        if (this.backgroundDragging) {\n            this.transformers.drag.onDragUpdate(pointer.canvasPos);\n        }\n        if (this.activeHandle) {\n            this.activeHandle.handleDragUpdate(pointer);\n        }\n    }\n    onDragEnd() {\n        if (this.backgroundDragging) {\n            this.transformers.drag.onDragEnd();\n        }\n        else if (this.activeHandle) {\n            this.activeHandle.handleDragEnd();\n        }\n        this.addRemoveSelectionFromImage(true);\n        this.backgroundDragging = false;\n        this.activeHandle = null;\n        this.updateUI();\n    }\n    onDragCancel() {\n        this.backgroundDragging = false;\n        this.activeHandle = null;\n        this.setTransform(Mat33.identity);\n        this.addRemoveSelectionFromImage(true);\n        this.updateUI();\n    }\n    // Scroll the viewport to this. Does not zoom\n    scrollTo() {\n        if (this.selectedElems.length === 0) {\n            return false;\n        }\n        const screenSize = this.editor.viewport.getScreenRectSize();\n        const screenRect = new Rect2(0, 0, screenSize.x, screenSize.y);\n        const selectionScreenRegion = this.getScreenRegion();\n        if (!screenRect.containsPoint(selectionScreenRegion.center)) {\n            const targetPointScreen = selectionScreenRegion.center;\n            const closestPointScreen = screenRect.getClosestPointOnBoundaryTo(targetPointScreen);\n            const closestPointCanvas = this.editor.viewport.screenToCanvas(closestPointScreen);\n            const targetPointCanvas = this.region.center;\n            const delta = closestPointCanvas.minus(targetPointCanvas);\n            this.editor.dispatchNoAnnounce(Viewport.transformBy(Mat33.translation(delta.times(0.5))), false);\n            this.editor.queueRerender().then(() => {\n                this.previewTransformCmds();\n            });\n            return true;\n        }\n        return false;\n    }\n    deleteSelectedObjects() {\n        if (this.backgroundDragging || this.activeHandle) {\n            this.onDragEnd();\n        }\n        return new Erase(this.selectedElems);\n    }\n    runSelectionDuplicatedAnimation() {\n        if (this.selectionDuplicatedAnimationTimeout) {\n            clearTimeout(this.selectionDuplicatedAnimationTimeout);\n        }\n        const animationDuration = 400; // ms\n        this.backgroundElem.style.animation = `${animationDuration}ms ease selection-duplicated-animation`;\n        this.selectionDuplicatedAnimationTimeout = setTimeout(() => {\n            this.backgroundElem.style.animation = '';\n            this.selectionDuplicatedAnimationTimeout = null;\n        }, animationDuration);\n    }\n    async duplicateSelectedObjects() {\n        const wasTransforming = this.backgroundDragging || this.activeHandle;\n        let tmpApplyCommand = null;\n        if (!wasTransforming) {\n            this.runSelectionDuplicatedAnimation();\n        }\n        let command;\n        if (wasTransforming) {\n            // Don't update the selection's focus when redoing/undoing\n            const selectionToUpdate = null;\n            const deltaZIndex = this.getDeltaZIndexToMoveSelectionToTop();\n            tmpApplyCommand = new _a.ApplyTransformationCommand(selectionToUpdate, this.selectedElems, this.region.center, this.transform, deltaZIndex);\n            // Transform to ensure that the duplicates are in the correct location\n            await tmpApplyCommand.apply(this.editor);\n            // Show items again\n            this.addRemoveSelectionFromImage(true);\n            // With the transformation applied, create the duplicates\n            command = uniteCommands(this.selectedElems.map((elem) => {\n                return EditorImage.addComponent(elem.clone());\n            }));\n            // Move the selected objects back to the correct location.\n            await tmpApplyCommand?.unapply(this.editor);\n            this.addRemoveSelectionFromImage(false);\n            this.previewTransformCmds();\n            this.updateUI();\n        }\n        else {\n            command = new Duplicate(this.selectedElems);\n        }\n        return command;\n    }\n    snapSelectedObjectsToGrid() {\n        const viewport = this.editor.viewport;\n        // Snap the top left corner of what we have selected.\n        const topLeftOfBBox = this.computeTightBoundingBox().topLeft;\n        const snappedTopLeft = viewport.snapToGrid(topLeftOfBBox);\n        const snapDelta = snappedTopLeft.minus(topLeftOfBBox);\n        const oldTransform = this.getTransform();\n        this.setTransform(oldTransform.rightMul(Mat33.translation(snapDelta)));\n        this.finalizeTransform();\n    }\n    setHandlesVisible(showHandles) {\n        if (!showHandles) {\n            this.innerContainer.classList.add('-hide-handles');\n        }\n        else {\n            this.innerContainer.classList.remove('-hide-handles');\n        }\n    }\n    addTo(elem) {\n        if (this.outerContainer.parentElement) {\n            this.outerContainer.remove();\n        }\n        elem.appendChild(this.outerContainer);\n        this.hasParent = true;\n    }\n    setToPoint(point) {\n        this.originalRegion = this.originalRegion.grownToPoint(point);\n        this.selectionTightBoundingBox = null;\n        this.updateUI();\n    }\n    cancelSelection() {\n        if (this.outerContainer.parentElement) {\n            this.outerContainer.remove();\n        }\n        this.originalRegion = Rect2.empty;\n        this.selectionTightBoundingBox = null;\n        this.hasParent = false;\n    }\n    getSelectedObjects() {\n        return [...this.selectedElems];\n    }\n}\n_a = Selection;\n(() => {\n    SerializableCommand.register('selection-tool-transform', (json, _editor) => {\n        const rawTransformArray = json.transform;\n        const rawCenterArray = json.selectionCenter ?? [0, 0];\n        const rawElementIds = json.elems ?? [];\n        assertIsNumberArray(rawTransformArray);\n        assertIsNumberArray(rawCenterArray);\n        assertIsStringArray(rawElementIds);\n        // The selection box is lost when serializing/deserializing. No need to store box rotation\n        const fullTransform = new Mat33(...rawTransformArray);\n        const elemIds = rawElementIds;\n        const deltaZIndex = parseInt(json.deltaZIndex ?? 0);\n        const center = Vec2.of(rawCenterArray[0] ?? 0, rawCenterArray[1] ?? 0);\n        return new _a.ApplyTransformationCommand(null, elemIds, center, fullTransform, deltaZIndex);\n    });\n})();\nSelection.ApplyTransformationCommand = class extends SerializableCommand {\n    constructor(selection, \n    // If a `string[]`, selectedElems is a list of element IDs.\n    selectedElems, \n    // Information used to describe the transformation\n    selectionCenter, \n    // Full transformation used to transform elements.\n    fullTransform, deltaZIndex) {\n        super('selection-tool-transform');\n        this.selection = selection;\n        this.selectionCenter = selectionCenter;\n        this.fullTransform = fullTransform;\n        this.deltaZIndex = deltaZIndex;\n        const isIDList = (arr) => {\n            return typeof arr[0] === 'string';\n        };\n        // If a list of element IDs,\n        if (isIDList(selectedElems)) {\n            this.selectedElemIds = selectedElems;\n        }\n        else {\n            this.selectedElemIds = selectedElems.map((elem) => elem.getId());\n            this.transformCommands = selectedElems.map((elem) => {\n                return elem.setZIndexAndTransformBy(this.fullTransform, elem.getZIndex() + deltaZIndex);\n            });\n        }\n    }\n    resolveToElems(editor, isUndoing) {\n        if (this.transformCommands) {\n            return;\n        }\n        this.transformCommands = this.selectedElemIds\n            .map((id) => {\n            const elem = editor.image.lookupElement(id);\n            if (!elem) {\n                // There may be valid reasons for an element lookup to fail:\n                // For example, if the element was deleted remotely and the remote deletion\n                // hasn't been undone.\n                console.warn(`Unable to find element with ID, ${id}.`);\n                return null;\n            }\n            let originalZIndex = elem.getZIndex();\n            let targetZIndex = elem.getZIndex() + this.deltaZIndex;\n            // If the command has already been applied, the element should currently\n            // have the target z-index.\n            if (isUndoing) {\n                targetZIndex = elem.getZIndex();\n                originalZIndex = elem.getZIndex() - this.deltaZIndex;\n            }\n            return elem.setZIndexAndTransformBy(this.fullTransform, targetZIndex, originalZIndex);\n        })\n            .filter(\n        // Remove all null commands\n        (command) => command !== null);\n    }\n    async apply(editor) {\n        this.resolveToElems(editor, false);\n        this.selection?.setTransform(this.fullTransform, false);\n        this.selection?.updateUI();\n        await editor.asyncApplyCommands(this.transformCommands, updateChunkSize);\n        this.selection?.setTransform(Mat33.identity, false);\n        this.selection?.recomputeRegion();\n        this.selection?.updateUI();\n    }\n    async unapply(editor) {\n        this.resolveToElems(editor, true);\n        this.selection?.setTransform(this.fullTransform.inverse(), false);\n        this.selection?.updateUI();\n        await editor.asyncUnapplyCommands(this.transformCommands, updateChunkSize, true);\n        this.selection?.setTransform(Mat33.identity, false);\n        this.selection?.recomputeRegion();\n        this.selection?.updateUI();\n    }\n    serializeToJSON() {\n        return {\n            elems: this.selectedElemIds,\n            transform: this.fullTransform.toArray(),\n            deltaZIndex: this.deltaZIndex,\n            selectionCenter: this.selectionCenter.asArray(),\n        };\n    }\n    description(_editor, localizationTable) {\n        return localizationTable.transformedElements(this.selectedElemIds.length, describeTransformation(this.selectionCenter, this.fullTransform, false, localizationTable));\n    }\n};\nexport default Selection;\n", "import { Rect2, Vec2 } from '@js-draw/math';\nimport  untilNextAnimationFrame  from '../../util/untilNextAnimationFrame.mjs';\n/**\n * Automatically scrolls the viewport such that the user's pointer is visible.\n */\nexport default class ToPointerAutoscroller {\n    constructor(viewport, scrollByCanvasDelta) {\n        this.viewport = viewport;\n        this.scrollByCanvasDelta = scrollByCanvasDelta;\n        this.started = false;\n        this.updateLoopId = 0;\n        this.updateLoopRunning = false;\n        this.targetPoint = null;\n        this.scrollRate = 1000; // px/s\n    }\n    getScrollForPoint(screenPoint) {\n        const screenSize = this.viewport.getScreenRectSize();\n        const screenRect = new Rect2(0, 0, screenSize.x, screenSize.y);\n        // Starts autoscrolling when the cursor is **outside of** this region\n        const marginSize = 44;\n        const autoscrollBoundary = screenRect.grownBy(-marginSize);\n        if (autoscrollBoundary.containsPoint(screenPoint)) {\n            return Vec2.zero;\n        }\n        const closestEdgePoint = autoscrollBoundary.getClosestPointOnBoundaryTo(screenPoint);\n        const distToEdge = closestEdgePoint.distanceTo(screenPoint);\n        const toEdge = closestEdgePoint.minus(screenPoint);\n        // Go faster for points further away from the boundary.\n        const maximumScaleFactor = 1.25;\n        const scaleFactor = Math.min(distToEdge / marginSize, maximumScaleFactor);\n        return toEdge.normalizedOrZero().times(scaleFactor);\n    }\n    start() {\n        this.started = true;\n    }\n    onPointerMove(pointerScreenPosition) {\n        if (!this.started) {\n            return;\n        }\n        if (this.getScrollForPoint(pointerScreenPosition) === Vec2.zero) {\n            this.stopUpdateLoop();\n        }\n        else {\n            this.targetPoint = pointerScreenPosition;\n            this.startUpdateLoop();\n        }\n    }\n    stop() {\n        this.targetPoint = null;\n        this.started = false;\n        this.stopUpdateLoop();\n    }\n    startUpdateLoop() {\n        if (this.updateLoopRunning) {\n            return;\n        }\n        (async () => {\n            this.updateLoopId++;\n            const currentUpdateLoopId = this.updateLoopId;\n            let lastUpdateTime = performance.now();\n            while (this.updateLoopId === currentUpdateLoopId && this.targetPoint) {\n                this.updateLoopRunning = true;\n                const currentTime = performance.now();\n                const deltaTimeMs = currentTime - lastUpdateTime;\n                const scrollDirection = this.getScrollForPoint(this.targetPoint);\n                const screenScrollAmount = scrollDirection.times((this.scrollRate * deltaTimeMs) / 1000);\n                this.scrollByCanvasDelta(this.viewport.screenToCanvasTransform.transformVec3(screenScrollAmount));\n                lastUpdateTime = currentTime;\n                await untilNextAnimationFrame();\n            }\n            this.updateLoopRunning = false;\n        })();\n    }\n    stopUpdateLoop() {\n        this.updateLoopId++;\n    }\n}\n", "/** Returns a promise that resolves after `timeout` milliseconds. */\nconst waitForTimeout = (timeout) => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(), timeout);\n    });\n};\nexport default waitForTimeout;\n", "import  waitForTimeout  from '../../util/waitForTimeout.mjs';\nimport  { EditorEventType }  from '../../types.mjs';\nlet idCounter = 0;\nconst createMenuOverlay = async (editor, canvasAnchor, options) => {\n    const overlay = document.createElement('div');\n    const { remove: removeOverlay } = editor.createHTMLOverlay(overlay);\n    const menuModal = document.createElement('dialog');\n    menuModal.classList.add('editor-popup-menu');\n    const hideMenuTimeout = 240;\n    menuModal.style.setProperty('--hide-menu-animation-timeout', `${hideMenuTimeout}ms`);\n    const updateMenuLocation = () => {\n        const overlayRect = editor.getOutputBBoxInDOM();\n        const anchor = editor.viewport.canvasToScreen(canvasAnchor).plus(overlayRect.topLeft);\n        menuModal.style.setProperty('--anchor-x', `${anchor.x}px`);\n        menuModal.style.setProperty('--anchor-y', `${anchor.y}px`);\n    };\n    updateMenuLocation();\n    const viewportChangeListener = editor.notifier.on(EditorEventType.ViewportChanged, updateMenuLocation);\n    overlay.appendChild(menuModal);\n    let dismissing = false;\n    const dismissMenu = async () => {\n        if (dismissing)\n            return;\n        dismissing = true;\n        viewportChangeListener.remove();\n        menuModal.classList.add('-hide');\n        await waitForTimeout(hideMenuTimeout);\n        menuModal.close();\n    };\n    return new Promise((resolve) => {\n        let resolved = false;\n        let result = null;\n        const resolveWithSelectedResult = () => {\n            if (!resolved) {\n                resolve(result);\n                resolved = true;\n            }\n        };\n        menuModal.onclose = () => {\n            removeOverlay();\n            resolveWithSelectedResult();\n        };\n        const onOptionSelected = (key) => {\n            result = key;\n            void dismissMenu();\n            // To properly handle clipboard events, this needs to be called synchronously\n            // and not after a delay:\n            resolveWithSelectedResult();\n        };\n        editor.handlePointerEventsExceptClicksFrom(menuModal, (eventName, event) => {\n            if (event.target === menuModal && eventName === 'pointerdown') {\n                void dismissMenu();\n                return true;\n            }\n            else if (dismissing) {\n                // Send pointer events to the editor if the dialog is in the process of being\n                // dismissed (e.g. pointermove events just after a pointerdown outside of the\n                // editor).\n                return true;\n            }\n            return false;\n        }, (_eventName, event) => {\n            return event.target === menuModal;\n        });\n        const contentElement = document.createElement('div');\n        contentElement.classList.add('content');\n        contentElement.role = 'menu';\n        const optionElements = [];\n        // Keyboard focus handling as described in\n        // - https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/menu_role and\n        // - https://www.w3.org/WAI/ARIA/apg/patterns/disclosure/examples/disclosure-navigation/\n        contentElement.addEventListener('keydown', (event) => {\n            const focusedIndex = optionElements.findIndex((item) => item === document.activeElement);\n            if (focusedIndex === -1)\n                return;\n            let newFocusedIndex = focusedIndex;\n            if (event.key === 'ArrowDown') {\n                newFocusedIndex++;\n            }\n            else if (event.key === 'ArrowUp') {\n                newFocusedIndex--;\n            }\n            else if (event.key === 'End') {\n                newFocusedIndex = optionElements.length - 1;\n            }\n            else if (event.key === 'Home') {\n                newFocusedIndex = 0;\n            }\n            if (newFocusedIndex < 0) {\n                newFocusedIndex += optionElements.length;\n            }\n            newFocusedIndex %= optionElements.length;\n            if (newFocusedIndex !== focusedIndex) {\n                event.preventDefault();\n                optionElements[newFocusedIndex].focus();\n            }\n        });\n        for (const option of options) {\n            const optionElement = document.createElement('button');\n            optionElement.id = `menu-overlay-option-${idCounter++}`;\n            optionElement.role = 'menuitem';\n            optionElement.classList.add('option', 'editor-popup-menu-option');\n            optionElement.replaceChildren(option.icon(), document.createTextNode(option.text));\n            optionElement.onclick = (event) => {\n                if (event.defaultPrevented)\n                    return;\n                onOptionSelected(option.key);\n            };\n            contentElement.appendChild(optionElement);\n            if (optionElements.length === 0) {\n                optionElement.autofocus = true;\n            }\n            optionElements.push(optionElement);\n        }\n        menuModal.appendChild(contentElement);\n        menuModal.showModal();\n        // Ensures that the menu is visible even if triggered near the edge of the screen.\n        contentElement.scrollIntoView({ block: 'nearest' });\n    });\n};\nexport default createMenuOverlay;\n", "/**\n * Converts `file` to a base64 data URL.\n */\nconst fileToBase64Url = async (file, options = {}) => {\n    try {\n        const reader = new FileReader();\n        return await new Promise((resolve, reject) => {\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = reject;\n            reader.onabort = reject;\n            reader.onprogress = (evt) => {\n                options.onprogress?.(evt);\n            };\n            reader.readAsDataURL(file);\n        });\n    }\n    catch (error) {\n        // Files can fail to load with a FileReader in some cases. For example,\n        // in iOS Lockdown mode, where FileReader is unavailable.\n        (options.onWarning ?? console.warn)('Unable to convert file to base64 with a FileReader: ', error);\n        const arrayBuffer = await file.arrayBuffer();\n        const array = new Uint8Array(arrayBuffer);\n        // step: must be divisible by 3 (3 bytes = 4 base64 numerals)\n        //       If too large, this will fail (String.fromCharCode accepts a limited\n        //       number of arguments).\n        const step = 30;\n        const result = [];\n        for (let i = 0; i < array.length; i += step) {\n            // btoa accepts only characters with byte value 0-255 (which can be created\n            // with String.fromCharCode)\n            const stringByteArray = String.fromCharCode(...array.slice(i, i + step));\n            result.push(btoa(stringByteArray));\n        }\n        return `data:${file.type ?? 'image/*'};base64,${result.join('')}`;\n    }\n};\nexport default fileToBase64Url;\n", "/* eslint-disable @typescript-eslint/no-redundant-type-constituents -- Used for clarity */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ClipboardHandler_preferClipboardEvents;\nimport  { InputEvtType }  from '../inputEvents.mjs';\nimport  fileToBase64Url  from './fileToBase64Url.mjs';\nconst isTextMimeType = (mime) => \n// +xml: Handles image/svg+xml\nmime.endsWith('+xml') || mime.startsWith('text/');\n/**\n * Handles conversion between the browser clipboard APIs and internal\n * js-draw clipboard events.\n */\nclass ClipboardHandler {\n    constructor(editor, callbacks) {\n        this.editor = editor;\n        this.callbacks = callbacks;\n        _ClipboardHandler_preferClipboardEvents.set(this, false);\n    }\n    /**\n     * Pastes data from the clipboard into the editor associated with\n     * this handler.\n     *\n     * @param event Optional -- a clipboard/drag event. If not provided,\n     * \t\t\t\t`navigator.clipboard` will be used instead.\n     * @returns true if the paste event was handled by the editor.\n     */\n    paste(event) {\n        const onError = (error) => {\n            if (this.callbacks?.onPasteError) {\n                this.callbacks.onPasteError(error);\n                return Promise.resolve(false);\n            }\n            else {\n                throw error;\n            }\n        };\n        try {\n            // Use .catch rather than `async` to prevent future modifications from\n            // moving clipboard handling logic out of user event handlers.\n            // In the past, `await`s have caused permissions issues in some browsers.\n            return this.pasteInternal(event).catch(onError);\n        }\n        catch (error) {\n            return onError(error);\n        }\n    }\n    async pasteInternal(event) {\n        const editor = this.editor;\n        const clipboardData = event?.dataTransfer ?? event?.clipboardData ?? null;\n        const hasEvent = !!clipboardData;\n        const sendPasteEvent = (mime, data) => {\n            return (data &&\n                editor.toolController.dispatchInputEvent({\n                    kind: InputEvtType.PasteEvent,\n                    mime,\n                    data,\n                }));\n        };\n        // Listed in order of precedence\n        const supportedMIMEs = ['image/svg+xml', 'text/html', 'image/png', 'image/jpeg', 'text/plain'];\n        let files = [];\n        const textData = new Map();\n        const editorSettings = editor.getCurrentSettings();\n        if (hasEvent) {\n            // NOTE: On some browsers, .getData and .files must be used before any async operations.\n            files = [...clipboardData.files];\n            for (const mime of supportedMIMEs) {\n                const data = clipboardData.getData(mime);\n                if (data) {\n                    textData.set(mime, data);\n                }\n            }\n        }\n        else if (editorSettings.clipboardApi) {\n            const clipboardData = await editorSettings.clipboardApi.read();\n            for (const [type, data] of clipboardData.entries()) {\n                if (typeof data === 'string') {\n                    textData.set(type, data);\n                }\n                else {\n                    let blob = data;\n                    if (blob.type !== type) {\n                        blob = new Blob([blob], { type });\n                    }\n                    files.push(blob);\n                }\n            }\n        }\n        else {\n            const clipboardData = await navigator.clipboard.read();\n            for (const item of clipboardData) {\n                for (const mime of item.types) {\n                    if (supportedMIMEs.includes(mime)) {\n                        files.push(await item.getType(mime));\n                    }\n                }\n            }\n        }\n        // Returns true if handled\n        const handleMIME = async (mime) => {\n            const isTextFormat = isTextMimeType(mime);\n            if (isTextFormat) {\n                const data = textData.get(mime);\n                if (sendPasteEvent(mime, data)) {\n                    event?.preventDefault();\n                    return true;\n                }\n            }\n            for (const file of files) {\n                const fileType = file?.type?.toLowerCase();\n                if (fileType !== mime) {\n                    continue;\n                }\n                if (isTextFormat) {\n                    const text = await file.text();\n                    if (sendPasteEvent(mime, text)) {\n                        event?.preventDefault();\n                        return true;\n                    }\n                }\n                else {\n                    editor.showLoadingWarning(0);\n                    const onprogress = (evt) => {\n                        editor.showLoadingWarning(evt.loaded / evt.total);\n                    };\n                    try {\n                        const data = await fileToBase64Url(file, { onprogress });\n                        if (sendPasteEvent(mime, data)) {\n                            event?.preventDefault();\n                            editor.hideLoadingWarning();\n                            return true;\n                        }\n                    }\n                    catch (e) {\n                        console.error('Error reading image:', e);\n                    }\n                    editor.hideLoadingWarning();\n                }\n            }\n            return false;\n        };\n        for (const mime of supportedMIMEs) {\n            if (await handleMIME(mime)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Copies text from the editor associated with this.\n     *\n     * Even if `event` is provided, the `navigator.clipboard` API may be used if image data\n     * is to be copied. This is done because `ClipboardEvent`s seem to not support attaching\n     * images.\n     */\n    copy(event) {\n        const onError = (error) => {\n            if (this.callbacks?.onCopyError) {\n                this.callbacks.onCopyError(error);\n                return Promise.resolve();\n            }\n            else {\n                throw error;\n            }\n        };\n        try {\n            // As above, use `.catch` to be certain that certain copyInternal\n            // is run now, before returning.\n            return this.copyInternal(event).catch(onError);\n        }\n        catch (error) {\n            return onError(error);\n        }\n    }\n    copyInternal(event) {\n        const mimeToData = new Map();\n        if (this.editor.toolController.dispatchInputEvent({\n            kind: InputEvtType.CopyEvent,\n            setData: (mime, data) => {\n                mimeToData.set(mime, data);\n            },\n        })) {\n            event?.preventDefault();\n        }\n        const mimeTypes = [...mimeToData.keys()];\n        const hasNonTextMimeTypes = mimeTypes.some((mime) => !isTextMimeType(mime));\n        const copyToEvent = (reason) => {\n            if (!event) {\n                throw new Error(`Unable to copy -- no event provided${reason ? `. Original error: ${reason}` : ''}`);\n            }\n            for (const [key, value] of mimeToData.entries()) {\n                if (typeof value === 'string') {\n                    if ('clipboardData' in event) {\n                        event.clipboardData?.setData(key, value);\n                    }\n                    else {\n                        event.dataTransfer?.setData(key, value);\n                    }\n                }\n            }\n        };\n        const copyToClipboardApi = () => {\n            const mapInternalDataToBrowserData = (originalMimeToData) => {\n                const mappedMimeToData = Object.create(null);\n                for (const [key, data] of originalMimeToData.entries()) {\n                    if (typeof data === 'string') {\n                        const loadedData = new Blob([new TextEncoder().encode(data)], { type: key });\n                        mappedMimeToData[key] = loadedData;\n                    }\n                    else {\n                        mappedMimeToData[key] = data;\n                    }\n                    // Different platforms have varying support for different clipboard MIME types:\n                    // - As of September 2024, image/svg+xml is unsupported on iOS\n                    // - text/html is unsupported on Chrome/Android (and perhaps Chrome on other platforms).\n                    //    - See https://issues.chromium.org/issues/40851502\n                    if (key === 'image/svg+xml') {\n                        mappedMimeToData['text/html'] ??= mappedMimeToData[key];\n                    }\n                }\n                return mappedMimeToData;\n            };\n            const removeUnsupportedMime = (originalMimeToData) => {\n                const filteredMimeToData = Object.create(null);\n                for (const [key, data] of Object.entries(originalMimeToData)) {\n                    // Browser support for ClipboardItem.supports is limited as of mid 2024. However, some browsers\n                    // that do support `.supports` throw an exception when attempting to copy an unsupported MIME type\n                    // (e.g. Firefox).\n                    const unsupported = 'supports' in ClipboardItem &&\n                        typeof ClipboardItem.supports === 'function' &&\n                        !ClipboardItem.supports(key);\n                    if (!unsupported) {\n                        filteredMimeToData[key] = data;\n                    }\n                }\n                return filteredMimeToData;\n            };\n            const browserMimeToData = removeUnsupportedMime(mapInternalDataToBrowserData(mimeToData));\n            return navigator.clipboard.write([new ClipboardItem(browserMimeToData)]);\n        };\n        const supportsClipboardApi = typeof ClipboardItem !== 'undefined' && typeof navigator?.clipboard?.write !== 'undefined';\n        const prefersClipboardApi = !__classPrivateFieldGet(this, _ClipboardHandler_preferClipboardEvents, \"f\") && supportsClipboardApi && (hasNonTextMimeTypes || !event);\n        const editorSettings = this.editor.getCurrentSettings();\n        if (prefersClipboardApi && editorSettings.clipboardApi) {\n            const writeResult = editorSettings.clipboardApi.write(mimeToData);\n            return writeResult ?? Promise.resolve();\n        }\n        else if (prefersClipboardApi) {\n            let clipboardApiPromise = null;\n            const fallBackToCopyEvent = (reason) => {\n                console.warn('Unable to copy to the clipboard API. Future calls to .copy will use ClipboardEvents if possible.', reason);\n                __classPrivateFieldSet(this, _ClipboardHandler_preferClipboardEvents, true, \"f\");\n                copyToEvent(reason);\n            };\n            try {\n                clipboardApiPromise = copyToClipboardApi();\n            }\n            catch (error) {\n                fallBackToCopyEvent(error);\n            }\n            if (clipboardApiPromise) {\n                return clipboardApiPromise.catch(fallBackToCopyEvent);\n            }\n        }\n        else {\n            copyToEvent();\n        }\n        return Promise.resolve();\n    }\n}\n_ClipboardHandler_preferClipboardEvents = new WeakMap();\nexport default ClipboardHandler;\n", "import  waitForTimeout  from '../util/waitForTimeout.mjs';\nconst makeAboutDialog = (editor, options) => {\n    const overlay = document.createElement('div');\n    const { remove: removeOverlay } = editor.createHTMLOverlay(overlay);\n    overlay.classList.add('dialog-container', 'message-dialog-container', ...(options.classNames ?? []));\n    const dialog = document.createElement('dialog');\n    const contentWrapper = document.createElement('div');\n    contentWrapper.classList.add('message-dialog-content', ...(options.contentClassNames ?? []));\n    const heading = document.createElement('h1');\n    heading.textContent = options.title;\n    heading.setAttribute('autofocus', 'true');\n    const closeButton = document.createElement('button');\n    closeButton.innerText = editor.localization.closeDialog;\n    closeButton.classList.add('close');\n    const scrollRegion = document.createElement('div');\n    scrollRegion.classList.add('scroll');\n    // Allow scrolling in the scrollable container -- don't forward wheel events.\n    scrollRegion.onwheel = (evt) => evt.stopPropagation();\n    contentWrapper.replaceChildren(heading, scrollRegion, closeButton);\n    dialog.replaceChildren(contentWrapper);\n    overlay.replaceChildren(dialog);\n    const closeTimeout = 300;\n    dialog.style.setProperty('--close-delay', `${closeTimeout}ms`);\n    const closeDialog = async () => {\n        dialog.classList.add('-closing');\n        await waitForTimeout(closeTimeout);\n        dialog.close();\n    };\n    const addCloseListeners = () => {\n        dialog.addEventListener('pointerdown', (event) => {\n            if (event.target === dialog) {\n                void closeDialog();\n            }\n        });\n        dialog.onclose = () => {\n            removeOverlay();\n        };\n        closeButton.onclick = () => closeDialog();\n    };\n    addCloseListeners();\n    dialog.showModal();\n    return {\n        close: () => {\n            return closeDialog();\n        },\n        appendChild: (child) => {\n            scrollRegion.appendChild(child);\n        },\n    };\n};\nexport default makeAboutDialog;\n", "import  makeMessageDialog  from '../../../dialogs/makeMessageDialog.mjs';\nimport  ClipboardHandler  from '../../../util/ClipboardHandler.mjs';\nconst makeClipboardErrorHandlers = (editor) => {\n    const makeErrorDialog = (error) => {\n        const dialog = makeMessageDialog(editor, {\n            title: editor.localization.copyPasteError__heading,\n            classNames: ['clipboard-error-dialog'],\n        });\n        dialog.appendChild(document.createTextNode(editor.localization.copyPasteError__description));\n        const errorDetailsElement = document.createElement('details');\n        const errorDetailsSummary = document.createElement('summary');\n        errorDetailsSummary.textContent = editor.localization.copyPasteError__errorDetails;\n        errorDetailsElement.appendChild(errorDetailsSummary);\n        errorDetailsElement.appendChild(document.createTextNode(`Error: ${error}`));\n        dialog.appendChild(errorDetailsElement);\n        return dialog;\n    };\n    return {\n        onCopyError(error) {\n            const dialog = makeErrorDialog(error);\n            const textboxLabel = document.createElement('label');\n            textboxLabel.textContent = editor.localization.copyPasteError__copyRetry;\n            const copyTextbox = document.createElement('textarea');\n            textboxLabel.appendChild(copyTextbox);\n            const retryHandler = new ClipboardHandler(editor);\n            const handleCopy = (event) => {\n                event.preventDefault();\n                // Use .then to ensure that .copy runs within the event handler.\n                // Copy can fail if certain logic is run async.\n                return retryHandler.copy(event).then(() => {\n                    dialog.close();\n                });\n            };\n            copyTextbox.oncopy = handleCopy;\n            copyTextbox.ondragstart = handleCopy;\n            copyTextbox.value = editor.localization.copyPasteError__copyMe;\n            dialog.appendChild(textboxLabel);\n            copyTextbox.select();\n            document.execCommand('copy');\n        },\n        onPasteError(error) {\n            const dialog = makeErrorDialog(error);\n            const textboxLabel = document.createElement('label');\n            textboxLabel.textContent = editor.localization.copyPasteError__pasteRetry;\n            const pasteTextbox = document.createElement('textarea');\n            textboxLabel.appendChild(pasteTextbox);\n            const retryHandler = new ClipboardHandler(editor);\n            const handlePaste = (event) => {\n                event.preventDefault();\n                // Use .then to ensure that .paste runs within the event handler.\n                // Paste can fail if certain logic is run async.\n                return retryHandler.paste(event).then((pasted) => {\n                    if (pasted) {\n                        dialog.close();\n                    }\n                });\n            };\n            pasteTextbox.onpaste = handlePaste;\n            pasteTextbox.ondrop = handlePaste;\n            dialog.appendChild(textboxLabel);\n            pasteTextbox.focus();\n            document.execCommand('paste');\n        },\n    };\n};\nexport default makeClipboardErrorHandlers;\n", "import  createMenuOverlay  from '../../util/createMenuOverlay.mjs';\nimport  ClipboardHandler  from '../../../util/ClipboardHandler.mjs';\nimport  makeClipboardErrorHandlers  from './makeClipboardErrorHandlers.mjs';\nconst showSelectionContextMenu = async (selectionBox, editor, canvasAnchor, preferSelectionMenu, clearSelection) => {\n    const localization = editor.localization;\n    const showSelectionMenu = selectionBox?.getSelectedItemCount() && preferSelectionMenu;\n    const noSelectionMenu = [\n        {\n            text: localization.selectionMenu__paste,\n            icon: () => editor.icons.makePasteIcon(),\n            key: () => {\n                const clipboardHandler = new ClipboardHandler(editor, makeClipboardErrorHandlers(editor));\n                void clipboardHandler.paste();\n            },\n        },\n    ];\n    const onActivated = await createMenuOverlay(editor, canvasAnchor, showSelectionMenu\n        ? [\n            {\n                text: localization.selectionMenu__duplicate,\n                icon: () => editor.icons.makeDuplicateSelectionIcon(),\n                key: async () => {\n                    await editor.dispatch(await selectionBox.duplicateSelectedObjects());\n                },\n            },\n            {\n                text: localization.selectionMenu__delete,\n                icon: () => editor.icons.makeDeleteSelectionIcon(),\n                key: async () => {\n                    await editor.dispatch(selectionBox.deleteSelectedObjects());\n                    clearSelection();\n                },\n            },\n            {\n                text: localization.selectionMenu__copyToClipboard,\n                icon: () => editor.icons.makeCopyIcon(),\n                key: () => {\n                    const clipboardHandler = new ClipboardHandler(editor, makeClipboardErrorHandlers(editor));\n                    void clipboardHandler.copy();\n                },\n            },\n            ...noSelectionMenu,\n        ]\n        : noSelectionMenu);\n    onActivated?.();\n};\nexport default showSelectionContextMenu;\n", "import  { pathToRenderable }  from '../../../rendering/RenderablePathSpec.mjs';\nexport default class SelectionBuilder {\n    /** Renders a preview of the selection bounds */\n    render(renderer, color) {\n        renderer.drawPath(pathToRenderable(this.previewPath(), { fill: color }));\n    }\n    /** Converts the selection preview into a set of selected elements */\n    resolve(image, viewport) {\n        const path = this.previewPath();\n        const filterComponents = (components) => {\n            return components.filter((component) => {\n                return component.isSelectable();\n            });\n        };\n        let components;\n        // If the bounding box is very small, search for items **near** the bounding box,\n        // rather than in the bounding box.\n        const clickSize = viewport.getSizeOfPixelOnCanvas() * 3;\n        const isClick = path.bbox.maxDimension <= clickSize;\n        if (isClick) {\n            const searchRegionSize = viewport.visibleRect.maxDimension / 200;\n            const minSizeBox = path.bbox.grownBy(searchRegionSize);\n            components = image.getComponentsIntersecting(minSizeBox).filter((component) => {\n                return minSizeBox.containsRect(component.getBBox()) || component.intersectsRect(minSizeBox);\n            });\n            components = filterComponents(components);\n            if (components.length > 1) {\n                components = [components[0]];\n            }\n        }\n        else {\n            components = filterComponents(this.resolveInternal(image));\n        }\n        return components;\n    }\n}\n", "import { Path } from '@js-draw/math';\nimport { PathCommandType } from '@js-draw/math';\nimport  SelectionBuilder  from './SelectionBuilder.mjs';\n/**\n * Creates lasso selections.\n */\nexport default class LassoSelectionBuilder extends SelectionBuilder {\n    constructor(startPoint, viewport) {\n        super();\n        this.viewport = viewport;\n        this.boundaryPoints = [];\n        this.boundaryPoints.push(startPoint);\n        this.lastPoint = startPoint;\n    }\n    onPointerMove(canvasPoint) {\n        const lastBoundaryPoint = this.boundaryPoints[this.boundaryPoints.length - 1];\n        const minBoundaryDist = this.viewport.getSizeOfPixelOnCanvas() * 8;\n        if (lastBoundaryPoint.distanceTo(canvasPoint) >= minBoundaryDist) {\n            this.boundaryPoints.push(canvasPoint);\n        }\n        this.lastPoint = canvasPoint;\n    }\n    previewPath() {\n        const pathCommands = this.boundaryPoints.map((point) => {\n            return { kind: PathCommandType.LineTo, point };\n        });\n        pathCommands.push({\n            kind: PathCommandType.LineTo,\n            point: this.lastPoint,\n        });\n        return new Path(this.boundaryPoints[0], pathCommands).asClosed();\n    }\n    resolveInternal(image) {\n        const path = this.previewPath();\n        const lines = path.polylineApproximation();\n        const candidates = image.getComponentsIntersecting(path.bbox);\n        const componentIsInSelection = (component) => {\n            if (path.closedContainsRect(component.getExactBBox())) {\n                return true;\n            }\n            let hasKeyPoint = false;\n            for (const point of component.keyPoints()) {\n                if (path.closedContainsPoint(point)) {\n                    hasKeyPoint = true;\n                    break;\n                }\n            }\n            if (!hasKeyPoint) {\n                return false;\n            }\n            // Only select if completely contained within the lasso\n            for (const line of lines) {\n                if (component.intersects(line)) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return candidates.filter(componentIsInSelection);\n    }\n}\n", "import { Path, Rect2 } from '@js-draw/math';\nimport  SelectionBuilder  from './SelectionBuilder.mjs';\n/**\n * Creates rectangle selections\n */\nexport default class RectSelectionBuilder extends SelectionBuilder {\n    constructor(startPoint) {\n        super();\n        this.rect = Rect2.fromCorners(startPoint, startPoint);\n    }\n    onPointerMove(canvasPoint) {\n        this.rect = this.rect.grownToPoint(canvasPoint);\n    }\n    previewPath() {\n        return Path.fromRect(this.rect);\n    }\n    resolveInternal(image) {\n        return image.getComponentsIntersecting(this.rect).filter((element) => {\n            // Filter out the case where the selection rectangle is completely contained\n            // within the element (and does not intersect it).\n            // This is useful, for example, if a very large stroke is used as the background\n            // for another drawing. This prevents the very large stroke from being selected\n            // unless the selection touches one of its edges.\n            return element.intersectsRect(this.rect);\n        });\n    }\n}\n", "import { Mat33, Vec2, Color4 } from '@js-draw/math';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  BaseTool  from '../BaseTool.mjs';\nimport  CanvasRenderer  from '../../rendering/renderers/CanvasRenderer.mjs';\nimport  SVGRenderer  from '../../rendering/renderers/SVGRenderer.mjs';\nimport  Selection  from './Selection.mjs';\nimport  TextComponent  from '../../components/TextComponent.mjs';\nimport  { duplicateSelectionShortcut, translateLeftSelectionShortcutId, translateRightSelectionShortcutId, selectAllKeyboardShortcut, sendToBackSelectionShortcut, snapToGridKeyboardShortcutId, translateDownSelectionShortcutId, translateUpSelectionShortcutId, rotateClockwiseSelectionShortcutId, rotateCounterClockwiseSelectionShortcutId, stretchXSelectionShortcutId, shrinkXSelectionShortcutId, shrinkYSelectionShortcutId, stretchYSelectionShortcutId, stretchXYSelectionShortcutId, shrinkXYSelectionShortcutId, }  from '../keybindings.mjs';\nimport  ToPointerAutoscroller  from './ToPointerAutoscroller.mjs';\nimport  showSelectionContextMenu  from './util/showSelectionContextMenu.mjs';\nimport  { MutableReactiveValue }  from '../../util/ReactiveValue.mjs';\nimport  { SelectionMode }  from './types.mjs';\nimport  LassoSelectionBuilder  from './SelectionBuilders/LassoSelectionBuilder.mjs';\nimport  RectSelectionBuilder  from './SelectionBuilders/RectSelectionBuilder.mjs';\nexport const cssPrefix = 'selection-tool-';\nexport { SelectionMode };\n// Allows users to select/transform portions of the `EditorImage`.\n// With respect to `extend`ing, `SelectionTool` is not stable.\nexport default class SelectionTool extends BaseTool {\n    constructor(editor, description) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        // True if clearing and recreating the selectionBox has been deferred. This is used to prevent the selection\n        // from vanishing on pointerdown events that are intended to form other gestures (e.g. long press) that would\n        // ultimately restore the selection.\n        this.removeSelectionScheduled = false;\n        this.startPoint = null; // canvas position\n        this.expandingSelectionBox = false;\n        this.shiftKeyPressed = false;\n        this.snapToGrid = false;\n        this.lastPointer = null;\n        this.showContextMenu = async (canvasAnchor, preferSelectionMenu = true) => {\n            await showSelectionContextMenu(this.selectionBox, this.editor, canvasAnchor, preferSelectionMenu, () => this.clearSelection());\n        };\n        this.selectionBoxHandlingEvt = false;\n        this.lastSelectedObjects = [];\n        // Whether the last keypress corresponded to an action that didn't transform the\n        // selection (and thus does not need to be finalized on onKeyUp).\n        this.hasUnfinalizedTransformFromKeyPress = false;\n        this.modeValue = MutableReactiveValue.fromInitialValue(SelectionMode.Rectangle);\n        this.modeValue.onUpdate(() => {\n            this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n                kind: EditorEventType.ToolUpdated,\n                tool: this,\n            });\n        });\n        this.autoscroller = new ToPointerAutoscroller(editor.viewport, (scrollBy) => {\n            editor.dispatch(Viewport.transformBy(Mat33.translation(scrollBy)), false);\n            // Update the selection box/content to match the new viewport.\n            if (this.lastPointer) {\n                // The viewport has changed -- ensure that the screen and canvas positions\n                // of the pointer are both correct\n                const updatedPointer = this.lastPointer.withScreenPosition(this.lastPointer.screenPos, editor.viewport);\n                this.onMainPointerUpdated(updatedPointer);\n            }\n        });\n        this.handleOverlay = document.createElement('div');\n        editor.createHTMLOverlay(this.handleOverlay);\n        this.handleOverlay.style.display = 'none';\n        this.handleOverlay.classList.add('handleOverlay');\n        editor.notifier.on(EditorEventType.ViewportChanged, (_data) => {\n            // The selection box could be using the wet ink display if its transformation\n            // hasn't been finalized yet. Clear before updating the UI.\n            this.editor.clearWetInk();\n            // If not currently selecting, ensure that the selection box\n            // is large enough.\n            if (!this.expandingSelectionBox) {\n                this.selectionBox?.padRegion();\n            }\n            this.selectionBox?.updateUI();\n        });\n        this.editor.handleKeyEventsFrom(this.handleOverlay);\n        this.editor.handlePointerEventsFrom(this.handleOverlay);\n    }\n    getSelectionColor() {\n        const colorString = getComputedStyle(this.handleOverlay).getPropertyValue('--selection-background-color');\n        return Color4.fromString(colorString).withAlpha(0.5);\n    }\n    makeSelectionBox(selectedObjects) {\n        this.prevSelectionBox = this.selectionBox;\n        this.selectionBox = new Selection(selectedObjects, this.editor, this.showContextMenu);\n        if (!this.expandingSelectionBox) {\n            // Remove any previous selection rects\n            this.prevSelectionBox?.cancelSelection();\n        }\n        this.selectionBox.addTo(this.handleOverlay);\n    }\n    onContextMenu(event) {\n        const canShowSelectionMenu = this.selectionBox\n            ?.getScreenRegion()\n            ?.containsPoint(event.screenPos);\n        void this.showContextMenu(event.canvasPos, canShowSelectionMenu);\n        return true;\n    }\n    onPointerDown({ allPointers, current }) {\n        const snapToGrid = this.snapToGrid;\n        if (snapToGrid) {\n            current = current.snappedToGrid(this.editor.viewport);\n        }\n        // Don't rely on .isPrimary -- it's buggy in Firefox. See https://github.com/personalizedrefrigerator/js-draw/issues/71\n        if (allPointers.length === 1) {\n            this.startPoint = current.canvasPos;\n            let transforming = false;\n            if (this.selectionBox) {\n                if (snapToGrid) {\n                    this.selectionBox.snapSelectedObjectsToGrid();\n                }\n                const dragStartResult = this.selectionBox.onDragStart(current);\n                if (dragStartResult) {\n                    transforming = true;\n                    this.selectionBoxHandlingEvt = true;\n                    this.expandingSelectionBox = false;\n                }\n            }\n            if (!transforming) {\n                // Shift key: Combine the new and old selection boxes at the end of the gesture.\n                this.expandingSelectionBox = this.shiftKeyPressed;\n                this.removeSelectionScheduled = !this.expandingSelectionBox;\n                if (this.modeValue.get() === SelectionMode.Lasso) {\n                    this.selectionBuilder = new LassoSelectionBuilder(current.canvasPos, this.editor.viewport);\n                }\n                else {\n                    this.selectionBuilder = new RectSelectionBuilder(current.canvasPos);\n                }\n            }\n            else {\n                // Only autoscroll if we're transforming an existing selection\n                this.autoscroller.start();\n            }\n            return true;\n        }\n        return false;\n    }\n    onPointerMove(event) {\n        this.onMainPointerUpdated(event.current);\n    }\n    onMainPointerUpdated(currentPointer) {\n        this.lastPointer = currentPointer;\n        if (this.removeSelectionScheduled) {\n            this.removeSelectionScheduled = false;\n            this.handleOverlay.replaceChildren();\n            this.prevSelectionBox = this.selectionBox;\n            this.selectionBox = null;\n        }\n        this.autoscroller.onPointerMove(currentPointer.screenPos);\n        if (!this.expandingSelectionBox && this.shiftKeyPressed && this.startPoint) {\n            const screenPos = this.editor.viewport.canvasToScreen(this.startPoint);\n            currentPointer = currentPointer.lockedToXYAxesScreen(screenPos, this.editor.viewport);\n        }\n        if (this.snapToGrid) {\n            currentPointer = currentPointer.snappedToGrid(this.editor.viewport);\n        }\n        if (this.selectionBoxHandlingEvt) {\n            this.selectionBox?.onDragUpdate(currentPointer);\n        }\n        else {\n            this.selectionBuilder?.onPointerMove(currentPointer.canvasPos);\n            this.editor.clearWetInk();\n            this.selectionBuilder?.render(this.editor.display.getWetInkRenderer(), this.getSelectionColor());\n        }\n    }\n    onPointerUp(event) {\n        this.onMainPointerUpdated(event.current);\n        this.autoscroller.stop();\n        if (this.selectionBoxHandlingEvt) {\n            this.selectionBox?.onDragEnd();\n        }\n        else if (this.selectionBuilder) {\n            const newSelection = this.selectionBuilder.resolve(this.editor.image, this.editor.viewport);\n            this.selectionBuilder = null;\n            this.editor.clearWetInk();\n            if (this.expandingSelectionBox && this.selectionBox) {\n                this.setSelection([...this.selectionBox.getSelectedObjects(), ...newSelection]);\n            }\n            else {\n                this.setSelection(newSelection);\n            }\n        }\n        this.expandingSelectionBox = false;\n        this.removeSelectionScheduled = false;\n        this.selectionBoxHandlingEvt = false;\n        this.lastPointer = null;\n    }\n    onGestureCancel() {\n        if (this.selectionBuilder) {\n            this.selectionBuilder = null;\n            this.editor.clearWetInk();\n        }\n        this.autoscroller.stop();\n        if (this.selectionBoxHandlingEvt) {\n            this.selectionBox?.onDragCancel();\n        }\n        else if (!this.removeSelectionScheduled) {\n            // Revert to the previous selection, if any.\n            this.selectionBox?.cancelSelection();\n            this.selectionBox = this.prevSelectionBox;\n            this.selectionBox?.addTo(this.handleOverlay);\n            this.selectionBox?.recomputeRegion();\n            this.prevSelectionBox = null;\n        }\n        this.removeSelectionScheduled = false;\n        this.expandingSelectionBox = false;\n        this.lastPointer = null;\n        this.selectionBoxHandlingEvt = false;\n    }\n    onSelectionUpdated() {\n        const selectedItemCount = this.selectionBox?.getSelectedItemCount() ?? 0;\n        const selectedObjects = this.selectionBox?.getSelectedObjects() ?? [];\n        const hasDifferentSelection = this.lastSelectedObjects.length !== selectedItemCount ||\n            selectedObjects.some((obj, i) => this.lastSelectedObjects[i] !== obj);\n        if (hasDifferentSelection) {\n            this.lastSelectedObjects = selectedObjects;\n            // Note that the selection has changed\n            this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n                kind: EditorEventType.ToolUpdated,\n                tool: this,\n            });\n            // Only fire the SelectionUpdated event if the selection really updated.\n            this.editor.notifier.dispatch(EditorEventType.SelectionUpdated, {\n                kind: EditorEventType.SelectionUpdated,\n                selectedComponents: selectedObjects,\n                tool: this,\n            });\n            if (selectedItemCount > 0) {\n                this.editor.announceForAccessibility(this.editor.localization.selectedElements(selectedItemCount));\n                this.zoomToSelection();\n            }\n        }\n        if (selectedItemCount === 0 && this.selectionBox) {\n            this.selectionBox.cancelSelection();\n            this.prevSelectionBox = this.selectionBox;\n            this.selectionBox = null;\n        }\n    }\n    zoomToSelection() {\n        if (this.selectionBox) {\n            const selectionRect = this.selectionBox.region;\n            this.editor.dispatchNoAnnounce(this.editor.viewport.zoomTo(selectionRect, false), false);\n        }\n    }\n    onKeyPress(event) {\n        const shortcucts = this.editor.shortcuts;\n        if (shortcucts.matchesShortcut(snapToGridKeyboardShortcutId, event)) {\n            this.snapToGrid = true;\n            return true;\n        }\n        if (this.selectionBox &&\n            (shortcucts.matchesShortcut(duplicateSelectionShortcut, event) ||\n                shortcucts.matchesShortcut(sendToBackSelectionShortcut, event))) {\n            // Handle duplication on key up — we don't want to accidentally duplicate\n            // many times.\n            return true;\n        }\n        else if (shortcucts.matchesShortcut(selectAllKeyboardShortcut, event)) {\n            this.setSelection(this.editor.image.getAllComponents());\n            return true;\n        }\n        else if (event.ctrlKey) {\n            // Don't transform the selection with, for example, ctrl+i.\n            // Pass it to another tool, if apliccable.\n            return false;\n        }\n        else if (event.shiftKey || event.key === 'Shift') {\n            this.shiftKeyPressed = true;\n            if (event.key === 'Shift') {\n                return true;\n            }\n        }\n        let rotationSteps = 0;\n        let xTranslateSteps = 0;\n        let yTranslateSteps = 0;\n        let xScaleSteps = 0;\n        let yScaleSteps = 0;\n        if (shortcucts.matchesShortcut(translateLeftSelectionShortcutId, event)) {\n            xTranslateSteps -= 1;\n        }\n        else if (shortcucts.matchesShortcut(translateRightSelectionShortcutId, event)) {\n            xTranslateSteps += 1;\n        }\n        else if (shortcucts.matchesShortcut(translateUpSelectionShortcutId, event)) {\n            yTranslateSteps -= 1;\n        }\n        else if (shortcucts.matchesShortcut(translateDownSelectionShortcutId, event)) {\n            yTranslateSteps += 1;\n        }\n        else if (shortcucts.matchesShortcut(rotateClockwiseSelectionShortcutId, event)) {\n            rotationSteps += 1;\n        }\n        else if (shortcucts.matchesShortcut(rotateCounterClockwiseSelectionShortcutId, event)) {\n            rotationSteps -= 1;\n        }\n        else if (shortcucts.matchesShortcut(shrinkXSelectionShortcutId, event)) {\n            xScaleSteps -= 1;\n        }\n        else if (shortcucts.matchesShortcut(stretchXSelectionShortcutId, event)) {\n            xScaleSteps += 1;\n        }\n        else if (shortcucts.matchesShortcut(shrinkYSelectionShortcutId, event)) {\n            yScaleSteps -= 1;\n        }\n        else if (shortcucts.matchesShortcut(stretchYSelectionShortcutId, event)) {\n            yScaleSteps += 1;\n        }\n        else if (shortcucts.matchesShortcut(shrinkXYSelectionShortcutId, event)) {\n            xScaleSteps -= 1;\n            yScaleSteps -= 1;\n        }\n        else if (shortcucts.matchesShortcut(stretchXYSelectionShortcutId, event)) {\n            xScaleSteps += 1;\n            yScaleSteps += 1;\n        }\n        let handled = xTranslateSteps !== 0 ||\n            yTranslateSteps !== 0 ||\n            rotationSteps !== 0 ||\n            xScaleSteps !== 0 ||\n            yScaleSteps !== 0;\n        if (!this.selectionBox) {\n            handled = false;\n        }\n        else if (handled) {\n            const translateStepSize = 10 * this.editor.viewport.getSizeOfPixelOnCanvas();\n            const rotateStepSize = Math.PI / 8;\n            const scaleStepSize = 5 / 4;\n            const region = this.selectionBox.region;\n            const scaleFactor = Vec2.of(scaleStepSize ** xScaleSteps, scaleStepSize ** yScaleSteps);\n            const rotationMat = Mat33.zRotation(rotationSteps * rotateStepSize);\n            const roundedRotationMatrix = rotationMat.mapEntries((component) => Viewport.roundScaleRatio(component));\n            const regionCenter = this.editor.viewport.roundPoint(region.center);\n            const transform = Mat33.scaling2D(scaleFactor, this.editor.viewport.roundPoint(region.topLeft))\n                .rightMul(Mat33.translation(regionCenter)\n                .rightMul(roundedRotationMatrix)\n                .rightMul(Mat33.translation(regionCenter.times(-1))))\n                .rightMul(Mat33.translation(this.editor.viewport.roundPoint(Vec2.of(xTranslateSteps, yTranslateSteps).times(translateStepSize))));\n            const oldTransform = this.selectionBox.getTransform();\n            this.selectionBox.setTransform(oldTransform.rightMul(transform));\n            this.selectionBox.scrollTo();\n            // The transformation needs to be finalized at some point (on key up)\n            this.hasUnfinalizedTransformFromKeyPress = true;\n        }\n        if (this.selectionBox && !handled && (event.key === 'Delete' || event.key === 'Backspace')) {\n            this.editor.dispatch(this.selectionBox.deleteSelectedObjects());\n            this.clearSelection();\n            handled = true;\n        }\n        return handled;\n    }\n    onKeyUp(evt) {\n        const shortcucts = this.editor.shortcuts;\n        if (shortcucts.matchesShortcut(snapToGridKeyboardShortcutId, evt)) {\n            this.snapToGrid = false;\n            return true;\n        }\n        if (shortcucts.matchesShortcut(selectAllKeyboardShortcut, evt)) {\n            // Selected all in onKeyDown. Don't finalizeTransform.\n            return true;\n        }\n        if (this.selectionBox && shortcucts.matchesShortcut(duplicateSelectionShortcut, evt)) {\n            // Finalize duplicating the selection\n            this.selectionBox.duplicateSelectedObjects().then((command) => {\n                this.editor.dispatch(command);\n            });\n            return true;\n        }\n        if (this.selectionBox && shortcucts.matchesShortcut(sendToBackSelectionShortcut, evt)) {\n            const sendToBackCommand = this.selectionBox.sendToBack();\n            if (sendToBackCommand) {\n                this.editor.dispatch(sendToBackCommand);\n            }\n            return true;\n        }\n        // Here, we check if shiftKey === false because, as of this writing,\n        // evt.shiftKey is an optional property. Being falsey could just mean\n        // that it wasn't set.\n        if (evt.shiftKey === false) {\n            this.shiftKeyPressed = false;\n            // Don't return immediately -- event may be otherwise handled\n        }\n        // Also check for key === 'Shift' (for the case where shiftKey is undefined)\n        if (evt.key === 'Shift') {\n            this.shiftKeyPressed = false;\n            return true;\n        }\n        // If we don't need to finalize the transform\n        if (!this.hasUnfinalizedTransformFromKeyPress) {\n            return true;\n        }\n        if (this.selectionBox) {\n            this.selectionBox.finalizeTransform();\n            this.hasUnfinalizedTransformFromKeyPress = false;\n            return true;\n        }\n        return false;\n    }\n    onCopy(event) {\n        if (!this.selectionBox) {\n            return false;\n        }\n        const selectedElems = this.selectionBox.getSelectedObjects();\n        const bbox = this.selectionBox.region;\n        if (selectedElems.length === 0) {\n            return false;\n        }\n        const exportViewport = new Viewport(() => { });\n        const selectionScreenSize = this.selectionBox\n            .getScreenRegion()\n            .size.times(this.editor.display.getDevicePixelRatio());\n        // Update the viewport to have screen size roughly equal to the size of the selection box\n        let scaleFactor = selectionScreenSize.maximumEntryMagnitude() / (bbox.size.maximumEntryMagnitude() || 1);\n        // Round to a nearby power of two\n        scaleFactor = Math.pow(2, Math.ceil(Math.log2(scaleFactor)));\n        exportViewport.updateScreenSize(bbox.size.times(scaleFactor));\n        exportViewport.resetTransform(Mat33.scaling2D(scaleFactor)\n            // Move the selection onto the screen\n            .rightMul(Mat33.translation(bbox.topLeft.times(-1))));\n        const { element: svgExportElem, renderer: svgRenderer } = SVGRenderer.fromViewport(exportViewport, { sanitize: true, useViewBoxForPositioning: true });\n        const { element: canvas, renderer: canvasRenderer } = CanvasRenderer.fromViewport(exportViewport, { maxCanvasDimen: 4096 });\n        const text = [];\n        for (const elem of selectedElems) {\n            elem.render(svgRenderer);\n            elem.render(canvasRenderer);\n            if (elem instanceof TextComponent) {\n                text.push(elem.getText());\n            }\n        }\n        event.setData('image/svg+xml', svgExportElem.outerHTML);\n        event.setData('text/html', svgExportElem.outerHTML);\n        event.setData('image/png', new Promise((resolve, reject) => {\n            canvas.toBlob((blob) => {\n                if (blob) {\n                    resolve(blob);\n                }\n                else {\n                    reject(new Error('Failed to convert canvas to blob.'));\n                }\n            }, 'image/png');\n        }));\n        if (text.length > 0) {\n            event.setData('text/plain', text.join('\\n'));\n        }\n        return true;\n    }\n    setEnabled(enabled) {\n        const wasEnabled = this.isEnabled();\n        super.setEnabled(enabled);\n        if (wasEnabled === enabled) {\n            return;\n        }\n        // Clear the selection\n        this.selectionBox?.cancelSelection();\n        this.onSelectionUpdated();\n        this.handleOverlay.replaceChildren();\n        this.selectionBox = null;\n        this.shiftKeyPressed = false;\n        this.snapToGrid = false;\n        this.handleOverlay.style.display = enabled ? 'block' : 'none';\n        if (enabled) {\n            this.handleOverlay.tabIndex = 0;\n            this.handleOverlay.role = 'group';\n            this.handleOverlay.ariaLabel = this.editor.localization.selectionToolKeyboardShortcuts;\n        }\n        else {\n            this.handleOverlay.tabIndex = -1;\n        }\n    }\n    // Get the object responsible for displaying this' selection.\n    // @internal\n    getSelection() {\n        return this.selectionBox;\n    }\n    /** @returns true if the selection is currently being created by the user. */\n    isSelecting() {\n        return !!this.selectionBuilder;\n    }\n    getSelectedObjects() {\n        return this.selectionBox?.getSelectedObjects() ?? [];\n    }\n    // Select the given `objects`. Any non-selectable objects in `objects` are ignored.\n    setSelection(objects) {\n        // Only select selectable objects.\n        objects = objects.filter((obj) => obj.isSelectable());\n        // Sort by z-index\n        objects.sort((a, b) => a.getZIndex() - b.getZIndex());\n        // Remove duplicates\n        objects = objects.filter((current, idx) => {\n            if (idx > 0) {\n                return current !== objects[idx - 1];\n            }\n            return true;\n        });\n        let bbox = null;\n        for (const object of objects) {\n            if (bbox) {\n                bbox = bbox.union(object.getBBox());\n            }\n            else {\n                bbox = object.getBBox();\n            }\n        }\n        this.clearSelectionNoUpdateEvent();\n        if (bbox) {\n            this.makeSelectionBox(objects);\n        }\n        this.onSelectionUpdated();\n    }\n    // Equivalent to .clearSelection, but does not dispatch an update event\n    clearSelectionNoUpdateEvent() {\n        this.handleOverlay.replaceChildren();\n        this.prevSelectionBox = this.selectionBox;\n        this.selectionBox = null;\n    }\n    clearSelection() {\n        this.clearSelectionNoUpdateEvent();\n        this.onSelectionUpdated();\n    }\n}\n", "import  BaseTool  from './BaseTool.mjs';\nimport  { redoKeyboardShortcutId, undoKeyboardShortcutId }  from './keybindings.mjs';\n// Handles ctrl+Z, ctrl+Shift+Z keyboard shortcuts.\nexport default class UndoRedoShortcut extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, editor.localization.undoRedoTool);\n        this.editor = editor;\n    }\n    // @internal\n    onKeyPress(event) {\n        if (this.editor.shortcuts.matchesShortcut(undoKeyboardShortcutId, event)) {\n            void this.editor.history.undo();\n            return true;\n        }\n        else if (this.editor.shortcuts.matchesShortcut(redoKeyboardShortcutId, event)) {\n            void this.editor.history.redo();\n            return true;\n        }\n        return false;\n    }\n}\n", "import  TextComponent  from '../components/TextComponent.mjs';\nimport  EditorImage  from '../image/EditorImage.mjs';\nimport { Rect2, Mat33, Vec2, Color4 } from '@js-draw/math';\nimport  { PointerDevice }  from '../Pointer.mjs';\nimport  { EditorEventType }  from '../types.mjs';\nimport  BaseTool  from './BaseTool.mjs';\nimport  Erase  from '../commands/Erase.mjs';\nimport  uniteCommands  from '../commands/uniteCommands.mjs';\nimport  { ReactiveValue }  from '../util/ReactiveValue.mjs';\nconst overlayCSSClass = 'textEditorOverlay';\n/** A tool that allows users to enter and edit text. */\nexport default class TextTool extends BaseTool {\n    constructor(editor, description, localizationTable) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        this.localizationTable = localizationTable;\n        this.textInputElem = null;\n        this.textMeasuringCtx = null;\n        this.removeExistingCommand = null;\n        const editorFonts = editor.getCurrentSettings().text?.fonts ?? [];\n        this.textStyleValue = ReactiveValue.fromInitialValue({\n            size: 32,\n            fontFamily: editorFonts.length > 0 ? editorFonts[0] : 'sans-serif',\n            renderingStyle: {\n                fill: Color4.purple,\n            },\n        });\n        this.textStyleValue.onUpdateAndNow(() => {\n            this.textStyle = this.textStyleValue.get();\n            this.updateTextInput();\n            this.editor.notifier.dispatch(EditorEventType.ToolUpdated, {\n                kind: EditorEventType.ToolUpdated,\n                tool: this,\n            });\n        });\n        this.contentTransform = ReactiveValue.fromInitialValue(Mat33.identity);\n        this.textEditOverlay = document.createElement('div');\n        this.textEditOverlay.classList.add(overlayCSSClass);\n        this.editor.addStyleSheet(`\n\t\t\t.${overlayCSSClass} textarea {\n\t\t\t\tbackground-color: rgba(0, 0, 0, 0);\n\n\t\t\t\twhite-space: pre;\n\t\t\t\toverflow: hidden;\n\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\tborder: none;\n\t\t\t\tpadding: 0;\n\n\t\t\t\tmin-width: 100px;\n\t\t\t\tmin-height: 1.1em;\n\t\t\t}\n\t\t`);\n        this.anchorControl = this.editor.anchorElementToCanvas(this.textEditOverlay, this.contentTransform);\n    }\n    initTextMeasuringCanvas() {\n        this.textMeasuringCtx ??= document.createElement('canvas').getContext('2d');\n    }\n    getTextAscent(text, style) {\n        this.initTextMeasuringCanvas();\n        if (this.textMeasuringCtx) {\n            this.textMeasuringCtx.textBaseline = 'alphabetic';\n            TextComponent.applyTextStyles(this.textMeasuringCtx, style);\n            const measurement = this.textMeasuringCtx.measureText(text);\n            return measurement.fontBoundingBoxAscent ?? measurement.actualBoundingBoxAscent;\n        }\n        // Estimate\n        return (style.size * 2) / 3;\n    }\n    // Take input from this' textInputElem and add it to the EditorImage.\n    // If [removeInput], the HTML input element is removed. Otherwise, its value\n    // is cleared.\n    flushInput(removeInput = true) {\n        if (!this.textInputElem)\n            return;\n        // Determine the scroll first -- removing the input (and other DOM changes)\n        // also change the scroll.\n        const scrollingRegion = this.textEditOverlay.parentElement;\n        const containerScroll = Vec2.of(scrollingRegion?.scrollLeft ?? 0, scrollingRegion?.scrollTop ?? 0);\n        const content = this.textInputElem.value.trimEnd();\n        this.textInputElem.value = '';\n        if (removeInput) {\n            // In some browsers, .remove() triggers a .blur event (synchronously).\n            // Clear this.textInputElem before removal\n            const input = this.textInputElem;\n            this.textInputElem = null;\n            input.remove();\n        }\n        if (content !== '') {\n            // When the text is long, it can cause its container to scroll so that the\n            // editing caret is in view.\n            // So that the text added to the document is in the same position as the text\n            // shown in the editor, account for this scroll when computing the transform:\n            const scrollCorrectionScreen = containerScroll.times(-1);\n            // Uses .transformVec3 to avoid also translating the scroll correction (treating\n            // it as a point):\n            const scrollCorrectionCanvas = this.editor.viewport.screenToCanvasTransform.transformVec3(scrollCorrectionScreen);\n            const scrollTransform = Mat33.translation(scrollCorrectionCanvas);\n            const textComponent = TextComponent.fromLines(content.split('\\n'), scrollTransform.rightMul(this.contentTransform.get()), this.textStyle);\n            const action = EditorImage.addComponent(textComponent);\n            if (this.removeExistingCommand) {\n                // Unapply so that `removeExistingCommand` can be added to the undo stack.\n                this.removeExistingCommand.unapply(this.editor);\n                this.editor.dispatch(uniteCommands([this.removeExistingCommand, action]));\n                this.removeExistingCommand = null;\n            }\n            else {\n                this.editor.dispatch(action);\n            }\n        }\n    }\n    updateTextInput() {\n        if (!this.textInputElem) {\n            return;\n        }\n        this.textInputElem.placeholder = this.localizationTable.enterTextToInsert;\n        this.textInputElem.style.fontFamily = this.textStyle.fontFamily;\n        this.textInputElem.style.fontStyle = this.textStyle.fontStyle ?? '';\n        this.textInputElem.style.fontVariant = this.textStyle.fontVariant ?? '';\n        this.textInputElem.style.fontWeight = this.textStyle.fontWeight ?? '';\n        this.textInputElem.style.fontSize = `${this.textStyle.size}px`;\n        this.textInputElem.style.color = this.textStyle.renderingStyle.fill.toHexString();\n        this.textInputElem.style.margin = '0';\n        this.textInputElem.style.width = `${this.textInputElem.scrollWidth}px`;\n        this.textInputElem.style.height = `${this.textInputElem.scrollHeight}px`;\n        // Get the ascent based on the font, using a string of characters\n        // that is tall in most fonts.\n        const tallText = 'Testing!';\n        const ascent = this.getTextAscent(tallText, this.textStyle);\n        const vertAdjust = ascent;\n        this.textInputElem.style.transform = `translate(0, ${-vertAdjust}px)`;\n        this.textInputElem.style.transformOrigin = 'top left';\n        // Match the line height of default rendered text.\n        const lineHeight = Math.floor(this.textStyle.size);\n        this.textInputElem.style.lineHeight = `${lineHeight}px`;\n    }\n    startTextInput(textCanvasPos, initialText) {\n        this.flushInput();\n        this.textInputElem = document.createElement('textarea');\n        this.textInputElem.value = initialText;\n        this.textInputElem.style.display = 'inline-block';\n        const textTargetPosition = this.editor.viewport.roundPoint(textCanvasPos);\n        const textRotation = -this.editor.viewport.getRotationAngle();\n        const textScale = Vec2.of(1, 1).times(this.editor.viewport.getSizeOfPixelOnCanvas());\n        this.contentTransform.set(\n        // Scale, then rotate, then translate:\n        Mat33.translation(textTargetPosition)\n            .rightMul(Mat33.zRotation(textRotation))\n            .rightMul(Mat33.scaling2D(textScale)));\n        this.updateTextInput();\n        // Update the input size/position/etc. after the placeHolder has had time to appear.\n        setTimeout(() => this.updateTextInput(), 0);\n        this.textInputElem.oninput = () => {\n            if (this.textInputElem) {\n                this.textInputElem.style.width = `${this.textInputElem.scrollWidth}px`;\n                this.textInputElem.style.height = `${this.textInputElem.scrollHeight}px`;\n            }\n        };\n        this.textInputElem.onblur = () => {\n            const input = this.textInputElem;\n            // Delay removing the input -- flushInput may be called within a blur()\n            // event handler\n            const removeInput = false;\n            this.flushInput(removeInput);\n            this.textInputElem = null;\n            if (input) {\n                input.classList.add('-hiding');\n            }\n            setTimeout(() => {\n                input?.remove();\n            }, 0);\n        };\n        this.textInputElem.onkeyup = (evt) => {\n            // In certain input modes, the <enter> key is used to select characters.\n            // When in this mode, prevent <enter> from submitting:\n            if (evt.isComposing)\n                return;\n            if (evt.key === 'Enter' && !evt.shiftKey) {\n                this.flushInput();\n                this.editor.focus();\n            }\n            else if (evt.key === 'Escape') {\n                // Cancel input.\n                this.textInputElem?.remove();\n                this.textInputElem = null;\n                this.editor.focus();\n                this.removeExistingCommand?.unapply(this.editor);\n                this.removeExistingCommand = null;\n            }\n        };\n        this.textEditOverlay.replaceChildren(this.textInputElem);\n        setTimeout(() => this.textInputElem?.focus(), 0);\n    }\n    setEnabled(enabled) {\n        super.setEnabled(enabled);\n        if (!this.isEnabled()) {\n            this.flushInput();\n        }\n        this.textEditOverlay.style.display = enabled ? 'block' : 'none';\n    }\n    onPointerDown({ current, allPointers }) {\n        if (current.device === PointerDevice.Eraser) {\n            return false;\n        }\n        if (allPointers.length === 1) {\n            // Are we clicking on a text node?\n            const canvasPos = current.canvasPos;\n            const halfTestRegionSize = Vec2.of(4, 4).times(this.editor.viewport.getSizeOfPixelOnCanvas());\n            const testRegion = Rect2.fromCorners(canvasPos.minus(halfTestRegionSize), canvasPos.plus(halfTestRegionSize));\n            const targetNodes = this.editor.image.getComponentsIntersecting(testRegion);\n            let targetTextNodes = targetNodes.filter((node) => node instanceof TextComponent);\n            // Don't try to edit text nodes that contain the viewport (this allows us\n            // to zoom in on text nodes and add text on top of them.)\n            const visibleRect = this.editor.viewport.visibleRect;\n            targetTextNodes = targetTextNodes.filter((node) => !node.getBBox().containsRect(visibleRect));\n            // End any TextNodes we're currently editing.\n            this.flushInput();\n            if (targetTextNodes.length > 0) {\n                const targetNode = targetTextNodes[targetTextNodes.length - 1];\n                this.setTextStyle(targetNode.getTextStyle());\n                // Create and temporarily apply removeExistingCommand.\n                this.removeExistingCommand = new Erase([targetNode]);\n                this.removeExistingCommand.apply(this.editor);\n                this.startTextInput(targetNode.getBaselinePos(), targetNode.getText());\n                this.contentTransform.set(targetNode.getTransform());\n                this.updateTextInput();\n            }\n            else {\n                this.removeExistingCommand = null;\n                this.startTextInput(current.canvasPos, '');\n            }\n            return true;\n        }\n        return false;\n    }\n    onGestureCancel() {\n        this.flushInput();\n        this.editor.focus();\n    }\n    setFontFamily(fontFamily) {\n        if (fontFamily !== this.textStyle.fontFamily) {\n            this.textStyleValue.set({\n                ...this.textStyle,\n                fontFamily: fontFamily,\n            });\n        }\n    }\n    setColor(color) {\n        if (!color.eq(this.textStyle.renderingStyle.fill)) {\n            this.textStyleValue.set({\n                ...this.textStyle,\n                renderingStyle: {\n                    ...this.textStyle.renderingStyle,\n                    fill: color,\n                },\n            });\n        }\n    }\n    setFontSize(size) {\n        if (size !== this.textStyle.size) {\n            this.textStyleValue.set({\n                ...this.textStyle,\n                size,\n            });\n        }\n    }\n    getTextStyle() {\n        return this.textStyle;\n    }\n    getStyleValue() {\n        return this.textStyleValue;\n    }\n    setTextStyle(style) {\n        this.textStyleValue.set(style);\n    }\n    // @internal\n    onDestroy() {\n        super.onDestroy();\n        this.anchorControl.remove();\n    }\n}\n", "// @internal @packageDocumentation\nimport  BaseTool  from './BaseTool.mjs';\n/**\n * A tool used internally to pick colors from the canvas.\n *\n * When color selection is in progress, the `pipette--color-selection-in-progress` class\n * is added to the root element. This can be used by themes.\n *\n * @internal\n */\nexport default class PipetteTool extends BaseTool {\n    constructor(editor, description) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        this.colorPreviewListener = null;\n        this.colorSelectListener = null;\n        this.enabledValue().onUpdateAndNow(() => {\n            this.updateSelectingStatus();\n        });\n    }\n    canReceiveInputInReadOnlyEditor() {\n        return true;\n    }\n    // Ensures that the root editor element correctly reflects whether color selection\n    // is in progress.\n    updateSelectingStatus() {\n        const className = 'pipette--color-selection-in-progress';\n        if (this.isEnabled() && this.colorSelectListener && this.colorPreviewListener) {\n            this.editor.getRootElement().classList.add(className);\n        }\n        else {\n            this.editor.getRootElement().classList.remove(className);\n        }\n    }\n    setColorListener(colorPreviewListener, \n    // Called when the gesture ends -- when the user has selected a color.\n    colorSelectListener) {\n        this.colorPreviewListener = colorPreviewListener;\n        this.colorSelectListener = colorSelectListener;\n        this.updateSelectingStatus();\n    }\n    clearColorListener() {\n        this.colorPreviewListener = null;\n        this.colorSelectListener = null;\n        this.updateSelectingStatus();\n    }\n    onPointerDown({ current, allPointers }) {\n        if (this.colorPreviewListener && allPointers.length === 1) {\n            this.colorPreviewListener(this.editor.display.getColorAt(current.screenPos));\n            return true;\n        }\n        return false;\n    }\n    onPointerMove({ current }) {\n        this.colorPreviewListener?.(this.editor.display.getColorAt(current.screenPos));\n    }\n    onPointerUp({ current }) {\n        this.colorSelectListener?.(this.editor.display.getColorAt(current.screenPos));\n    }\n    onGestureCancel() {\n        this.colorSelectListener?.(null);\n    }\n}\n", "import  BaseTool  from './BaseTool.mjs';\n/**\n * Handles keyboard events used, by default, to select tools. By default,\n * 1 maps to the first primary tool, 2 to the second primary tool, ... .\n *\n * This is in the default set of {@link ToolController} tools.\n *\n */\nexport default class ToolSwitcherShortcut extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, editor.localization.changeTool);\n        this.editor = editor;\n    }\n    canReceiveInputInReadOnlyEditor() {\n        return true;\n    }\n    // @internal\n    onKeyPress({ key }) {\n        const toolController = this.editor.toolController;\n        const primaryTools = toolController.getPrimaryTools();\n        // Map keys 0-9 to primary tools.\n        const keyMatch = /^[0-9]$/.exec(key);\n        let targetTool;\n        if (keyMatch) {\n            const targetIdx = parseInt(keyMatch[0], 10) - 1;\n            targetTool = primaryTools[targetIdx];\n        }\n        if (targetTool) {\n            targetTool.setEnabled(true);\n            return true;\n        }\n        return false;\n    }\n}\n", "import  TextComponent  from '../components/TextComponent.mjs';\nimport  SVGLoader  from '../SVGLoader/SVGLoader.mjs';\nimport { Mat33, Color4 } from '@js-draw/math';\nimport  BaseTool  from './BaseTool.mjs';\nimport  TextTool  from './TextTool.mjs';\nimport  ImageComponent  from '../components/ImageComponent.mjs';\n/**\n * A tool that handles paste events (e.g. as triggered by ctrl+V).\n *\n * @example\n * While `ToolController` has a `PasteHandler` in its default list of tools,\n * if a non-default set is being used, `PasteHandler` can be added as follows:\n * ```ts\n * const toolController = editor.toolController;\n * toolController.addTool(new PasteHandler(editor));\n * ```\n */\nexport default class PasteHandler extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, editor.localization.pasteHandler);\n        this.editor = editor;\n    }\n    // @internal\n    onPaste(event, onComplete) {\n        const mime = event.mime.toLowerCase();\n        const svgData = (() => {\n            if (mime === 'image/svg+xml') {\n                return event.data;\n            }\n            // In some environments, it isn't possible to write non-text data to the\n            // clipboard. To support these cases, auto-detect text/plain SVG data.\n            if (mime === 'text/plain') {\n                const trimmedData = event.data.trim();\n                if (trimmedData.startsWith('<svg') && trimmedData.endsWith('</svg>')) {\n                    return trimmedData;\n                }\n            }\n            if (mime !== 'text/html') {\n                return false;\n            }\n            // text/html is sometimes handlable SVG data. Use a hueristic\n            // to determine if this is the case:\n            // We use [^] and not . so that newlines are included.\n            const match = event.data.match(/^[^]{0,200}<svg.*/i); // [^]{0,200} <- Allow for metadata near start\n            if (!match) {\n                return false;\n            }\n            // Extract the SVG element from the pasted data\n            let svgEnd = event.data.toLowerCase().lastIndexOf('</svg>');\n            if (svgEnd === -1)\n                svgEnd = event.data.length;\n            return event.data.substring(event.data.search(/<svg/i), svgEnd);\n        })();\n        if (svgData) {\n            void this.doSVGPaste(svgData).then(onComplete);\n            return true;\n        }\n        else if (mime === 'text/plain') {\n            void this.doTextPaste(event.data).then(onComplete);\n            return true;\n        }\n        else if (mime === 'image/png' || mime === 'image/jpeg') {\n            void this.doImagePaste(event.data).then(onComplete);\n            return true;\n        }\n        return false;\n    }\n    async addComponentsFromPaste(components) {\n        await this.editor.addAndCenterComponents(components, true, this.editor.localization.pasted(components.length));\n    }\n    async doSVGPaste(data) {\n        this.editor.showLoadingWarning(0);\n        try {\n            const loader = SVGLoader.fromString(data, {\n                sanitize: true,\n                plugins: this.editor.getCurrentSettings().svg?.loaderPlugins ?? [],\n            });\n            const components = [];\n            await loader.start((component) => {\n                components.push(component);\n            }, (_countProcessed, _totalToProcess) => null);\n            await this.addComponentsFromPaste(components);\n        }\n        finally {\n            this.editor.hideLoadingWarning();\n        }\n    }\n    async doTextPaste(text) {\n        const textTools = this.editor.toolController.getMatchingTools(TextTool);\n        textTools.sort((a, b) => {\n            if (!a.isEnabled() && b.isEnabled()) {\n                return -1;\n            }\n            if (!b.isEnabled() && a.isEnabled()) {\n                return 1;\n            }\n            return 0;\n        });\n        const defaultTextStyle = {\n            size: 12,\n            fontFamily: 'sans',\n            renderingStyle: { fill: Color4.red },\n        };\n        const pastedTextStyle = textTools[0]?.getTextStyle() ?? defaultTextStyle;\n        // Don't paste text that would be invisible.\n        if (text.trim() === '') {\n            return;\n        }\n        const lines = text.split('\\n');\n        await this.addComponentsFromPaste([\n            TextComponent.fromLines(lines, Mat33.identity, pastedTextStyle),\n        ]);\n    }\n    async doImagePaste(dataURL) {\n        const image = new Image();\n        image.src = dataURL;\n        const component = await ImageComponent.fromImage(image, Mat33.identity);\n        await this.addComponentsFromPaste([component]);\n    }\n}\n", "// Allows the toolbar to register keyboard events.\n// @packageDocumentation\nimport  BaseTool  from './BaseTool.mjs';\nexport default class ToolbarShortcutHandler extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, editor.localization.changeTool);\n        this.listeners = new Set([]);\n    }\n    registerListener(listener) {\n        this.listeners.add(listener);\n    }\n    removeListener(listener) {\n        this.listeners.delete(listener);\n    }\n    onKeyPress(event) {\n        // TypeScript seems to automatically convert for of loops into for(init;check;update)\n        // loops (even with target set to es6). Thus, we cannot iterate directly through the\n        // set here.\n        // See https://stackoverflow.com/q/48886500\n        const listeners = Array.from(this.listeners.values());\n        for (const listener of listeners) {\n            if (listener(event)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n", "import { Vec2, Rect2, PathCommandType, QuadraticBezier, } from '@js-draw/math';\nimport  Stroke  from '../Stroke.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  { StrokeSmoother }  from '../util/StrokeSmoother.mjs';\nimport  makeShapeFitAutocorrect  from './autocorrect/makeShapeFitAutocorrect.mjs';\nexport const makePressureSensitiveFreehandLineBuilder = makeShapeFitAutocorrect((initialPoint, viewport) => {\n    // Don't smooth if input is more than ± 3 pixels from the true curve, do smooth if\n    // less than ±1 px from the curve.\n    const maxSmoothingDist = viewport.getSizeOfPixelOnCanvas() * 3;\n    const minSmoothingDist = viewport.getSizeOfPixelOnCanvas();\n    return new PressureSensitiveFreehandLineBuilder(initialPoint, minSmoothingDist, maxSmoothingDist, viewport);\n});\n// Handles stroke smoothing and creates Strokes from user/stylus input.\nexport default class PressureSensitiveFreehandLineBuilder {\n    constructor(startPoint, \n    // Maximum distance from the actual curve (irrespective of stroke width)\n    // for which a point is considered 'part of the curve'.\n    // Note that the maximum will be smaller if the stroke width is less than\n    // [maxFitAllowed].\n    minFitAllowed, maxFitAllowed, viewport) {\n        this.startPoint = startPoint;\n        this.minFitAllowed = minFitAllowed;\n        this.viewport = viewport;\n        this.isFirstSegment = true;\n        this.pathStartConnector = null;\n        this.mostRecentConnector = null;\n        this.nextCurveStartConnector = null;\n        this.lastUpperBezier = null;\n        this.lastLowerBezier = null;\n        this.parts = [];\n        this.upperSegments = [];\n        this.lowerSegments = [];\n        this.curveFitter = new StrokeSmoother(startPoint, minFitAllowed, maxFitAllowed, (curve) => this.addCurve(curve));\n        this.curveStartWidth = startPoint.width;\n        this.bbox = new Rect2(this.startPoint.pos.x, this.startPoint.pos.y, 0, 0);\n    }\n    getBBox() {\n        return this.bbox;\n    }\n    getRenderingStyle() {\n        return {\n            fill: this.startPoint.color ?? null,\n        };\n    }\n    previewCurrentPath(extendWithLatest = true) {\n        const upperPath = this.upperSegments.slice();\n        const lowerPath = this.lowerSegments.slice();\n        let lowerToUpperCap;\n        let pathStartConnector;\n        const currentCurve = this.curveFitter.preview();\n        if (currentCurve && extendWithLatest) {\n            const { upperCurveCommand, lowerToUpperConnector, upperToLowerConnector, lowerCurveCommand } = this.segmentToPath(currentCurve);\n            upperPath.push(upperCurveCommand);\n            lowerPath.push(lowerCurveCommand);\n            lowerToUpperCap = lowerToUpperConnector;\n            pathStartConnector = this.pathStartConnector ?? [upperToLowerConnector];\n        }\n        else {\n            if (this.mostRecentConnector === null || this.pathStartConnector === null) {\n                return null;\n            }\n            lowerToUpperCap = this.mostRecentConnector;\n            pathStartConnector = this.pathStartConnector;\n        }\n        let startPoint;\n        const lastLowerSegment = lowerPath[lowerPath.length - 1];\n        if (lastLowerSegment.kind === PathCommandType.LineTo ||\n            lastLowerSegment.kind === PathCommandType.MoveTo) {\n            startPoint = lastLowerSegment.point;\n        }\n        else {\n            startPoint = lastLowerSegment.endPoint;\n        }\n        return {\n            // Start at the end of the lower curve:\n            //    Start point\n            //     ↓\n            //  __/  __/ ← Most recent points on this end\n            // /___ /\n            //  ↑\n            //  Oldest points\n            startPoint,\n            commands: [\n                // Move to the most recent point on the upperPath:\n                //     ----→•\n                //  __/  __/\n                // /___ /\n                lowerToUpperCap,\n                // Move to the beginning of the upperPath:\n                //  __/  __/\n                // /___ /\n                //     • ←-\n                ...upperPath.reverse(),\n                // Move to the beginning of the lowerPath:\n                //  __/  __/\n                // /___ /\n                // •\n                ...pathStartConnector,\n                // Move back to the start point:\n                //     •\n                //  __/  __/\n                // /___ /\n                ...lowerPath,\n            ],\n            style: this.getRenderingStyle(),\n        };\n    }\n    previewFullPath() {\n        const preview = this.previewCurrentPath();\n        if (preview) {\n            return [...this.parts, preview];\n        }\n        return null;\n    }\n    preview(renderer) {\n        const paths = this.previewFullPath();\n        if (paths) {\n            const approxBBox = this.viewport.visibleRect;\n            renderer.startObject(approxBBox);\n            for (const path of paths) {\n                renderer.drawPath(path);\n            }\n            renderer.endObject();\n        }\n    }\n    build() {\n        this.curveFitter.finalizeCurrentCurve();\n        if (this.isFirstSegment) {\n            // Ensure we have something.\n            this.addCurve(null);\n        }\n        return new Stroke(this.previewFullPath());\n    }\n    roundPoint(point) {\n        let minFit = Math.min(this.minFitAllowed, this.curveStartWidth / 3);\n        if (minFit < 1e-10) {\n            minFit = this.minFitAllowed;\n        }\n        return Viewport.roundPoint(point, minFit);\n    }\n    // Returns true if, due to overlap with previous segments, a new RenderablePathSpec should be created.\n    shouldStartNewSegment(lowerCurve, upperCurve) {\n        if (!this.lastLowerBezier || !this.lastUpperBezier) {\n            return false;\n        }\n        const getIntersection = (curve1, curve2) => {\n            const intersections = curve1.intersectsBezier(curve2);\n            if (!intersections.length)\n                return null;\n            return intersections[0].point;\n        };\n        const getExitDirection = (curve) => {\n            return curve.p2.minus(curve.p1).normalized();\n        };\n        const getEnterDirection = (curve) => {\n            return curve.p1.minus(curve.p0).normalized();\n        };\n        // Prevent\n        //         /\n        //       / /\n        //      /  /  /|\n        //    /    /   |\n        //  /          |\n        // where the next stroke and the previous stroke are in different directions.\n        //\n        // Are the exit/enter directions of the previous and current curves in different enough directions?\n        if (getEnterDirection(upperCurve).dot(getExitDirection(this.lastUpperBezier)) < 0.35 ||\n            getEnterDirection(lowerCurve).dot(getExitDirection(this.lastLowerBezier)) < 0.35 ||\n            // Also handle if the curves exit/enter directions differ\n            getEnterDirection(upperCurve).dot(getExitDirection(upperCurve)) < 0 ||\n            getEnterDirection(lowerCurve).dot(getExitDirection(lowerCurve)) < 0) {\n            return true;\n        }\n        // Check whether the lower curve intersects the other wall:\n        //       /    / ← lower\n        //    / /   /\n        // /   / /\n        //   //\n        // / /\n        const lowerIntersection = getIntersection(lowerCurve, this.lastUpperBezier);\n        const upperIntersection = getIntersection(upperCurve, this.lastLowerBezier);\n        if (lowerIntersection || upperIntersection) {\n            return true;\n        }\n        return false;\n    }\n    addCurve(curve) {\n        // Case where no points have been added\n        if (!curve) {\n            // Don't create a circle around the initial point if the stroke has more than one point.\n            if (!this.isFirstSegment) {\n                return;\n            }\n            const width = Viewport.roundPoint(this.startPoint.width / 2.2, Math.min(this.minFitAllowed, this.startPoint.width / 4));\n            const center = this.roundPoint(this.startPoint.pos);\n            // Start on the right, cycle clockwise:\n            //    |\n            //  ----- ←\n            //    |\n            const startPoint = this.startPoint.pos.plus(Vec2.of(width, 0));\n            // Draw a circle-ish shape around the start point\n            this.lowerSegments.push({\n                kind: PathCommandType.QuadraticBezierTo,\n                controlPoint: center.plus(Vec2.of(width, width)),\n                // Bottom of the circle\n                //    |\n                //  -----\n                //    |\n                //    ↑\n                endPoint: center.plus(Vec2.of(0, width)),\n            }, {\n                kind: PathCommandType.QuadraticBezierTo,\n                controlPoint: center.plus(Vec2.of(-width, width)),\n                endPoint: center.plus(Vec2.of(-width, 0)),\n            }, {\n                kind: PathCommandType.QuadraticBezierTo,\n                controlPoint: center.plus(Vec2.of(-width, -width)),\n                endPoint: center.plus(Vec2.of(0, -width)),\n            }, {\n                kind: PathCommandType.QuadraticBezierTo,\n                controlPoint: center.plus(Vec2.of(width, -width)),\n                endPoint: center.plus(Vec2.of(width, 0)),\n            });\n            const connector = {\n                kind: PathCommandType.LineTo,\n                point: startPoint,\n            };\n            this.pathStartConnector = [connector];\n            this.mostRecentConnector = connector;\n            return;\n        }\n        const { upperCurveCommand, lowerToUpperConnector, upperToLowerConnector, lowerCurveCommand, lowerCurve, upperCurve, nextCurveStartConnector, } = this.segmentToPath(curve);\n        let shouldStartNew = this.shouldStartNewSegment(lowerCurve, upperCurve);\n        if (shouldStartNew) {\n            const part = this.previewCurrentPath(false);\n            if (part) {\n                this.parts.push(part);\n                this.upperSegments = [];\n                this.lowerSegments = [];\n            }\n            else {\n                shouldStartNew = false;\n            }\n        }\n        if (this.isFirstSegment || shouldStartNew) {\n            // We draw the upper path (reversed), then the lower path, so we need the\n            // upperToLowerConnector to join the two paths.\n            this.pathStartConnector = this.nextCurveStartConnector ?? [upperToLowerConnector];\n            this.isFirstSegment = false;\n        }\n        // With the most recent connector, we're joining the end of the lowerPath to the most recent\n        // upperPath:\n        this.mostRecentConnector = lowerToUpperConnector;\n        this.nextCurveStartConnector = nextCurveStartConnector;\n        this.lowerSegments.push(lowerCurveCommand);\n        this.upperSegments.push(upperCurveCommand);\n        this.lastLowerBezier = lowerCurve;\n        this.lastUpperBezier = upperCurve;\n        this.curveStartWidth = curve.startWidth;\n    }\n    // Returns [upper curve, connector, lower curve]\n    segmentToPath(curve) {\n        const bezier = new QuadraticBezier(curve.startPoint, curve.controlPoint, curve.endPoint);\n        let startVec = bezier.normal(0);\n        let endVec = bezier.normal(1);\n        startVec = startVec.times(curve.startWidth / 2);\n        endVec = endVec.times(curve.endWidth / 2);\n        if (!isFinite(startVec.magnitude())) {\n            console.error('Warning: startVec is NaN or ∞', startVec, endVec, curve);\n            startVec = endVec;\n        }\n        const startPt = curve.startPoint;\n        const endPt = curve.endPoint;\n        const controlPoint = curve.controlPoint;\n        // Approximate the normal at the location of the control point\n        const projectionT = bezier.nearestPointTo(controlPoint).parameterValue;\n        const halfVecT = projectionT;\n        const halfVec = bezier\n            .normal(halfVecT)\n            .times((curve.startWidth / 2) * halfVecT + (curve.endWidth / 2) * (1 - halfVecT));\n        // Each starts at startPt ± startVec\n        const lowerCurveStartPoint = this.roundPoint(startPt.plus(startVec));\n        const lowerCurveControlPoint = this.roundPoint(controlPoint.plus(halfVec));\n        const lowerCurveEndPoint = this.roundPoint(endPt.plus(endVec));\n        const upperCurveControlPoint = this.roundPoint(controlPoint.minus(halfVec));\n        const upperCurveStartPoint = this.roundPoint(endPt.minus(endVec));\n        const upperCurveEndPoint = this.roundPoint(startPt.minus(startVec));\n        const lowerCurveCommand = {\n            kind: PathCommandType.QuadraticBezierTo,\n            controlPoint: lowerCurveControlPoint,\n            endPoint: lowerCurveEndPoint,\n        };\n        // From the end of the upperCurve to the start of the lowerCurve:\n        const upperToLowerConnector = {\n            kind: PathCommandType.LineTo,\n            point: lowerCurveStartPoint,\n        };\n        // From the end of lowerCurve to the start of upperCurve:\n        const lowerToUpperConnector = {\n            kind: PathCommandType.LineTo,\n            point: upperCurveStartPoint,\n        };\n        // The segment to be used to start the next path (to insert to connect the start of its\n        // lower and the end of its upper).\n        const nextCurveStartConnector = [\n            {\n                kind: PathCommandType.LineTo,\n                point: upperCurveStartPoint,\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: lowerCurveEndPoint,\n            },\n        ];\n        const upperCurveCommand = {\n            kind: PathCommandType.QuadraticBezierTo,\n            controlPoint: upperCurveControlPoint,\n            endPoint: upperCurveEndPoint,\n        };\n        const upperCurve = new QuadraticBezier(upperCurveStartPoint, upperCurveControlPoint, upperCurveEndPoint);\n        const lowerCurve = new QuadraticBezier(lowerCurveStartPoint, lowerCurveControlPoint, lowerCurveEndPoint);\n        return {\n            upperCurveCommand,\n            upperToLowerConnector,\n            lowerToUpperConnector,\n            lowerCurveCommand,\n            upperCurve,\n            lowerCurve,\n            nextCurveStartConnector,\n        };\n    }\n    addPoint(newPoint) {\n        this.curveFitter.addPoint(newPoint);\n    }\n}\n", "// Displays a find dialog that allows the user to search for and focus text.\n//\n// @packageDocumentation\nimport  TextComponent  from '../components/TextComponent.mjs';\nimport  ImageComponent  from '../components/ImageComponent.mjs';\nimport  BaseTool  from './BaseTool.mjs';\nimport  { toggleFindVisibleShortcutId }  from './keybindings.mjs';\nconst cssPrefix = 'find-tool';\nexport default class FindTool extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, editor.localization.findLabel);\n        this.editor = editor;\n        this.currentMatchIdx = 0;\n        this.overlay = document.createElement('div');\n        this.fillOverlay();\n        editor.createHTMLOverlay(this.overlay);\n        this.overlay.style.display = 'none';\n        this.overlay.classList.add(`${cssPrefix}-overlay`);\n    }\n    canReceiveInputInReadOnlyEditor() {\n        return true;\n    }\n    getMatches(searchFor) {\n        const lowerSearchFor = searchFor.toLocaleLowerCase();\n        const matchingComponents = this.editor.image.getAllComponents().filter((component) => {\n            let text = '';\n            if (component instanceof TextComponent) {\n                text = component.getText();\n            }\n            else if (component instanceof ImageComponent) {\n                text = component.getAltText() ?? '';\n            }\n            else {\n                return false;\n            }\n            const hasLowercaseMatch = text.toLocaleLowerCase().indexOf(lowerSearchFor) !== -1;\n            const hasSameCaseMatch = text.indexOf(searchFor) !== -1;\n            return hasLowercaseMatch || hasSameCaseMatch;\n        });\n        return matchingComponents.map((match) => match.getBBox());\n    }\n    focusCurrentMatch() {\n        const matches = this.getMatches(this.searchInput.value);\n        let matchIdx = this.currentMatchIdx % matches.length;\n        if (matchIdx < 0) {\n            matchIdx = matches.length + matchIdx;\n        }\n        if (matchIdx < matches.length) {\n            const undoable = false;\n            void this.editor.dispatch(this.editor.viewport.zoomTo(matches[matchIdx], true, true), undoable);\n            this.editor.announceForAccessibility(this.editor.localization.focusedFoundText(matchIdx + 1, matches.length));\n        }\n    }\n    toNextMatch() {\n        this.currentMatchIdx++;\n        this.focusCurrentMatch();\n    }\n    toPrevMatch() {\n        this.currentMatchIdx--;\n        this.focusCurrentMatch();\n    }\n    fillOverlay() {\n        const label = document.createElement('label');\n        this.searchInput = document.createElement('input');\n        const nextBtn = document.createElement('button');\n        const closeBtn = document.createElement('button');\n        // Math.random() ensures that the ID is unique (to allow us to refer to it\n        // with an htmlFor).\n        this.searchInput.setAttribute('id', `${cssPrefix}-searchInput-${Math.random()}`);\n        label.htmlFor = this.searchInput.getAttribute('id');\n        label.innerText = this.editor.localization.findLabel;\n        nextBtn.innerText = this.editor.localization.toNextMatch;\n        closeBtn.innerText = this.editor.localization.closeDialog;\n        this.searchInput.onkeydown = (ev) => {\n            if (ev.key === 'Enter') {\n                if (ev.shiftKey) {\n                    this.toPrevMatch();\n                }\n                else {\n                    this.toNextMatch();\n                }\n            }\n            else if (ev.key === 'Escape') {\n                this.setVisible(false);\n            }\n            else if (this.editor.shortcuts.matchesShortcut(toggleFindVisibleShortcutId, ev)) {\n                ev.preventDefault();\n                this.toggleVisible();\n            }\n        };\n        nextBtn.onclick = () => {\n            this.toNextMatch();\n        };\n        closeBtn.onclick = () => {\n            this.setVisible(false);\n        };\n        this.overlay.replaceChildren(label, this.searchInput, nextBtn, closeBtn);\n    }\n    isVisible() {\n        return this.overlay.style.display !== 'none';\n    }\n    setVisible(visible) {\n        if (visible !== this.isVisible()) {\n            this.overlay.style.display = visible ? 'block' : 'none';\n            if (visible) {\n                this.searchInput.focus();\n                this.editor.announceForAccessibility(this.editor.localization.findDialogShown);\n            }\n            else {\n                this.editor.focus();\n                this.editor.announceForAccessibility(this.editor.localization.findDialogHidden);\n            }\n        }\n    }\n    toggleVisible() {\n        this.setVisible(!this.isVisible());\n    }\n    onKeyPress(event) {\n        if (this.editor.shortcuts.matchesShortcut(toggleFindVisibleShortcutId, event)) {\n            this.toggleVisible();\n            return true;\n        }\n        return false;\n    }\n    setEnabled(enabled) {\n        super.setEnabled(enabled);\n        if (this.isEnabled()) {\n            this.setVisible(false);\n        }\n    }\n}\n", "import  BaseTool  from '../BaseTool.mjs';\nimport  { selectAllKeyboardShortcut }  from '../keybindings.mjs';\nimport  SelectionTool  from './SelectionTool.mjs';\n// Handles ctrl+a: Select all\nexport default class SelectAllShortcutHandler extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, editor.localization.selectAllTool);\n        this.editor = editor;\n    }\n    canReceiveInputInReadOnlyEditor() {\n        return true;\n    }\n    // @internal\n    onKeyPress(event) {\n        if (this.editor.shortcuts.matchesShortcut(selectAllKeyboardShortcut, event)) {\n            const selectionTools = this.editor.toolController.getMatchingTools(SelectionTool);\n            if (selectionTools.length > 0) {\n                const selectionTool = selectionTools[0];\n                selectionTool.setEnabled(true);\n                selectionTool.setSelection(this.editor.image.getAllComponents());\n                return true;\n            }\n        }\n        return false;\n    }\n}\n", "import { LineSegment2, Color4 } from '@js-draw/math';\nimport  BaseTool  from './BaseTool.mjs';\nclass SoundFeedback {\n    constructor() {\n        this.closed = false;\n        // No AudioContext? Exit!\n        if (!window.AudioContext) {\n            console.warn('Accessibility sound UI: Unable to open AudioContext.');\n            this.closed = true;\n            return;\n        }\n        this.ctx = new AudioContext();\n        // Color oscillator and gain\n        this.colorOscHue = this.ctx.createOscillator();\n        this.colorOscValue = this.ctx.createOscillator();\n        this.colorOscSaturation = this.ctx.createOscillator();\n        this.colorOscHue.type = 'triangle';\n        this.colorOscSaturation.type = 'sine';\n        this.colorOscValue.type = 'sawtooth';\n        this.valueGain = this.ctx.createGain();\n        this.colorOscValue.connect(this.valueGain);\n        this.valueGain.gain.setValueAtTime(0.18, this.ctx.currentTime);\n        this.colorGain = this.ctx.createGain();\n        this.colorOscHue.connect(this.colorGain);\n        this.valueGain.connect(this.colorGain);\n        this.colorOscSaturation.connect(this.colorGain);\n        this.colorGain.connect(this.ctx.destination);\n        // Boundary oscillator and gain\n        this.boundaryGain = this.ctx.createGain();\n        this.boundaryOsc = this.ctx.createOscillator();\n        this.boundaryOsc.type = 'sawtooth';\n        this.boundaryGain.gain.setValueAtTime(0, this.ctx.currentTime);\n        this.boundaryOsc.connect(this.boundaryGain);\n        this.boundaryGain.connect(this.ctx.destination);\n        // Prepare for the first announcement/feedback.\n        this.colorOscHue.start();\n        this.colorOscSaturation.start();\n        this.colorOscValue.start();\n        this.boundaryOsc.start();\n        this.pause();\n    }\n    pause() {\n        if (this.closed)\n            return;\n        this.colorGain.gain.setValueAtTime(0, this.ctx.currentTime);\n        void this.ctx.suspend();\n    }\n    play() {\n        if (this.closed)\n            return;\n        void this.ctx.resume();\n    }\n    setColor(color) {\n        const hsv = color.asHSV();\n        // Choose frequencies that roughly correspond to hue, saturation, and value.\n        const hueFrequency = -Math.cos(hsv.x / 2) * 220 + 440;\n        const saturationFrequency = hsv.y * 440 + 220;\n        const valueFrequency = (hsv.z + 0.1) * 440;\n        // Sigmoid with maximum 0.25 * alpha.\n        // Louder for greater value.\n        const gain = (0.25 * Math.min(1, color.a)) / (1 + Math.exp(-(hsv.z - 0.5) * 3));\n        this.colorOscHue.frequency.setValueAtTime(hueFrequency, this.ctx.currentTime);\n        this.colorOscSaturation.frequency.setValueAtTime(saturationFrequency, this.ctx.currentTime);\n        this.colorOscValue.frequency.setValueAtTime(valueFrequency, this.ctx.currentTime);\n        this.valueGain.gain.setValueAtTime((1 - hsv.z) * 0.4, this.ctx.currentTime);\n        this.colorGain.gain.setValueAtTime(gain, this.ctx.currentTime);\n    }\n    announceBoundaryCross(boundaryCrossCount) {\n        this.boundaryGain.gain.cancelScheduledValues(this.ctx.currentTime);\n        this.boundaryGain.gain.setValueAtTime(0, this.ctx.currentTime);\n        this.boundaryGain.gain.linearRampToValueAtTime(0.018, this.ctx.currentTime + 0.1);\n        this.boundaryOsc.frequency.setValueAtTime(440 + Math.atan(boundaryCrossCount / 2) * 100, this.ctx.currentTime);\n        this.boundaryGain.gain.linearRampToValueAtTime(0, this.ctx.currentTime + 0.25);\n    }\n    close() {\n        void this.ctx.close();\n        this.closed = true;\n    }\n}\n/**\n * This tool, when enabled, plays a sound representing the color of the portion of the display\n * currently under the cursor. This tool adds a button that can be navigated to with the tab key\n * that enables/disables the tool.\n *\n * This allows the user to explore the content of the display without a working screen.\n */\nexport default class SoundUITool extends BaseTool {\n    constructor(editor, description) {\n        super(editor.notifier, description);\n        this.editor = editor;\n        this.soundFeedback = null;\n        // Create a screen-reader-usable method of toggling the tool:\n        this.toggleButtonContainer = document.createElement('div');\n        this.toggleButtonContainer.classList.add('js-draw-sound-ui-toggle');\n        this.toggleButton = document.createElement('button');\n        this.toggleButton.onclick = () => {\n            this.setEnabled(!this.isEnabled());\n        };\n        this.toggleButtonContainer.appendChild(this.toggleButton);\n        this.updateToggleButtonText();\n        editor.createHTMLOverlay(this.toggleButtonContainer);\n    }\n    canReceiveInputInReadOnlyEditor() {\n        return true;\n    }\n    updateToggleButtonText() {\n        const containerEnabledClass = 'sound-ui-tool-enabled';\n        if (this.isEnabled()) {\n            this.toggleButton.innerText = this.editor.localization.disableAccessibilityExploreTool;\n            this.toggleButtonContainer.classList.add(containerEnabledClass);\n        }\n        else {\n            this.toggleButton.innerText = this.editor.localization.enableAccessibilityExploreTool;\n            this.toggleButtonContainer.classList.remove(containerEnabledClass);\n        }\n    }\n    setEnabled(enabled) {\n        super.setEnabled(enabled);\n        if (!this.isEnabled()) {\n            this.soundFeedback?.close();\n            this.soundFeedback = null;\n        }\n        else {\n            this.editor.announceForAccessibility(this.editor.localization.soundExplorerUsageAnnouncement);\n        }\n        this.updateToggleButtonText();\n    }\n    onKeyPress(event) {\n        if (event.code === 'Escape') {\n            this.setEnabled(false);\n            return true;\n        }\n        return false;\n    }\n    onPointerDown({ current, allPointers }) {\n        if (!this.soundFeedback) {\n            this.soundFeedback = new SoundFeedback();\n        }\n        // Allow two-finger gestures to move the screen.\n        if (allPointers.length >= 2) {\n            return false;\n        }\n        // Accept multiple cursors -- some screen readers require multiple (touch) pointers to interact with\n        // an image instead of using the built-in navigation features.\n        this.soundFeedback?.play();\n        this.soundFeedback?.setColor(this.editor.display.getColorAt(current.screenPos) ?? Color4.black);\n        this.lastPointerPos = current.canvasPos;\n        return true;\n    }\n    onPointerMove({ current }) {\n        this.soundFeedback?.setColor(this.editor.display.getColorAt(current.screenPos) ?? Color4.black);\n        const pointerMotionLine = new LineSegment2(this.lastPointerPos, current.canvasPos);\n        const collisions = this.editor.image\n            .getComponentsIntersecting(pointerMotionLine.bbox)\n            .filter((component) => component.intersects(pointerMotionLine));\n        this.lastPointerPos = current.canvasPos;\n        if (collisions.length > 0) {\n            this.soundFeedback?.announceBoundaryCross(collisions.length);\n        }\n    }\n    onPointerUp(_event) {\n        this.soundFeedback?.pause();\n    }\n    onGestureCancel() {\n        this.soundFeedback?.pause();\n    }\n}\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _InputPipeline_head, _InputPipeline_tail;\nimport  InputMapper  from './InputMapper.mjs';\n/**\n * The composition of multiple `InputMapper`s.\n */\nclass InputPipeline extends InputMapper {\n    constructor() {\n        super(...arguments);\n        _InputPipeline_head.set(this, null);\n        _InputPipeline_tail.set(this, null);\n    }\n    onEvent(event) {\n        if (__classPrivateFieldGet(this, _InputPipeline_head, \"f\") === null) {\n            return this.emit(event);\n        }\n        else {\n            return __classPrivateFieldGet(this, _InputPipeline_head, \"f\").onEvent(event);\n        }\n    }\n    /**\n     * Adds a new `InputMapper` to the *tail* of this pipeline.\n     * Note that an instance of an `InputMapper` can only be used in a single\n     * pipeline.\n     */\n    addToTail(mapper) {\n        if (!__classPrivateFieldGet(this, _InputPipeline_tail, \"f\")) {\n            __classPrivateFieldSet(this, _InputPipeline_head, mapper, \"f\");\n            __classPrivateFieldSet(this, _InputPipeline_tail, __classPrivateFieldGet(this, _InputPipeline_head, \"f\"), \"f\");\n        }\n        else {\n            __classPrivateFieldGet(this, _InputPipeline_tail, \"f\").setEmitListener(mapper);\n            __classPrivateFieldSet(this, _InputPipeline_tail, mapper, \"f\");\n        }\n        __classPrivateFieldGet(this, _InputPipeline_tail, \"f\").setEmitListener((event) => this.emit(event));\n    }\n}\n_InputPipeline_head = new WeakMap(), _InputPipeline_tail = new WeakMap();\nexport default InputPipeline;\n", "import { Rect2 } from '@js-draw/math';\nimport  { EditorEventType }  from '../types.mjs';\nimport  BaseTool  from './BaseTool.mjs';\n/**\n * This tool, when enabled, renders scrollbars reflecting the current position\n * of the view relative to the import/export area of the image.\n *\n * **Note**: These scrollbars are currently not draggable. This may change in\n * a future release.\n */\nexport default class ScrollbarTool extends BaseTool {\n    constructor(editor) {\n        super(editor.notifier, 'scrollbar');\n        this.editor = editor;\n        this.fadeOutTimeout = null;\n        this.scrollbarOverlay = document.createElement('div');\n        this.scrollbarOverlay.classList.add('ScrollbarTool-overlay');\n        this.verticalScrollbar = document.createElement('div');\n        this.verticalScrollbar.classList.add('vertical-scrollbar');\n        this.horizontalScrollbar = document.createElement('div');\n        this.horizontalScrollbar.classList.add('horizontal-scrollbar');\n        this.scrollbarOverlay.replaceChildren(this.verticalScrollbar, this.horizontalScrollbar);\n        let overlay = null;\n        let viewportListener = null;\n        this.enabledValue().onUpdateAndNow((enabled) => {\n            overlay?.remove();\n            viewportListener?.remove();\n            viewportListener = null;\n            overlay = null;\n            if (enabled) {\n                viewportListener = editor.notifier.on(EditorEventType.ViewportChanged, (_event) => {\n                    this.updateScrollbars();\n                });\n                this.updateScrollbars();\n                overlay = editor.createHTMLOverlay(this.scrollbarOverlay);\n            }\n        });\n    }\n    updateScrollbars() {\n        const viewport = this.editor.viewport;\n        const screenSize = viewport.getScreenRectSize();\n        const screenRect = new Rect2(0, 0, screenSize.x, screenSize.y);\n        const imageRect = this.editor\n            .getImportExportRect()\n            // The scrollbars are positioned in screen coordinates, so the exportRect also needs\n            // to be in screen coordinates\n            .transformedBoundingBox(viewport.canvasToScreenTransform)\n            // If the screenRect is outside of the exportRect, expand the image rectangle\n            .union(screenRect);\n        const scrollbarWidth = (screenRect.width / imageRect.width) * screenSize.x;\n        const scrollbarHeight = (screenRect.height / imageRect.height) * screenSize.y;\n        const scrollbarX = ((screenRect.x - imageRect.x) / imageRect.width) * screenSize.x;\n        const scrollbarY = ((screenRect.y - imageRect.y) / imageRect.height) * screenSize.y;\n        this.horizontalScrollbar.style.width = `${scrollbarWidth}px`;\n        this.verticalScrollbar.style.height = `${scrollbarHeight}px`;\n        this.horizontalScrollbar.style.marginLeft = `${scrollbarX}px`;\n        this.verticalScrollbar.style.marginTop = `${scrollbarY}px`;\n        // Style the scrollbars differently when there's no scroll (all content visible)\n        const handleNoScrollStyling = (scrollbar, size, fillSize) => {\n            const fillsWindowClass = 'represents-no-scroll';\n            if (Math.abs(size - fillSize) < 1e-8) {\n                scrollbar.classList.add(fillsWindowClass);\n            }\n            else {\n                scrollbar.classList.remove(fillsWindowClass);\n            }\n        };\n        handleNoScrollStyling(this.horizontalScrollbar, scrollbarWidth, screenSize.x);\n        handleNoScrollStyling(this.verticalScrollbar, scrollbarHeight, screenSize.y);\n        // Fade out after a delay.\n        if (this.fadeOutTimeout !== null) {\n            clearTimeout(this.fadeOutTimeout);\n        }\n        const fadeOutDelay = 3000;\n        this.fadeOutTimeout = setTimeout(() => {\n            this.scrollbarOverlay.classList.remove('just-updated');\n        }, fadeOutDelay);\n        this.scrollbarOverlay.classList.add('just-updated');\n    }\n}\n", "import  { EditorEventType }  from '../types.mjs';\nimport { Color4 } from '@js-draw/math';\nimport  PanZoom, { PanZoomMode }  from './PanZoom.mjs';\nimport  Pen  from './Pen.mjs';\nimport  ToolEnabledGroup  from './ToolEnabledGroup.mjs';\nimport  Eraser  from './Eraser.mjs';\nimport  SelectionTool  from './SelectionTool/SelectionTool.mjs';\nimport  UndoRedoShortcut  from './UndoRedoShortcut.mjs';\nimport  TextTool  from './TextTool.mjs';\nimport  PipetteTool  from './PipetteTool.mjs';\nimport  ToolSwitcherShortcut  from './ToolSwitcherShortcut.mjs';\nimport  PasteHandler  from './PasteHandler.mjs';\nimport  ToolbarShortcutHandler  from './ToolbarShortcutHandler.mjs';\nimport  { makePressureSensitiveFreehandLineBuilder }  from '../components/builders/PressureSensitiveFreehandLineBuilder.mjs';\nimport  FindTool  from './FindTool.mjs';\nimport  SelectAllShortcutHandler  from './SelectionTool/SelectAllShortcutHandler.mjs';\nimport  SoundUITool  from './SoundUITool.mjs';\nimport  { InputEvtType }  from '../inputEvents.mjs';\nimport  InputPipeline  from './InputFilter/InputPipeline.mjs';\nimport  InputStabilizer  from './InputFilter/InputStabilizer.mjs';\nimport  ScrollbarTool  from './ScrollbarTool.mjs';\nexport default class ToolController {\n    /** @internal */\n    constructor(editor, localization) {\n        this.activeTool = null;\n        this.isEditorReadOnly = editor.isReadOnlyReactiveValue();\n        this.inputPipeline = new InputPipeline();\n        this.inputPipeline.setEmitListener((event) => this.onEventInternal(event));\n        const primaryToolGroup = new ToolEnabledGroup();\n        this.primaryToolGroup = primaryToolGroup;\n        const panZoomTool = new PanZoom(editor, PanZoomMode.TwoFingerTouchGestures | PanZoomMode.RightClickDrags, localization.touchPanTool);\n        const keyboardPanZoomTool = new PanZoom(editor, PanZoomMode.Keyboard, localization.keyboardPanZoom);\n        const primaryPenTool = new Pen(editor, localization.penTool(1), {\n            color: Color4.purple,\n            thickness: 8,\n        });\n        const secondaryPenTool = new Pen(editor, localization.penTool(2), {\n            color: Color4.clay,\n            thickness: 4,\n        });\n        // Stabilize the secondary pen tool.\n        secondaryPenTool.setInputMapper(new InputStabilizer(editor.viewport));\n        const eraser = new Eraser(editor, localization.eraserTool);\n        const primaryTools = [\n            // Three pens\n            primaryPenTool,\n            secondaryPenTool,\n            // Highlighter-like pen with width=40\n            new Pen(editor, localization.penTool(3), {\n                color: Color4.ofRGBA(1, 1, 0, 0.5),\n                thickness: 40,\n                factory: makePressureSensitiveFreehandLineBuilder,\n            }),\n            eraser,\n            new SelectionTool(editor, localization.selectionTool),\n            new TextTool(editor, localization.textTool, localization),\n            new PanZoom(editor, PanZoomMode.SinglePointerGestures, localization.anyDevicePanning),\n        ];\n        // Accessibility tools\n        const soundExplorer = new SoundUITool(editor, localization.soundExplorer);\n        soundExplorer.setEnabled(false);\n        this.tools = [\n            new ScrollbarTool(editor),\n            new PipetteTool(editor, localization.pipetteTool),\n            soundExplorer,\n            panZoomTool,\n            ...primaryTools,\n            keyboardPanZoomTool,\n            new UndoRedoShortcut(editor),\n            new ToolbarShortcutHandler(editor),\n            new ToolSwitcherShortcut(editor),\n            eraser.makeEraserSwitcherTool(),\n            new FindTool(editor),\n            new PasteHandler(editor),\n            new SelectAllShortcutHandler(editor),\n        ];\n        primaryTools.forEach((tool) => tool.setToolGroup(primaryToolGroup));\n        panZoomTool.setEnabled(true);\n        primaryPenTool.setEnabled(true);\n        editor.notifier.on(EditorEventType.ToolEnabled, (event) => {\n            if (event.kind === EditorEventType.ToolEnabled) {\n                editor.announceForAccessibility(localization.toolEnabledAnnouncement(event.tool.description));\n            }\n        });\n        editor.notifier.on(EditorEventType.ToolDisabled, (event) => {\n            if (event.kind === EditorEventType.ToolDisabled) {\n                editor.announceForAccessibility(localization.toolDisabledAnnouncement(event.tool.description));\n            }\n        });\n        this.activeTool = null;\n    }\n    /**\n     * Replaces the current set of tools with `tools`. This should only be done before\n     * the creation of the app's toolbar (if using `AbstractToolbar`).\n     *\n     * If no `primaryToolGroup` is given, an empty one will be created.\n     */\n    setTools(tools, primaryToolGroup) {\n        this.tools = tools;\n        this.primaryToolGroup = primaryToolGroup ?? new ToolEnabledGroup();\n    }\n    /**\n     * Add a tool that acts like one of the primary tools (only one primary tool can be enabled at a time).\n     *\n     * If the tool is already added to this, the tool is converted to a primary tool.\n     *\n     * This should be called before creating the app's toolbar.\n     */\n    addPrimaryTool(tool) {\n        tool.setToolGroup(this.primaryToolGroup);\n        if (tool.isEnabled()) {\n            this.primaryToolGroup.notifyEnabled(tool);\n        }\n        if (!this.tools.includes(tool)) {\n            this.addTool(tool);\n        }\n    }\n    getPrimaryTools() {\n        return this.tools.filter((tool) => {\n            return tool.getToolGroup() === this.primaryToolGroup;\n        });\n    }\n    /**\n     * Add a tool to the end of this' tool list (the added tool receives events after tools already added to this).\n     * This should be called before creating the app's toolbar.\n     *\n     * If `options.addToFront`, the tool is added to the beginning of this' tool list.\n     *\n     * Does nothing if the tool is already present.\n     */\n    addTool(tool, options) {\n        // Only add if not already present.\n        if (!this.tools.includes(tool)) {\n            if (options?.addToFront) {\n                this.tools.splice(0, 0, tool);\n            }\n            else {\n                this.tools.push(tool);\n            }\n        }\n    }\n    /**\n     * Removes **and destroys** all tools in `tools` from this.\n     */\n    removeAndDestroyTools(tools) {\n        const newTools = [];\n        for (const tool of this.tools) {\n            if (tools.includes(tool)) {\n                if (this.activeTool === tool) {\n                    this.activeTool = null;\n                }\n                tool.onDestroy();\n            }\n            else {\n                newTools.push(tool);\n            }\n        }\n        this.tools = newTools;\n    }\n    insertTools(insertNear, toolsToInsert, mode) {\n        this.tools = this.tools.filter((tool) => !toolsToInsert.includes(tool));\n        const newTools = [];\n        for (const tool of this.tools) {\n            if (mode === 'after') {\n                newTools.push(tool);\n            }\n            if (tool === insertNear) {\n                newTools.push(...toolsToInsert);\n            }\n            if (mode === 'before') {\n                newTools.push(tool);\n            }\n        }\n        this.tools = newTools;\n    }\n    /**\n     * Removes a tool from this' tool list and replaces it with `replaceWith`.\n     *\n     * If any of `toolsToInsert` have already been added to this, the tools are\n     * moved.\n     *\n     * This should be called before creating the editor's toolbar.\n     */\n    insertToolsAfter(insertAfter, toolsToInsert) {\n        this.insertTools(insertAfter, toolsToInsert, 'after');\n    }\n    /** @see {@link insertToolsAfter} */\n    insertToolsBefore(insertBefore, toolsToInsert) {\n        this.insertTools(insertBefore, toolsToInsert, 'before');\n    }\n    // @internal use `dispatchEvent` rather than calling `onEvent` directly.\n    onEventInternal(event) {\n        const isEditorReadOnly = this.isEditorReadOnly.get();\n        const canToolReceiveInput = (tool) => {\n            return tool.isEnabled() && (!isEditorReadOnly || tool.canReceiveInputInReadOnlyEditor());\n        };\n        let handled = false;\n        if (event.kind === InputEvtType.PointerDownEvt) {\n            let canOnlySendToActiveTool = false;\n            if (this.activeTool && !this.activeTool.eventCanBeDeliveredToNonActiveTool(event)) {\n                canOnlySendToActiveTool = true;\n            }\n            for (const tool of this.tools) {\n                if (canOnlySendToActiveTool && tool !== this.activeTool) {\n                    continue;\n                }\n                if (canToolReceiveInput(tool) && tool.onEvent(event)) {\n                    if (this.activeTool !== tool) {\n                        this.activeTool?.onEvent({ kind: InputEvtType.GestureCancelEvt });\n                    }\n                    this.activeTool = tool;\n                    handled = true;\n                    break;\n                }\n            }\n        }\n        else if (event.kind === InputEvtType.PointerUpEvt) {\n            const upResult = this.activeTool?.onEvent(event);\n            const continueHandlingEvents = upResult && event.allPointers.length > 1;\n            // Should the active tool continue handling events (without an additional pointer down?)\n            if (!continueHandlingEvents) {\n                // No -- Remove the current tool\n                this.activeTool = null;\n            }\n            handled = true;\n        }\n        else if (event.kind === InputEvtType.PointerMoveEvt) {\n            if (this.activeTool !== null) {\n                this.activeTool.onEvent(event);\n                handled = true;\n            }\n        }\n        else if (event.kind === InputEvtType.GestureCancelEvt) {\n            if (this.activeTool !== null) {\n                this.activeTool.onEvent(event);\n                this.activeTool = null;\n            }\n        }\n        else {\n            for (const tool of this.tools) {\n                if (!canToolReceiveInput(tool)) {\n                    continue;\n                }\n                handled = tool.onEvent(event);\n                if (handled) {\n                    break;\n                }\n            }\n        }\n        return handled;\n    }\n    /** Alias for {@link dispatchInputEvent}. */\n    onEvent(event) {\n        return this.dispatchInputEvent(event);\n    }\n    // Returns true if the event was handled.\n    dispatchInputEvent(event) {\n        // Feed the event through the input pipeline\n        return this.inputPipeline.onEvent(event);\n    }\n    /**\n     * Adds a new `InputMapper` to this' input pipeline.\n     *\n     * A `mapper` is really a relation that maps each event to no, one,\n     * or many other events.\n     *\n     * @see {@link InputMapper}.\n     */\n    addInputMapper(mapper) {\n        this.inputPipeline.addToTail(mapper);\n    }\n    getMatchingTools(type) {\n        return this.tools.filter((tool) => tool instanceof type);\n    }\n    // @internal\n    onEditorDestroyed() {\n        for (const tool of this.tools) {\n            tool.onDestroy();\n        }\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _UndoRedoHistory_undoStack, _UndoRedoHistory_redoStack;\nimport  { EditorEventType, UndoEventType }  from './types.mjs';\nclass UndoRedoHistory {\n    // @internal\n    constructor(editor, announceRedoCallback, announceUndoCallback) {\n        this.editor = editor;\n        this.announceRedoCallback = announceRedoCallback;\n        this.announceUndoCallback = announceUndoCallback;\n        _UndoRedoHistory_undoStack.set(this, void 0);\n        _UndoRedoHistory_redoStack.set(this, void 0);\n        this.maxUndoRedoStackSize = 700;\n        __classPrivateFieldSet(this, _UndoRedoHistory_undoStack, [], \"f\");\n        __classPrivateFieldSet(this, _UndoRedoHistory_redoStack, [], \"f\");\n    }\n    fireUpdateEvent(stackUpdateType, triggeringCommand) {\n        this.editor.notifier.dispatch(EditorEventType.UndoRedoStackUpdated, {\n            kind: EditorEventType.UndoRedoStackUpdated,\n            undoStackSize: __classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").length,\n            redoStackSize: __classPrivateFieldGet(this, _UndoRedoHistory_redoStack, \"f\").length,\n            command: triggeringCommand,\n            stackUpdateType,\n        });\n    }\n    // Adds the given command to this and applies it to the editor.\n    push(command, apply = true) {\n        if (apply) {\n            command.apply(this.editor);\n        }\n        __classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").push(command);\n        for (const elem of __classPrivateFieldGet(this, _UndoRedoHistory_redoStack, \"f\")) {\n            elem.onDrop(this.editor);\n        }\n        __classPrivateFieldSet(this, _UndoRedoHistory_redoStack, [], \"f\");\n        if (__classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").length > this.maxUndoRedoStackSize) {\n            const removeAtOnceCount = Math.ceil(this.maxUndoRedoStackSize / 100);\n            const removedElements = __classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").splice(0, removeAtOnceCount);\n            removedElements.forEach((elem) => elem.onDrop(this.editor));\n        }\n        this.fireUpdateEvent(UndoEventType.CommandDone, command);\n        this.editor.notifier.dispatch(EditorEventType.CommandDone, {\n            kind: EditorEventType.CommandDone,\n            command,\n        });\n    }\n    // Remove the last command from this' undo stack and apply it.\n    undo() {\n        const command = __classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").pop();\n        if (command) {\n            __classPrivateFieldGet(this, _UndoRedoHistory_redoStack, \"f\").push(command);\n            const result = command.unapply(this.editor);\n            this.announceUndoCallback(command);\n            this.fireUpdateEvent(UndoEventType.CommandUndone, command);\n            this.editor.notifier.dispatch(EditorEventType.CommandUndone, {\n                kind: EditorEventType.CommandUndone,\n                command,\n            });\n            return result;\n        }\n    }\n    redo() {\n        const command = __classPrivateFieldGet(this, _UndoRedoHistory_redoStack, \"f\").pop();\n        if (command) {\n            __classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").push(command);\n            const result = command.apply(this.editor);\n            this.announceRedoCallback(command);\n            this.fireUpdateEvent(UndoEventType.CommandRedone, command);\n            this.editor.notifier.dispatch(EditorEventType.CommandDone, {\n                kind: EditorEventType.CommandDone,\n                command,\n            });\n            return result;\n        }\n    }\n    get undoStackSize() {\n        return __classPrivateFieldGet(this, _UndoRedoHistory_undoStack, \"f\").length;\n    }\n    get redoStackSize() {\n        return __classPrivateFieldGet(this, _UndoRedoHistory_redoStack, \"f\").length;\n    }\n}\n_UndoRedoHistory_undoStack = new WeakMap(), _UndoRedoHistory_redoStack = new WeakMap();\nexport default UndoRedoHistory;\n", "import { Vec2 } from '@js-draw/math';\nimport  AbstractRenderer  from './AbstractRenderer.mjs';\n// Renderer that outputs almost nothing. Useful for automated tests.\nexport default class DummyRenderer extends AbstractRenderer {\n    constructor(viewport) {\n        super(viewport);\n        // Variables that track the state of what's been rendered\n        this.clearedCount = 0;\n        this.renderedPathCount = 0;\n        this.lastFillStyle = null;\n        this.lastPoint = null;\n        this.objectNestingLevel = 0;\n        this.lastText = null;\n        this.lastImage = null;\n        // List of points drawn since the last clear.\n        this.pointBuffer = [];\n    }\n    displaySize() {\n        // Do we have a stored viewport size?\n        const viewportSize = this.getViewport().getScreenRectSize();\n        // Don't use a 0x0 viewport — DummyRenderer is often used\n        // for tests that run without a display, so pretend we have a\n        // reasonable-sized display.\n        if (viewportSize.x === 0 || viewportSize.y === 0) {\n            return Vec2.of(640, 480);\n        }\n        return viewportSize;\n    }\n    clear() {\n        this.clearedCount++;\n        this.renderedPathCount = 0;\n        this.pointBuffer = [];\n        this.lastText = null;\n        this.lastImage = null;\n        // Ensure all objects finished rendering\n        if (this.objectNestingLevel > 0) {\n            throw new Error(`Within an object while clearing! Nesting level: ${this.objectNestingLevel}`);\n        }\n    }\n    beginPath(startPoint) {\n        this.lastPoint = startPoint;\n        this.pointBuffer.push(startPoint);\n    }\n    endPath(style) {\n        this.renderedPathCount++;\n        this.lastFillStyle = style;\n    }\n    lineTo(point) {\n        point = this.canvasToScreen(point);\n        this.lastPoint = point;\n        this.pointBuffer.push(point);\n    }\n    moveTo(point) {\n        point = this.canvasToScreen(point);\n        this.lastPoint = point;\n        this.pointBuffer.push(point);\n    }\n    traceCubicBezierCurve(p1, p2, p3) {\n        p1 = this.canvasToScreen(p1);\n        p2 = this.canvasToScreen(p2);\n        p3 = this.canvasToScreen(p3);\n        this.lastPoint = p3;\n        this.pointBuffer.push(p1, p2, p3);\n    }\n    traceQuadraticBezierCurve(controlPoint, endPoint) {\n        controlPoint = this.canvasToScreen(controlPoint);\n        endPoint = this.canvasToScreen(endPoint);\n        this.lastPoint = endPoint;\n        this.pointBuffer.push(controlPoint, endPoint);\n    }\n    drawPoints(..._points) {\n        // drawPoints is intended for debugging.\n        // As such, it is unlikely to be the target of automated tests.\n    }\n    drawText(text, _transform, _style) {\n        this.lastText = text;\n    }\n    drawImage(image) {\n        this.lastImage = image;\n    }\n    startObject(boundingBox, _clip) {\n        super.startObject(boundingBox);\n        this.objectNestingLevel += 1;\n    }\n    endObject() {\n        super.endObject();\n        this.objectNestingLevel -= 1;\n    }\n    isTooSmallToRender(_rect) {\n        return false;\n    }\n    canRenderFromWithoutDataLoss(other) {\n        return other instanceof DummyRenderer;\n    }\n    renderFromOtherOfSameType(transform, other) {\n        if (!(other instanceof DummyRenderer)) {\n            throw new Error(`${other} cannot be rendered onto ${this}`);\n        }\n        this.renderedPathCount += other.renderedPathCount;\n        this.lastFillStyle = other.lastFillStyle;\n        this.lastPoint = other.lastPoint;\n        this.pointBuffer.push(...other.pointBuffer.map((point) => {\n            return transform.transformVec2(point);\n        }));\n    }\n    toString() {\n        return '[DummyRenderer]';\n    }\n}\n", "// A cache record with sub-nodes.\nimport  { computeFirstIndexToRender, sortLeavesByZIndex }  from '../../image/EditorImage.mjs';\nimport { Rect2, Color4 } from '@js-draw/math';\n// 3x3 divisions for each node.\nconst cacheDivisionSize = 3;\nexport default class RenderingCacheNode {\n    constructor(region, cacheState) {\n        this.region = region;\n        this.cacheState = cacheState;\n        // invariant: instantiatedChildren.length === 9\n        this.instantiatedChildren = [];\n        this.parent = null;\n        this.cachedRenderer = null;\n        // invariant: sortedInAscendingOrder(renderedIds)\n        this.renderedIds = [];\n        this.renderedMaxZIndex = null;\n    }\n    // Creates a previous layer of the cache tree and adds this as a child near the\n    // center of the previous layer's children.\n    // Returns this' parent if it already exists.\n    generateParent() {\n        if (this.parent) {\n            return this.parent;\n        }\n        const parentRegion = Rect2.fromCorners(this.region.topLeft.minus(this.region.size), this.region.bottomRight.plus(this.region.size));\n        const parent = new RenderingCacheNode(parentRegion, this.cacheState);\n        parent.generateChildren();\n        // Ensure the new node is matches the middle child's region.\n        const checkTolerance = this.region.maxDimension / 100;\n        const middleChildIdx = (parent.instantiatedChildren.length - 1) / 2;\n        if (!parent.instantiatedChildren[middleChildIdx].region.eq(this.region, checkTolerance)) {\n            console.error(parent.instantiatedChildren[middleChildIdx].region, '≠', this.region);\n            throw new Error(\"Logic error: [this] is not contained within its parent's center child\");\n        }\n        // Replace the middle child\n        parent.instantiatedChildren[middleChildIdx] = this;\n        this.parent = parent;\n        return parent;\n    }\n    // Generates children, if missing.\n    generateChildren() {\n        if (this.instantiatedChildren.length === 0) {\n            if (this.region.size.x / cacheDivisionSize === 0 ||\n                this.region.size.y / cacheDivisionSize === 0) {\n                console.warn('Cache element has zero size! Not generating children.');\n                return;\n            }\n            const childRects = this.region.divideIntoGrid(cacheDivisionSize, cacheDivisionSize);\n            console.assert(childRects.length === cacheDivisionSize * cacheDivisionSize, 'Warning: divideIntoGrid created the wrong number of subrectangles!');\n            for (const rect of childRects) {\n                const child = new RenderingCacheNode(rect, this.cacheState);\n                child.parent = this;\n                this.instantiatedChildren.push(child);\n            }\n        }\n        this.checkRep();\n    }\n    // Returns CacheNodes directly contained within this.\n    getChildren() {\n        this.checkRep();\n        this.generateChildren();\n        return this.instantiatedChildren;\n    }\n    smallestChildContaining(rect) {\n        const largerThanChildren = rect.maxDimension > this.region.maxDimension / cacheDivisionSize;\n        if (!this.region.containsRect(rect) || largerThanChildren) {\n            return null;\n        }\n        for (const child of this.getChildren()) {\n            if (child.region.containsRect(rect)) {\n                return child.smallestChildContaining(rect) ?? child;\n            }\n        }\n        return null;\n    }\n    // => [true] iff [this] can be rendered without too much scaling\n    renderingWouldBeHighEnoughResolution(viewport) {\n        // Determine how 1px in this corresponds to 1px on the canvas.\n        //  this.region.w is in canvas units. Thus,\n        const sizeOfThisPixelOnCanvas = this.region.w / this.cacheState.props.blockResolution.x;\n        const sizeOfThisPixelOnScreen = viewport.getScaleFactor() * sizeOfThisPixelOnCanvas;\n        if (sizeOfThisPixelOnScreen > this.cacheState.props.maxScale) {\n            return false;\n        }\n        return true;\n    }\n    // => [true] if all children of this can be rendered from their caches.\n    allChildrenCanRender(viewport, leavesSortedById) {\n        if (this.instantiatedChildren.length === 0) {\n            return false;\n        }\n        for (const child of this.instantiatedChildren) {\n            if (!child.region.intersects(viewport.visibleRect)) {\n                continue;\n            }\n            if (!child.renderingIsUpToDate(this.idsOfIntersecting(leavesSortedById))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    computeSortedByLeafIds(leaves) {\n        const ids = leaves.slice();\n        ids.sort((a, b) => a.getId() - b.getId());\n        return ids;\n    }\n    // Returns a list of the ids of the nodes intersecting this\n    idsOfIntersecting(nodes) {\n        const result = [];\n        for (const node of nodes) {\n            if (node.getBBox().intersects(this.region)) {\n                result.push(node.getId());\n            }\n        }\n        return result;\n    }\n    // Returns true iff all elems of this.renderedIds are in sortedIds.\n    // sortedIds should be sorted by z-index (or some other order, so long as they are\n    // sorted by the same thing as this.renderedIds.)\n    allRenderedIdsIn(sortedIds) {\n        if (this.renderedIds.length > sortedIds.length) {\n            return false;\n        }\n        for (let i = 0; i < this.renderedIds.length; i++) {\n            if (sortedIds[i] !== this.renderedIds[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    renderingIsUpToDate(sortedIds) {\n        if (this.cachedRenderer === null || sortedIds.length !== this.renderedIds.length) {\n            return false;\n        }\n        return this.allRenderedIdsIn(sortedIds);\n    }\n    // Render all [items] within [viewport]\n    renderItems(screenRenderer, items, viewport) {\n        if (!viewport.visibleRect.intersects(this.region) || items.length === 0) {\n            return;\n        }\n        // Divide [items] until nodes are smaller than this, or are leaves.\n        const divideUntilSmallerThanThis = (itemsToDivide) => {\n            const newItems = [];\n            for (const item of itemsToDivide) {\n                const bbox = item.getBBox();\n                if (!bbox.intersects(this.region)) {\n                    continue;\n                }\n                if (bbox.maxDimension >= this.region.maxDimension) {\n                    newItems.push(...item.getChildrenOrSelfIntersectingRegion(this.region));\n                }\n                else {\n                    newItems.push(item);\n                }\n            }\n            return newItems;\n        };\n        items = divideUntilSmallerThanThis(items);\n        // Can we cache at all?\n        if (!this.cacheState.props.isOfCorrectType(screenRenderer)) {\n            for (const item of items) {\n                item.render(screenRenderer, viewport.visibleRect);\n            }\n            return;\n        }\n        if (this.cacheState.debugMode) {\n            screenRenderer.drawRect(this.region, viewport.getSizeOfPixelOnCanvas(), {\n                fill: Color4.yellow,\n            });\n        }\n        // Could we render direclty from [this] or do we need to recurse?\n        const couldRender = this.renderingWouldBeHighEnoughResolution(viewport);\n        if (!couldRender) {\n            for (const child of this.getChildren()) {\n                child.renderItems(screenRenderer, items.filter((item) => {\n                    return item.getBBox().intersects(child.region);\n                }), viewport);\n            }\n        }\n        else {\n            // Determine whether we already have rendered the items\n            const tooSmallToRender = (rect) => rect.w / this.region.w < 1 / this.cacheState.props.blockResolution.x;\n            const leaves = [];\n            for (const item of items) {\n                leaves.push(...item.getLeavesIntersectingRegion(this.region, tooSmallToRender));\n            }\n            sortLeavesByZIndex(leaves);\n            const leavesByIds = this.computeSortedByLeafIds(leaves);\n            // No intersecting leaves? No need to render\n            if (leavesByIds.length === 0) {\n                return;\n            }\n            const leafIds = leavesByIds.map((leaf) => leaf.getId());\n            let thisRenderer;\n            if (!this.renderingIsUpToDate(leafIds)) {\n                if (this.allChildrenCanRender(viewport, leavesByIds)) {\n                    for (const child of this.getChildren()) {\n                        child.renderItems(screenRenderer, items, viewport);\n                    }\n                    return;\n                }\n                let leafApproxRenderTime = 0;\n                for (const leaf of leavesByIds) {\n                    if (!tooSmallToRender(leaf.getBBox())) {\n                        leafApproxRenderTime += leaf.getContent().getProportionalRenderingTime();\n                    }\n                }\n                // Is it worth it to render the items?\n                if (leafApproxRenderTime > this.cacheState.props.minProportionalRenderTimePerCache) {\n                    let fullRerenderNeeded = true;\n                    if (!this.cachedRenderer) {\n                        this.cachedRenderer = this.cacheState.recordManager.allocCanvas(this.region, () => this.onRegionDealloc());\n                    }\n                    else if (leavesByIds.length > this.renderedIds.length &&\n                        this.allRenderedIdsIn(leafIds) &&\n                        this.renderedMaxZIndex !== null) {\n                        // We often don't need to do a full re-render even if something's changed.\n                        // Check whether we can just draw on top of the existing cache.\n                        const newLeaves = [];\n                        let minNewZIndex = null;\n                        for (let i = 0; i < leavesByIds.length; i++) {\n                            const leaf = leavesByIds[i];\n                            const content = leaf.getContent();\n                            const zIndex = content.getZIndex();\n                            if (i >= this.renderedIds.length || leaf.getId() !== this.renderedIds[i]) {\n                                newLeaves.push(leaf);\n                                if (minNewZIndex === null || zIndex < minNewZIndex) {\n                                    minNewZIndex = zIndex;\n                                }\n                            }\n                        }\n                        if (minNewZIndex !== null && minNewZIndex > this.renderedMaxZIndex) {\n                            fullRerenderNeeded = false;\n                            thisRenderer = this.cachedRenderer.startRender();\n                            // Looping is faster than re-sorting.\n                            for (let i = 0; i < leaves.length; i++) {\n                                const leaf = leaves[i];\n                                const zIndex = leaf.getContent().getZIndex();\n                                if (zIndex > this.renderedMaxZIndex) {\n                                    leaf.render(thisRenderer, this.region);\n                                    this.renderedMaxZIndex = zIndex;\n                                }\n                            }\n                            if (this.cacheState.debugMode) {\n                                // Clay for adding new elements\n                                screenRenderer.drawRect(this.region, 2 * viewport.getSizeOfPixelOnCanvas(), {\n                                    fill: Color4.clay,\n                                });\n                            }\n                        }\n                    }\n                    else if (this.cacheState.debugMode) {\n                        console.log('Decided on a full re-render. Reason: At least one of the following is false:', '\\n leafIds.length > this.renderedIds.length: ', leafIds.length > this.renderedIds.length, '\\n this.allRenderedIdsIn(leafIds): ', this.allRenderedIdsIn(leafIds), '\\n this.renderedMaxZIndex !== null: ', this.renderedMaxZIndex !== null, '\\n\\nthis.rerenderedIds: ', this.renderedIds, ', leafIds: ', leafIds);\n                    }\n                    if (fullRerenderNeeded) {\n                        thisRenderer = this.cachedRenderer.startRender();\n                        thisRenderer.clear();\n                        this.renderedMaxZIndex = null;\n                        const startIndex = computeFirstIndexToRender(leaves, this.region);\n                        for (let i = startIndex; i < leaves.length; i++) {\n                            const leaf = leaves[i];\n                            const content = leaf.getContent();\n                            this.renderedMaxZIndex ??= content.getZIndex();\n                            this.renderedMaxZIndex = Math.max(this.renderedMaxZIndex, content.getZIndex());\n                            leaf.render(thisRenderer, this.region);\n                        }\n                        if (this.cacheState.debugMode) {\n                            // Red for full rerender\n                            screenRenderer.drawRect(this.region, 3 * viewport.getSizeOfPixelOnCanvas(), {\n                                fill: Color4.red,\n                            });\n                        }\n                    }\n                    this.renderedIds = leafIds;\n                }\n                else {\n                    this.cachedRenderer?.dealloc();\n                    // Slightly increase the clip region to prevent seams.\n                    // Divide by two because grownBy expands the rectangle on all sides.\n                    const pixelSize = viewport.getSizeOfPixelOnCanvas();\n                    const expandedRegion = new Rect2(this.region.x, this.region.y, this.region.w + pixelSize, this.region.h + pixelSize);\n                    const clip = true;\n                    screenRenderer.startObject(expandedRegion, clip);\n                    for (const leaf of leaves) {\n                        leaf.render(screenRenderer, this.region.intersection(viewport.visibleRect));\n                    }\n                    screenRenderer.endObject();\n                    if (this.cacheState.debugMode) {\n                        // Green for no cache needed render\n                        screenRenderer.drawRect(this.region, 2 * viewport.getSizeOfPixelOnCanvas(), {\n                            fill: Color4.green,\n                        });\n                    }\n                }\n            }\n            else {\n                thisRenderer = this.cachedRenderer.startRender();\n            }\n            if (thisRenderer) {\n                const transformMat = this.cachedRenderer.getTransform(this.region).inverse();\n                screenRenderer.renderFromOtherOfSameType(transformMat, thisRenderer);\n            }\n            // Can we clean up this' children? (Are they unused?)\n            if (this.instantiatedChildren.every((child) => child.isEmpty())) {\n                this.instantiatedChildren = [];\n            }\n        }\n        this.checkRep();\n    }\n    // Returns true iff this/its children have no cached state.\n    isEmpty() {\n        if (this.cachedRenderer !== null) {\n            return false;\n        }\n        return this.instantiatedChildren.every((child) => child.isEmpty());\n    }\n    onRegionDealloc() {\n        this.cachedRenderer = null;\n        if (this.isEmpty()) {\n            this.instantiatedChildren = [];\n        }\n    }\n    checkRep() {\n        if (this.instantiatedChildren.length !== cacheDivisionSize * cacheDivisionSize &&\n            this.instantiatedChildren.length !== 0) {\n            throw new Error(`Repcheck: Wrong number of children. Got ${this.instantiatedChildren.length}`);\n        }\n        if (this.renderedIds[1] !== undefined && this.renderedIds[0] >= this.renderedIds[1]) {\n            console.error(this.renderedIds);\n            throw new Error('Repcheck: First two ids are not in ascending order!');\n        }\n        for (const child of this.instantiatedChildren) {\n            if (child.parent !== this) {\n                throw new Error('Children should be linked to their parents!');\n            }\n        }\n        if (this.cachedRenderer && !this.cachedRenderer.isAllocd()) {\n            throw new Error(\"this' cachedRenderer != null, but is dealloc'd\");\n        }\n    }\n}\n", "import { Mat33 } from '@js-draw/math';\n// Represents a cached renderer/canvas\n// This is not a [CacheNode] -- it handles cached renderers and does not have sub-renderers.\nexport default class CacheRecord {\n    constructor(onBeforeDeallocCallback, cacheState) {\n        this.onBeforeDeallocCallback = onBeforeDeallocCallback;\n        this.cacheState = cacheState;\n        this.allocd = false;\n        // For debugging\n        this.allocCount = 0;\n        this.renderer = cacheState.props.createRenderer();\n        this.lastUsedCycle = -1;\n        this.allocd = true;\n    }\n    startRender() {\n        this.lastUsedCycle = this.cacheState.currentRenderingCycle;\n        if (!this.allocd) {\n            throw new Error(\"Only alloc'd canvases can be rendered to\");\n        }\n        return this.renderer;\n    }\n    dealloc() {\n        this.onBeforeDeallocCallback?.();\n        this.allocd = false;\n        this.onBeforeDeallocCallback = null;\n        this.lastUsedCycle = 0;\n    }\n    isAllocd() {\n        return this.allocd;\n    }\n    realloc(newDeallocCallback) {\n        if (this.allocd) {\n            this.dealloc();\n        }\n        this.allocd = true;\n        this.onBeforeDeallocCallback = newDeallocCallback;\n        this.lastUsedCycle = this.cacheState.currentRenderingCycle;\n        this.allocCount++;\n    }\n    getLastUsedCycle() {\n        return this.lastUsedCycle;\n    }\n    // Returns the transformation that maps [drawTo] to this' renderable region\n    // (i.e. a [cacheProps.blockResolution]-sized rectangle with top left at (0, 0))\n    getTransform(drawTo) {\n        const transform = Mat33.scaling2D(this.cacheState.props.blockResolution.x / drawTo.size.x).rightMul(Mat33.translation(drawTo.topLeft.times(-1)));\n        return transform;\n    }\n    setRenderingRegion(drawTo) {\n        const transform = this.getTransform(drawTo);\n        this.renderer.setTransform(transform);\n        // The visible region may be slightly larger than where we're actually drawing\n        // to (because of rounding).\n        this.renderer.overrideVisibleRect(drawTo.grownBy(1 / transform.getScaleFactor()));\n    }\n}\n", "import  CacheRecord  from './CacheRecord.mjs';\nexport class CacheRecordManager {\n    constructor(cacheProps) {\n        // Fixed-size array: Cache blocks are assigned indicies into [cachedCanvases].\n        this.cacheRecords = [];\n        this.maxCanvases = Math.ceil(\n        // Assuming four components per pixel:\n        cacheProps.cacheSize / 4 / cacheProps.blockResolution.x / cacheProps.blockResolution.y);\n    }\n    setSharedState(state) {\n        this.cacheState = state;\n    }\n    allocCanvas(drawTo, onDealloc) {\n        if (this.cacheRecords.length < this.maxCanvases) {\n            const record = new CacheRecord(onDealloc, this.cacheState);\n            record.setRenderingRegion(drawTo);\n            this.cacheRecords.push(record);\n            if (this.cacheState.debugMode) {\n                console.log('[Cache] Cache spaces used: ', this.cacheRecords.length, ' of ', this.maxCanvases);\n            }\n            return record;\n        }\n        else {\n            const lru = this.getLeastRecentlyUsedRecord();\n            if (this.cacheState.debugMode) {\n                console.log('[Cache] Re-alloc. Times allocated: ', lru.allocCount, '\\nLast used cycle: ', lru.getLastUsedCycle(), '\\nCurrent cycle: ', this.cacheState.currentRenderingCycle);\n            }\n            lru.realloc(onDealloc);\n            lru.setRenderingRegion(drawTo);\n            if (this.cacheState.debugMode) {\n                console.log(\"[Cache] Now re-alloc'd. Last used cycle: \", lru.getLastUsedCycle());\n                console.assert(lru['cacheState'] === this.cacheState, '[Cache] Unequal cache states! cacheState should be a shared object!');\n            }\n            return lru;\n        }\n    }\n    // Returns null if there are no cache records. Returns an unalloc'd record if one exists.\n    getLeastRecentlyUsedRecord() {\n        this.cacheRecords.sort((a, b) => a.getLastUsedCycle() - b.getLastUsedCycle());\n        return this.cacheRecords[0];\n    }\n    // Returns information to (hopefully) help debug performance issues\n    getDebugInfo() {\n        let numberAllocd = 0;\n        let averageReassignedCount = 0;\n        for (const cacheRecord of this.cacheRecords) {\n            averageReassignedCount += cacheRecord.allocCount;\n            if (cacheRecord.isAllocd()) {\n                numberAllocd++;\n            }\n        }\n        averageReassignedCount /= Math.max(this.cacheRecords.length, 1);\n        const debugInfo = [\n            `${this.cacheRecords.length} cache records (max ${this.maxCanvases})`,\n            `${numberAllocd} assigned to screen regions`,\n            `Average number of times reassigned: ${Math.round(averageReassignedCount * 100) / 100}`,\n        ];\n        return debugInfo.join('\\n');\n    }\n}\n", "import { Rect2 } from '@js-draw/math';\nimport  RenderingCacheNode  from './RenderingCacheNode.mjs';\nimport  { CacheRecordManager }  from './CacheRecordManager.mjs';\nexport default class RenderingCache {\n    constructor(cacheProps) {\n        this.recordManager = new CacheRecordManager(cacheProps);\n        this.sharedState = {\n            props: cacheProps,\n            currentRenderingCycle: 0,\n            recordManager: this.recordManager,\n            debugMode: false,\n        };\n        this.recordManager.setSharedState(this.sharedState);\n    }\n    render(screenRenderer, image, viewport) {\n        const visibleRect = viewport.visibleRect;\n        this.sharedState.currentRenderingCycle++;\n        // If we can't use the cache,\n        if (!this.sharedState.props.isOfCorrectType(screenRenderer)) {\n            image.render(screenRenderer, visibleRect);\n            return;\n        }\n        if (!this.rootNode) {\n            // Adjust the node so that it has the correct aspect ratio\n            const res = this.sharedState.props.blockResolution;\n            const topLeft = visibleRect.topLeft;\n            this.rootNode = new RenderingCacheNode(new Rect2(topLeft.x, topLeft.y, res.x, res.y), this.sharedState);\n        }\n        while (!this.rootNode.region.containsRect(visibleRect)) {\n            this.rootNode = this.rootNode.generateParent();\n        }\n        this.rootNode = this.rootNode.smallestChildContaining(visibleRect) ?? this.rootNode;\n        const visibleLeaves = image.getLeavesIntersectingRegion(viewport.visibleRect, (rect) => screenRenderer.isTooSmallToRender(rect));\n        let approxVisibleRenderTime = 0;\n        for (const leaf of visibleLeaves) {\n            approxVisibleRenderTime += leaf.getContent().getProportionalRenderingTime();\n        }\n        if (approxVisibleRenderTime > this.sharedState.props.minProportionalRenderTimeToUseCache) {\n            this.rootNode.renderItems(screenRenderer, [image], viewport);\n        }\n        else {\n            image.render(screenRenderer, visibleRect);\n        }\n    }\n    getDebugInfo() {\n        return this.recordManager.getDebugInfo();\n    }\n    setIsDebugMode(debugMode) {\n        this.sharedState.debugMode = debugMode;\n    }\n}\n", "import { Vec2 } from '@js-draw/math';\nimport  AbstractRenderer  from './AbstractRenderer.mjs';\n// Outputs a description of what was rendered.\nexport default class TextOnlyRenderer extends AbstractRenderer {\n    constructor(viewport, localizationTable) {\n        super(viewport);\n        this.localizationTable = localizationTable;\n        this.descriptionBuilder = [];\n        this.pathCount = 0;\n        this.textNodeCount = 0;\n        this.imageNodeCount = 0;\n    }\n    displaySize() {\n        // We don't have a graphical display, export a reasonable size.\n        return Vec2.of(500, 500);\n    }\n    clear() {\n        this.descriptionBuilder = [];\n        this.pathCount = 0;\n        this.textNodeCount = 0;\n        this.imageNodeCount = 0;\n    }\n    getDescription() {\n        return [\n            this.localizationTable.pathNodeCount(this.pathCount),\n            ...(this.textNodeCount > 0 ? [this.localizationTable.textNodeCount(this.textNodeCount)] : []),\n            ...(this.imageNodeCount > 0\n                ? [this.localizationTable.imageNodeCount(this.imageNodeCount)]\n                : []),\n            ...this.descriptionBuilder,\n        ].join('\\n');\n    }\n    beginPath(_startPoint) { }\n    endPath(_style) {\n        this.pathCount++;\n    }\n    lineTo(_point) { }\n    moveTo(_point) { }\n    traceCubicBezierCurve(_p1, _p2, _p3) { }\n    traceQuadraticBezierCurve(_controlPoint, _endPoint) { }\n    drawText(text, _transform, _style) {\n        this.descriptionBuilder.push(this.localizationTable.textNode(text));\n        this.textNodeCount++;\n    }\n    drawImage(image) {\n        const label = image.label\n            ? this.localizationTable.imageNode(image.label)\n            : this.localizationTable.unlabeledImageNode;\n        this.descriptionBuilder.push(label);\n        this.imageNodeCount++;\n    }\n    isTooSmallToRender(rect) {\n        return rect.maxDimension < 15 / this.getSizeOfCanvasPixelOnScreen();\n    }\n    drawPoints(..._points) { }\n}\n", "import  CanvasRenderer  from './renderers/CanvasRenderer.mjs';\nimport  { EditorEventType }  from '../types.mjs';\nimport  DummyRenderer  from './renderers/DummyRenderer.mjs';\nimport { Vec2, Color4 } from '@js-draw/math';\nimport  RenderingCache  from './caching/RenderingCache.mjs';\nimport  TextOnlyRenderer  from './renderers/TextOnlyRenderer.mjs';\nexport var RenderingMode;\n(function (RenderingMode) {\n    RenderingMode[RenderingMode[\"DummyRenderer\"] = 0] = \"DummyRenderer\";\n    RenderingMode[RenderingMode[\"CanvasRenderer\"] = 1] = \"CanvasRenderer\";\n    // SVGRenderer is not supported by the main display\n})(RenderingMode || (RenderingMode = {}));\n/**\n * Handles `HTMLCanvasElement`s (or other drawing surfaces if being used) used to display the editor's contents.\n *\n * @example\n * ```\n * const editor = new Editor(document.body);\n * const w = editor.display.width;\n * const h = editor.display.height;\n * const center = Vec2.of(w / 2, h / 2);\n * const colorAtCenter = editor.display.getColorAt(center);\n * ```\n */\nexport default class Display {\n    /** @internal */\n    constructor(editor, mode, parent) {\n        this.editor = editor;\n        this.parent = parent;\n        this.textRerenderOutput = null;\n        this.devicePixelRatio = window.devicePixelRatio ?? 1;\n        /**\n         * @returns the color at the given point on the dry ink renderer, or `null` if `screenPos`\n         * \tis not on the display.\n         */\n        this.getColorAt = (_screenPos) => {\n            return null;\n        };\n        if (mode === RenderingMode.CanvasRenderer) {\n            this.initializeCanvasRendering();\n        }\n        else if (mode === RenderingMode.DummyRenderer) {\n            this.dryInkRenderer = new DummyRenderer(editor.viewport);\n            this.wetInkRenderer = new DummyRenderer(editor.viewport);\n        }\n        else {\n            throw new Error(`Unknown rendering mode, ${mode}!`);\n        }\n        this.textRenderer = new TextOnlyRenderer(editor.viewport, editor.localization);\n        this.initializeTextRendering();\n        const cacheBlockResolution = Vec2.of(600, 600);\n        this.cache = new RenderingCache({\n            createRenderer: () => {\n                if (mode === RenderingMode.DummyRenderer) {\n                    return new DummyRenderer(editor.viewport);\n                }\n                else if (mode !== RenderingMode.CanvasRenderer) {\n                    throw new Error('Unspported rendering mode');\n                }\n                // Make the canvas slightly larger than each cache block to prevent\n                // seams.\n                const canvas = document.createElement('canvas');\n                canvas.width = cacheBlockResolution.x + 1;\n                canvas.height = cacheBlockResolution.y + 1;\n                const ctx = canvas.getContext('2d');\n                return new CanvasRenderer(ctx, editor.viewport);\n            },\n            isOfCorrectType: (renderer) => {\n                return this.dryInkRenderer.canRenderFromWithoutDataLoss(renderer);\n            },\n            blockResolution: cacheBlockResolution,\n            cacheSize: 600 * 600 * 4 * 90,\n            // On higher resolution displays, don't scale cache blocks as much to decrease blurriness.\n            // TODO: Decrease the minimum cache scale as well.\n            maxScale: Math.max(1, 1.3 / window.devicePixelRatio),\n            // Require about 20 strokes with 4 parts each to cache an image in one of the\n            // parts of the cache grid.\n            minProportionalRenderTimePerCache: 20 * 4,\n            // Require about 105 strokes with 4 parts each to use the cache at all.\n            minProportionalRenderTimeToUseCache: 105 * 4,\n        });\n        this.editor.notifier.on(EditorEventType.DisplayResized, (event) => {\n            if (event.kind !== EditorEventType.DisplayResized) {\n                throw new Error('Mismatched event.kinds!');\n            }\n            this.resizeSurfacesCallback?.();\n        });\n    }\n    /**\n     * @returns the visible width of the display (e.g. how much\n     * space the display's element takes up in the x direction\n     * in the DOM).\n     */\n    get width() {\n        return this.dryInkRenderer.displaySize().x;\n    }\n    /** @returns the visible height of the display. See {@link width}. */\n    get height() {\n        return this.dryInkRenderer.displaySize().y;\n    }\n    /** @internal */\n    getCache() {\n        return this.cache;\n    }\n    initializeCanvasRendering() {\n        const dryInkCanvas = document.createElement('canvas');\n        const wetInkCanvas = document.createElement('canvas');\n        const dryInkCtx = dryInkCanvas.getContext('2d');\n        const wetInkCtx = wetInkCanvas.getContext('2d');\n        this.dryInkRenderer = new CanvasRenderer(dryInkCtx, this.editor.viewport);\n        this.wetInkRenderer = new CanvasRenderer(wetInkCtx, this.editor.viewport);\n        dryInkCanvas.className = 'dryInkCanvas';\n        wetInkCanvas.className = 'wetInkCanvas';\n        if (this.parent) {\n            this.parent.appendChild(dryInkCanvas);\n            this.parent.appendChild(wetInkCanvas);\n        }\n        this.resizeSurfacesCallback = () => {\n            const expectedWidth = (canvas) => {\n                const widthInPixels = Math.ceil(canvas.clientWidth * this.devicePixelRatio);\n                // Avoid setting the canvas width to zero -- doing so can cause errors when attempting\n                // to use the canvas:\n                return widthInPixels || canvas.width;\n            };\n            const expectedHeight = (canvas) => {\n                const heightInPixels = Math.ceil(canvas.clientHeight * this.devicePixelRatio);\n                return heightInPixels || canvas.height; // Zero-size canvases can cause errors.\n            };\n            const hasSizeMismatch = (canvas) => {\n                return expectedHeight(canvas) !== canvas.height || expectedWidth(canvas) !== canvas.width;\n            };\n            // Ensure that the drawing surfaces sizes match the\n            // canvas' sizes to prevent stretching.\n            if (hasSizeMismatch(dryInkCanvas) || hasSizeMismatch(wetInkCanvas)) {\n                dryInkCanvas.width = expectedWidth(dryInkCanvas);\n                dryInkCanvas.height = expectedHeight(dryInkCanvas);\n                wetInkCanvas.width = expectedWidth(wetInkCanvas);\n                wetInkCanvas.height = expectedHeight(wetInkCanvas);\n                // Ensure correct drawing operations on high-resolution screens.\n                // See\n                // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas#scaling_for_high_resolution_displays\n                //\n                // This scaling causes the rendering contexts to automatically convert\n                // between screen coordinates and pixel coordinates.\n                wetInkCtx.resetTransform();\n                dryInkCtx.resetTransform();\n                dryInkCtx.scale(this.devicePixelRatio, this.devicePixelRatio);\n                wetInkCtx.scale(this.devicePixelRatio, this.devicePixelRatio);\n                this.editor.notifier.dispatch(EditorEventType.DisplayResized, {\n                    kind: EditorEventType.DisplayResized,\n                    newSize: Vec2.of(this.width, this.height),\n                });\n            }\n        };\n        this.resizeSurfacesCallback();\n        this.flattenCallback = () => {\n            dryInkCtx.save();\n            dryInkCtx.resetTransform();\n            dryInkCtx.drawImage(wetInkCanvas, 0, 0);\n            dryInkCtx.restore();\n        };\n        this.getColorAt = (screenPos) => {\n            // getImageData isn't affected by a transformation matrix -- we need to\n            // pre-transform screenPos to convert it from screen coordinates into pixel\n            // coordinates.\n            const adjustedScreenPos = screenPos.times(this.devicePixelRatio);\n            const pixel = dryInkCtx.getImageData(adjustedScreenPos.x, adjustedScreenPos.y, 1, 1);\n            const data = pixel?.data;\n            if (data) {\n                const color = Color4.ofRGBA(data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255);\n                return color;\n            }\n            return null;\n        };\n    }\n    initializeTextRendering() {\n        const textRendererOutputContainer = document.createElement('div');\n        textRendererOutputContainer.classList.add('textRendererOutputContainer');\n        const rerenderButton = document.createElement('button');\n        rerenderButton.classList.add('rerenderButton');\n        rerenderButton.innerText = this.editor.localization.rerenderAsText;\n        this.textRerenderOutput = document.createElement('div');\n        this.textRerenderOutput.setAttribute('aria-live', 'polite');\n        rerenderButton.onclick = () => {\n            this.rerenderAsText();\n        };\n        textRendererOutputContainer.replaceChildren(rerenderButton, this.textRerenderOutput);\n        this.editor.createHTMLOverlay(textRendererOutputContainer);\n    }\n    /**\n     * Sets the device-pixel-ratio.\n     *\n     * Intended for debugging. Users do not need to call this manually.\n     *\n     * @internal\n     */\n    setDevicePixelRatio(dpr) {\n        const minDpr = 0.001;\n        const maxDpr = 10;\n        if (isFinite(dpr) && dpr >= minDpr && dpr <= maxDpr && dpr !== this.devicePixelRatio) {\n            this.devicePixelRatio = dpr;\n            this.resizeSurfacesCallback?.();\n            return this.editor.queueRerender();\n        }\n        return undefined;\n    }\n    /** @internal */\n    getDevicePixelRatio() {\n        return this.devicePixelRatio;\n    }\n    /**\n     * Rerenders the text-based display.\n     * The text-based display is intended for screen readers and can be navigated to by pressing `tab`.\n     */\n    rerenderAsText() {\n        this.textRenderer.clear();\n        this.editor.image.render(this.textRenderer, this.editor.viewport);\n        if (this.textRerenderOutput) {\n            this.textRerenderOutput.innerText = this.textRenderer.getDescription();\n        }\n    }\n    /**\n     * Clears the main drawing surface and otherwise prepares for a rerender.\n     *\n     * @returns the dry ink renderer.\n     */\n    startRerender() {\n        this.resizeSurfacesCallback?.();\n        this.dryInkRenderer.clear();\n        return this.dryInkRenderer;\n    }\n    /**\n     * If `draftMode`, the dry ink renderer is configured to render\n     * low-quality output.\n     */\n    setDraftMode(draftMode) {\n        this.dryInkRenderer.setDraftMode(draftMode);\n    }\n    /** @internal */\n    getDryInkRenderer() {\n        return this.dryInkRenderer;\n    }\n    /**\n     * @returns The renderer used for showing action previews (e.g. an unfinished stroke).\n     * The `wetInkRenderer`'s surface is stacked above the `dryInkRenderer`'s.\n     */\n    getWetInkRenderer() {\n        return this.wetInkRenderer;\n    }\n    /** Re-renders the contents of the wetInkRenderer onto the dryInkRenderer. */\n    flatten() {\n        this.flattenCallback?.();\n    }\n}\n", "import { Rect2, Color4, PathCommandType, Vec2, LineSegment2, } from '@js-draw/math';\nimport  Stroke  from '../Stroke.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  makeShapeFitAutocorrect  from './autocorrect/makeShapeFitAutocorrect.mjs';\n/**\n * Creates a freehand line builder that creates strokes from line segments\n * rather than Bézier curves.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makePolylineBuilder = makeShapeFitAutocorrect((initialPoint, viewport) => {\n    // Fit to a value slightly smaller than the pixel size. A larger value can\n    // cause the stroke to appear jagged at some zoom levels.\n    const minFit = viewport.getSizeOfPixelOnCanvas() * 0.65;\n    return new PolylineBuilder(initialPoint, minFit, viewport);\n});\nexport default class PolylineBuilder {\n    constructor(startPoint, minFitAllowed, viewport) {\n        this.minFitAllowed = minFitAllowed;\n        this.viewport = viewport;\n        this.parts = [];\n        this.widthAverageNumSamples = 1;\n        this.lastLineSegment = null;\n        this.averageWidth = startPoint.width;\n        this.startPoint = {\n            ...startPoint,\n            pos: this.roundPoint(startPoint.pos),\n        };\n        this.lastPoint = this.startPoint.pos;\n        this.bbox = new Rect2(this.startPoint.pos.x, this.startPoint.pos.y, 0, 0);\n        this.parts = [\n            {\n                kind: PathCommandType.MoveTo,\n                point: this.startPoint.pos,\n            },\n        ];\n    }\n    getBBox() {\n        return this.bbox.grownBy(this.averageWidth);\n    }\n    getRenderingStyle() {\n        return {\n            fill: Color4.transparent,\n            stroke: {\n                color: this.startPoint.color,\n                width: this.roundDistance(this.averageWidth),\n            },\n        };\n    }\n    previewCurrentPath() {\n        const startPoint = this.startPoint.pos;\n        const commands = [...this.parts];\n        // TODO: For now, this is necesary for the path to be visible.\n        if (commands.length <= 1) {\n            commands.push({\n                kind: PathCommandType.LineTo,\n                point: startPoint.plus(Vec2.of(this.averageWidth / 4, 0)),\n            });\n        }\n        return {\n            startPoint,\n            commands,\n            style: this.getRenderingStyle(),\n        };\n    }\n    previewFullPath() {\n        return [this.previewCurrentPath()];\n    }\n    preview(renderer) {\n        const paths = this.previewFullPath();\n        if (paths) {\n            const approxBBox = this.viewport.visibleRect;\n            renderer.startObject(approxBBox);\n            for (const path of paths) {\n                renderer.drawPath(path);\n            }\n            renderer.endObject();\n        }\n    }\n    build() {\n        return new Stroke(this.previewFullPath());\n    }\n    getMinFit() {\n        let minFit = Math.min(this.minFitAllowed, this.averageWidth / 4);\n        if (minFit < 1e-10) {\n            minFit = this.minFitAllowed;\n        }\n        return minFit;\n    }\n    roundPoint(point) {\n        const minFit = this.getMinFit();\n        return Viewport.roundPoint(point, minFit);\n    }\n    roundDistance(dist) {\n        const minFit = this.getMinFit();\n        return Viewport.roundPoint(dist, minFit);\n    }\n    addPoint(newPoint) {\n        this.widthAverageNumSamples++;\n        this.averageWidth =\n            (this.averageWidth * (this.widthAverageNumSamples - 1)) / this.widthAverageNumSamples +\n                newPoint.width / this.widthAverageNumSamples;\n        const roundedPoint = this.roundPoint(newPoint.pos);\n        if (!roundedPoint.eq(this.lastPoint)) {\n            // If almost exactly in the same line as the previous\n            if (this.lastLineSegment &&\n                this.lastLineSegment.direction.dot(roundedPoint.minus(this.lastPoint).normalized()) > 0.997) {\n                this.parts.pop();\n                this.lastPoint = this.lastLineSegment.p1;\n            }\n            this.parts.push({\n                kind: PathCommandType.LineTo,\n                point: this.roundPoint(newPoint.pos),\n            });\n            this.bbox = this.bbox.grownToPoint(roundedPoint);\n            this.lastLineSegment = new LineSegment2(this.lastPoint, roundedPoint);\n            this.lastPoint = roundedPoint;\n        }\n    }\n}\n", "export var ElementNamespace;\n(function (ElementNamespace) {\n    ElementNamespace[\"Html\"] = \"html\";\n    ElementNamespace[\"Svg\"] = \"svg\";\n})(ElementNamespace || (ElementNamespace = {}));\n/**\n * Shorthand for creating an element with `document.createElement`, then assigning properties.\n *\n * Non-HTML elements (e.g. `svg` elements) should use the `elementType` parameter to select\n * the element namespace.\n */\nconst createElement = (tag, props, elementType = ElementNamespace.Html) => {\n    let elem;\n    if (elementType === ElementNamespace.Html) {\n        elem = document.createElement(tag);\n    }\n    else if (elementType === ElementNamespace.Svg) {\n        elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    }\n    else {\n        throw new Error(`Unknown element type ${elementType}`);\n    }\n    for (const [key, value] of Object.entries(props)) {\n        if (key === 'children')\n            continue;\n        if (typeof value !== 'string' && typeof value !== 'number') {\n            throw new Error(`Unsupported value type ${typeof value}`);\n        }\n        elem.setAttribute(key, value.toString());\n    }\n    if (props.children) {\n        for (const item of props.children) {\n            elem.appendChild(item);\n        }\n    }\n    return elem;\n};\nexport const createSvgElement = (tag, props) => {\n    return createElement(tag, props, ElementNamespace.Svg);\n};\nexport const createSvgElements = (tag, elements) => {\n    return elements.map((props) => createSvgElement(tag, props));\n};\nexport const createSvgPaths = (...paths) => {\n    return createSvgElements('path', paths);\n};\nexport default createElement;\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _IconProvider_instances, _IconProvider_makeXIcon;\nimport { Vec2, Color4 } from '@js-draw/math';\nimport  SVGRenderer  from '../rendering/renderers/SVGRenderer.mjs';\nimport  Viewport  from '../Viewport.mjs';\nimport  { makeFreehandLineBuilder }  from '../components/builders/FreehandLineBuilder.mjs';\nimport  { makePolylineBuilder }  from '../components/builders/PolylineBuilder.mjs';\nimport  { EraserMode }  from '../tools/Eraser.mjs';\nimport  { createSvgElement, createSvgElements, createSvgPaths }  from '../util/createElement.mjs';\nimport  { SelectionMode }  from '../tools/SelectionTool/types.mjs';\nconst svgNamespace = 'http://www.w3.org/2000/svg';\nlet checkerboardIdCounter = 0;\nconst makeCheckerboardPattern = () => {\n    const id = `checkerboard-${checkerboardIdCounter++}`;\n    const patternElement = createSvgElement('pattern', {\n        id: id,\n        viewBox: '0,0,10,10',\n        width: '20%',\n        height: '20%',\n        patternUnits: 'userSpaceOnUse',\n        children: createSvgElements('rect', [\n            { x: 0, y: 0, width: 10, height: 10, fill: 'white' },\n            { x: 0, y: 0, width: 5, height: 5, fill: 'gray' },\n            { x: 5, y: 5, width: 5, height: 5, fill: 'gray' },\n        ]),\n    });\n    const patternRef = `url(#${id})`;\n    return {\n        patternDefElement: patternElement,\n        // @deprecated use patternDefElement\n        get patternDef() {\n            return patternElement.innerHTML;\n        },\n        patternRef,\n    };\n};\nconst makeRedoIcon = (mirror) => {\n    const icon = document.createElementNS(svgNamespace, 'svg');\n    icon.innerHTML = `\n\t\t<style>\n\t\t\t.toolbar-svg-undo-redo-icon {\n\t\t\t\tstroke: var(--icon-color);\n\t\t\t\tstroke-width: 12;\n\t\t\t\tstroke-linejoin: round;\n\t\t\t\tstroke-linecap: round;\n\t\t\t\tfill: none;\n\n\t\t\t\ttransform-origin: center;\n\t\t\t}\n\t\t</style>\n\t`;\n    const path = document.createElementNS(svgNamespace, 'path');\n    path.setAttribute('d', 'M20,20 A15,15 0 0 1 70,80 L80,90 L60,70 L65,90 L87,90 L65,80');\n    path.classList.add('toolbar-svg-undo-redo-icon');\n    if (mirror) {\n        path.style.transform = 'scale(-1, 1)';\n    }\n    icon.appendChild(path);\n    icon.setAttribute('viewBox', '0 0 100 100');\n    return icon;\n};\n/**\n * Provides icons that can be used in the toolbar and other locations.\n *\n * To customize the icons used by the editor, extend this class and override methods.\n *\n * @example\n * ```ts,runnable\n * import * as jsdraw from 'js-draw';\n *\n * class CustomIconProvider extends jsdraw.IconProvider {\n *     // Use '☺' instead of the default dropdown symbol.\n *     public override makeDropdownIcon() {\n *         const icon = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n *         icon.innerHTML = `\n *             <text x='5' y='55' style='fill: var(--icon-color); font-size: 50pt;'>☺</text>\n *         `;\n *         icon.setAttribute('viewBox', '0 0 100 100');\n *         return icon;\n *     }\n * }\n *\n * const icons = new CustomIconProvider();\n * const editor = new jsdraw.Editor(document.body, {\n *     // The icon pack to use is specified through the editor's initial\n *     // configuration object:\n *     iconProvider: icons,\n * });\n *\n * // Add a toolbar that uses these icons\n * jsdraw.makeDropdownToolbar(editor).addDefaults();\n * ```\n */\nclass IconProvider {\n    constructor() {\n        _IconProvider_instances.add(this);\n    }\n    makeUndoIcon() {\n        return makeRedoIcon(true);\n    }\n    // @returns a redo icon.\n    makeRedoIcon() {\n        return makeRedoIcon(false);\n    }\n    makeDropdownIcon() {\n        const icon = this.makeIconFromPath('M5,10 L50,90 L95,10 Z');\n        icon.setAttribute('viewBox', '-10 -10 110 110');\n        return icon;\n    }\n    makeEraserIcon(eraserSize, mode) {\n        eraserSize ??= 10;\n        const scaledSize = eraserSize / 4;\n        const eraserColor = '#ff70af';\n        // Draw an eraser-like shape. Created with Inkscape\n        const icon = createSvgElement('svg', {\n            viewBox: '0 0 120 120',\n            children: [\n                createSvgElement('defs', {\n                    children: [\n                        createSvgElement('linearGradient', {\n                            id: 'dash-pattern',\n                            children: createSvgElements('stop', [\n                                { offset: '80%', 'stop-color': eraserColor },\n                                { offset: '85%', 'stop-color': 'white' },\n                                { offset: '90%', 'stop-color': eraserColor },\n                            ]),\n                        }),\n                    ],\n                }),\n                createSvgElement('path', {\n                    fill: mode === EraserMode.PartialStroke ? 'url(#dash-pattern)' : eraserColor,\n                    stroke: 'black',\n                    transform: 'rotate(41.35)',\n                    d: `\n\t\t\t\t\t\tM 52.5 27\n\t\t\t\t\t\tC 50 28.9 48.9 31.7 48.9 34.8\n\t\t\t\t\t\tL 48.9 39.8\n\t\t\t\t\t\tC 48.9 45.3 53.4 49.8 58.9 49.8\n\t\t\t\t\t\tL 103.9 49.8\n\t\t\t\t\t\tC 105.8 49.8 107.6 49.2 109.1 48.3\n\t\t\t\t\t\tL 110.2 ${scaledSize + 49.5} L 159.7 ${scaledSize + 5}\n\t\t\t\t\t\tL 157.7 ${-scaledSize + 5.2} L 112.4 ${49.5 - scaledSize}\n\t\t\t\t\t\tC 113.4 43.5 113.9 41.7 113.9 39.8\n\t\t\t\t\t\tL 113.9 34.8\n\t\t\t\t\t\tC 113.9 29.3 109.4 24.8 103.9 24.8\n\t\t\t\t\t\tL 58.9 24.8\n\t\t\t\t\t\tC 56.5 24.8 54.3 25.7 52.5 27\n\t\t\t\t\t\tz\n\t\t\t\t\t`,\n                }),\n                createSvgElement('rect', {\n                    stroke: '#cc8077',\n                    fill: 'var(--icon-color)',\n                    width: 65,\n                    height: 75,\n                    x: 48.9,\n                    y: -38.7,\n                    transform: 'rotate(41.35)',\n                }),\n            ],\n        });\n        return icon;\n    }\n    makeSelectionIcon(mode = SelectionMode.Rectangle) {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        if (mode === SelectionMode.Rectangle) {\n            icon.innerHTML = `\n\t\t\t<g>\n\t\t\t\t<rect x=\"10\" y=\"10\" width=\"70\" height=\"70\" fill=\"pink\" stroke=\"black\" stroke-dasharray=\"32 9\"/>\n\t\t\t\t<rect x=\"75\" y=\"75\" width=\"10\" height=\"10\" fill=\"white\" stroke=\"black\"/>\n\t\t\t</g>\n\t\t\t`;\n        }\n        else {\n            icon.innerHTML = `\n\t\t\t<g>\n\t\t\t\t<rect x=\"10\" y=\"10\" width=\"76\" height=\"76\" rx=\"50\" stroke-dasharray=\"32 9\" fill=\"pink\" stroke=\"black\"/>\n\t\t\t\t<rect x=\"71\" y=\"71\" width=\"10\" height=\"10\" fill=\"white\" stroke=\"black\"/>\n\t\t\t</g>\n\t\t\t`;\n        }\n        icon.setAttribute('viewBox', '0 0 100 100');\n        return icon;\n    }\n    makeRotateIcon() {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        icon.innerHTML = `\n\t\t\t<defs>\n\t\t\t\t<marker\n\t\t\t\t\tid=\"arrow-marker\"\n\t\t\t\t\tviewBox=\"0 0 10 10\"\n\t\t\t\t\trefX=\"3\" refY=\"5\"\n\t\t\t\t\tmarkerWidth=\"3\" markerHeight=\"3\"\n\t\t\t\t\torient=\"auto-start-reverse\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M0,0 L8,5 L0,10z\"\n\t\t\t\t\t\tfill=\"var(--icon-color)\"\n\t\t\t\t\t/>\n\t\t\t\t</marker>\n\t\t\t</defs>\n\n\t\t\t<path\n\t\t\t\tmarker-start=\"url(#arrow-marker)\"\n\t\t\t\td=\"\n\t\t\t\t\tM20,20\n\t\t\t\t\tA30,30 0 1 1 80 80\n\t\t\t\t\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke=\"var(--icon-color)\"\n\t\t\t\tstroke-width=\"12\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"\n\t\t\t\t\tM80,80\n\t\t\t\t\tA30,30 0 1 1 20 20\n\t\t\t\t\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke=\"var(--icon-color)\"\n\t\t\t\tstroke-width=\"12\"\n\t\t\t\tstroke-dasharray=\"30 10 20 10 20 10 10\"\n\t\t\t\tstyle=\"stroke-linecap: butt;\"\n\t\t\t/>\n\t\t`;\n        icon.setAttribute('viewBox', '-5 -5 110 110');\n        return icon;\n    }\n    makeHandToolIcon() {\n        const fill = 'none';\n        const strokeColor = 'var(--icon-color)';\n        const strokeWidth = '3';\n        // Draw a cursor-like shape\n        return this.makeIconFromPath(`\n\t\t\tm 10,60\n\t\t\t\t5,30\n\t\t\tH 90\n\t\t\tV 30\n\t\t\tC 90,20 75,20 75,30\n\t\t\tV 60\n\t\t\t\t20\n\t\t\tC 75,10 60,10 60,20\n\t\t\tV 60\n\t\t\t\t15\n\t\t\tC 60,5 45,5 45,15\n\t\t\tV 60\n\t\t\t\t25\n\t\t\tC 45,15 30,15 30,25\n\t\t\tV 60\n\t\t\t\t75\n\t\t\tL 25,60\n\t\t\tC 20,45 10,50 10,60\n\t\t\tZ\n\t\t`, fill, strokeColor, strokeWidth);\n    }\n    makeTouchPanningIcon() {\n        const fill = 'none';\n        const strokeColor = 'var(--icon-color)';\n        const strokeWidth = '3';\n        return this.makeIconFromPath(`\n\t\t\tM 5,5.5\n\t\t\tV 17.2\n\t\t\tL 16.25,5.46\n\t\t\tZ\n\t\n\t\t\tm 33.75,0\n\t\t\tL 50,17\n\t\t\tV 5.5\n\t\t\tZ\n\t\n\t\t\tM 5,40.7\n\t\t\tv 11.7\n\t\t\th 11.25\n\t\t\tz\n\t\n\t\t\tM 26,19\n\t\t\tC 19.8,19.4 17.65,30.4 21.9,34.8\n\t\t\tL 50,70\n\t\t\tH 27.5\n\t\t\tc -11.25,0 -11.25,17.6 0,17.6\n\t\t\tH 61.25\n\t\t\tC 94.9,87.8 95,87.6 95,40.7 78.125,23 67,29 55.6,46.5\n\t\t\tL 33.1,23\n\t\t\tC 30.3125,20.128192 27.9,19 25.830078,19.119756\n\t\t\tZ\n\t\t`, fill, strokeColor, strokeWidth);\n    }\n    /** Unused by js-draw. @deprecated */\n    makeAllDevicePanningIcon() {\n        const fill = 'none';\n        const strokeColor = 'var(--icon-color)';\n        const strokeWidth = '3';\n        return this.makeIconFromPath(`\n\t\t\tM 5 5\n\t\t\tL 5 17.5\n\t\t\t\t17.5 5\n\t\t\t\t5 5\n\t\t\tz\n\t\n\t\t\tM 42.5 5\n\t\t\tL 55 17.5\n\t\t\t\t55 5\n\t\t\t\t42.5 5\n\t\t\tz\n\t\n\t\t\tM 70 10\n\t\t\tL 70 21\n\t\t\t\t61 15\n\t\t\t\t55.5 23\n\t\t\t\t66 30\n\t\t\t\t56 37\n\t\t\t\t61 45\n\t\t\t\t70 39\n\t\t\t\t70 50\n\t\t\t\t80 50\n\t\t\t\t80 39\n\t\t\t\t89 45\n\t\t\t\t95 36\n\t\t\t\t84 30\n\t\t\t\t95 23\n\t\t\t\t89 15\n\t\t\t\t80 21\n\t\t\t\t80 10\n\t\t\t\t70 10\n\t\t\tz\n\t\n\t\t\tM 27.5 26.25\n\t\t\tL 27.5 91.25\n\t\t\tL 43.75 83.125\n\t\t\tL 52 99\n\t\t\tL 68 91\n\t\t\tL 60 75\n\t\t\tL 76.25 66.875\n\t\t\tL 27.5 26.25\n\t\t\tz\n\t\n\t\t\tM 5 42.5\n\t\t\tL 5 55\n\t\t\tL 17.5 55\n\t\t\tL 5 42.5\n\t\t\tz\n\t\t`, fill, strokeColor, strokeWidth);\n    }\n    makeZoomIcon() {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        icon.setAttribute('viewBox', '0 0 100 100');\n        const addTextNode = (text, x, y) => {\n            const textNode = document.createElementNS(svgNamespace, 'text');\n            textNode.appendChild(document.createTextNode(text));\n            textNode.setAttribute('x', x.toString());\n            textNode.setAttribute('y', y.toString());\n            textNode.style.textAlign = 'center';\n            textNode.style.textAnchor = 'middle';\n            textNode.style.fontSize = '55px';\n            textNode.style.fill = 'var(--icon-color)';\n            textNode.style.fontFamily = 'monospace';\n            icon.appendChild(textNode);\n        };\n        addTextNode('+', 40, 45);\n        addTextNode('-', 70, 75);\n        return icon;\n    }\n    makeRotationLockIcon() {\n        const icon = this.makeIconFromPath(`\n\t\t\tM 40.1 25.1 \n\t\t\tC 32.5 25 27.9 34.1 27.9 34.1 \n\t\t\tL 25.7 30 \n\t\t\tL 28 44.7 \n\t\t\tL 36.6 40.3 \n\t\t\tL 32.3 38.3 \n\t\t\tC 33.6 28 38.1 25.2 45.1 31.8 \n\t\t\tL 49.4 29.6 \n\t\t\tC 45.9 26.3 42.8 25.1 40.1 25.1 \n\t\t\tz\n\n\t\t\tM 51.7 34.2 \n\t\t\tL 43.5 39.1 \n\t\t\tL 48 40.8 \n\t\t\tC 47.4 51.1 43.1 54.3 35.7 48.2 \n\t\t\tL 31.6 50.7 \n\t\t\tC 45.5 62.1 52.6 44.6 52.6 44.6 \n\t\t\tL 55.1 48.6 \n\t\t\tL 51.7 34.2 \n\t\t\tz\n\n\t\t\tM 56.9 49.9 \n\t\t\tC 49.8 49.9 49.2 57.3 49.3 60.9 \n\t\t\tL 47.6 60.9 \n\t\t\tL 47.6 73.7 \n\t\t\tL 66.1 73.7 \n\t\t\tL 66.1 60.9 \n\t\t\tL 64.4 60.9 \n\t\t\tC 64.5 57.3 63.9 49.9 56.9 49.9 \n\t\t\tz\n\n\t\t\tM 56.9 53.5 \n\t\t\tC 60.8 53.5 61 58.2 60.8 60.9 \n\t\t\tL 52.9 60.9 \n\t\t\tC 52.7 58.2 52.9 53.5 56.9 53.5 \n\t\t\tz\n\t\t`);\n        icon.setAttribute('viewBox', '10 10 70 70');\n        return icon;\n    }\n    makeInsertImageIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 5 10 L 5 90 L 95 90 L 95 10 L 5 10 z\n\t\t\tM 10 15 L 90 15 L 90 50 L 70 75 L 40 50 L 10 75 L 10 15 z\n\t\t\tM 22.5 25 A 7.5 7.5 0 0 0 15 32.5 A 7.5 7.5 0 0 0 22.5 40 A 7.5 7.5 0 0 0 30 32.5 A 7.5 7.5 0 0 0 22.5 25 z \n\t\t`);\n    }\n    makeUploadFileIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 48,10 32,34 43,33 42,68\n\t\t\tH 54\n\t\t\tL 53,33 64,34 Z\n\t\n\t\t\tM 8,66 V 86 H 88 V 66 H 78 V 76 H 18 V 66 Z\n\t\t`);\n    }\n    makeTextIcon(textStyle) {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        icon.setAttribute('viewBox', '0 0 100 100');\n        const textNode = document.createElementNS(svgNamespace, 'text');\n        textNode.appendChild(document.createTextNode('T'));\n        textNode.style.fontFamily = textStyle.fontFamily;\n        textNode.style.fontWeight = textStyle.fontWeight ?? '';\n        textNode.style.fontVariant = textStyle.fontVariant ?? '';\n        textNode.style.fill = textStyle.renderingStyle.fill.toHexString();\n        textNode.style.textAnchor = 'middle';\n        textNode.setAttribute('x', '50');\n        textNode.setAttribute('y', '75');\n        textNode.style.fontSize = '65px';\n        textNode.style.filter = 'drop-shadow(0px 0px 10px var(--shadow-color))';\n        icon.appendChild(textNode);\n        return icon;\n    }\n    makePenIcon(penStyle) {\n        // Use a square-root scale to prevent the pen's tip from overflowing.\n        const strokeSize = Math.round(Math.sqrt(penStyle.thickness) * 4);\n        const color = penStyle.color;\n        const rounded = this.isRoundedTipPen(penStyle);\n        const tipThickness = strokeSize / 2;\n        const inkTipPath = `\n\t\t\tM ${15 - tipThickness},${80 - tipThickness}\n\t\t\t  ${15 - tipThickness},${80 + tipThickness}\n\t\t\t  30,83\n\t\t\t  15,65\n\t\t\tZ\n\t\t`;\n        const trailStartEndY = 80 + tipThickness;\n        const inkTrailPath = `\n\t\t\tm ${15 - tipThickness * 1.1},${trailStartEndY}\n\t\t\tc 35,10 55,15 60,30\n\t\t\tl ${35 + tipThickness * 1.2},${-10 - tipThickness}\n\t\t\tC 80.47,98.32 50.5,${90 + tipThickness} 20,${trailStartEndY} Z\n\t\t`;\n        const colorBubblePath = `\n\t\t\tM 72.45,35.67\n\t\t\tA 10,15 41.8 0 1 55,40.2 10,15 41.8 0 1 57.55,22.3 10,15 41.8 0 1 75,17.8 10,15 41.8 0 1 72.5,35.67\n\t\t\tZ\n\t\t`;\n        let gripMainPath = 'M 85,-25 25,35 h 10 v 10 h 10 v 10 h 10 v 10 h 10 l -5,10 60,-60 z';\n        let gripShadow1Path = 'M 25,35 H 35 L 90,-15 85,-25 Z';\n        let gripShadow2Path = 'M 60,75 65,65 H 55 l 55,-55 10,5 z';\n        if (rounded) {\n            gripMainPath = 'M 85,-25 25,35 c 15,0 40,30 35,40 l 60,-60 z';\n            gripShadow1Path = 'm 25,35 c 3.92361,0.384473 7.644275,0.980572 10,3 l 55,-53 -5,-10 z';\n            gripShadow2Path = 'M 60,75 C 61,66 59,65 56,59 l 54,-54 10,10 z';\n        }\n        const penTipPath = `M 25,35 ${10 - tipThickness / 4},${70 - tipThickness / 2} 20,75 25,85 60,75 70,55 45,25 Z`;\n        const pencilTipColor = Color4.fromHex('#f4d7d7');\n        const tipColor = pencilTipColor.mix(color, tipThickness / 40 - 0.1).toHexString();\n        const checkerboardPattern = makeCheckerboardPattern();\n        const colorString = color.toHexString();\n        const ink = createSvgPaths({\n            fill: checkerboardPattern.patternRef,\n            d: inkTipPath,\n        }, {\n            fill: checkerboardPattern.patternRef,\n            d: inkTrailPath,\n        }, {\n            fill: colorString,\n            d: inkTipPath,\n        }, {\n            fill: colorString,\n            d: inkTrailPath,\n        });\n        const penTip = createSvgPaths({ fill: checkerboardPattern.patternRef, d: penTipPath }, { fill: tipColor, stroke: colorString, d: penTipPath });\n        const grip = createSvgPaths({ fill: 'var(--icon-color)', stroke: 'var(--icon-color)', d: gripMainPath }, \n        // Shadows\n        { fill: 'rgba(150, 150, 150, 0.3)', d: gripShadow1Path }, { fill: 'rgba(100, 100, 100, 0.2)', d: gripShadow2Path }, \n        // Color bubble\n        { fill: checkerboardPattern.patternRef, d: colorBubblePath }, { fill: colorString, d: colorBubblePath });\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        icon.setAttribute('viewBox', '0 0 100 100');\n        const iconMainContent = createSvgElement('g', {\n            children: [ink, penTip, grip].flat(),\n        });\n        const defs = createSvgElement('defs', {\n            children: [checkerboardPattern.patternDefElement],\n        });\n        icon.replaceChildren(defs, iconMainContent);\n        return icon;\n    }\n    makeIconFromFactory(penStyle) {\n        // Increase the thickness we use to generate the icon less with larger actual thicknesses.\n        // We want the icon to be recognisable with a large range of thicknesses.\n        const thickness = Math.sqrt(penStyle.thickness) * 3;\n        const nowTime = performance.now();\n        const startPoint = {\n            pos: Vec2.of(10, 10),\n            width: thickness,\n            color: penStyle.color,\n            time: nowTime - 100,\n        };\n        const endPoint = {\n            pos: Vec2.of(90, 90),\n            width: thickness,\n            color: penStyle.color,\n            time: nowTime,\n        };\n        const viewport = new Viewport(() => { });\n        const builder = penStyle.factory(startPoint, viewport);\n        builder.addPoint(endPoint);\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        icon.setAttribute('viewBox', '0 0 100 100');\n        viewport.updateScreenSize(Vec2.of(100, 100));\n        let renderer;\n        // Any transparency? Include a checkerboard grid.\n        const includeTransparencyGrid = penStyle.color.a < 1;\n        if (includeTransparencyGrid) {\n            const checkerboardPattern = makeCheckerboardPattern();\n            const defs = document.createElementNS(svgNamespace, 'defs');\n            defs.appendChild(checkerboardPattern.patternDefElement);\n            icon.appendChild(defs);\n            const background = document.createElementNS(svgNamespace, 'g');\n            icon.appendChild(background);\n            renderer = new (class extends SVGRenderer {\n                constructor() {\n                    super(icon, viewport);\n                }\n                addPathToSVG() {\n                    const addedPath = super.addPathToSVG();\n                    if (addedPath) {\n                        // Add a copy of the path on the background\n                        const copy = addedPath.cloneNode(true);\n                        copy.style.zIndex = '-1';\n                        if (copy.hasAttribute('stroke')) {\n                            copy.setAttribute('stroke', checkerboardPattern.patternRef);\n                        }\n                        // Note: Assumes that the component wouldn't normally be both stroked\n                        // and filled.\n                        else if (copy.hasAttribute('fill')) {\n                            copy.setAttribute('fill', checkerboardPattern.patternRef);\n                        }\n                        background.appendChild(copy);\n                    }\n                    return addedPath;\n                }\n            })();\n        }\n        else {\n            renderer = new SVGRenderer(icon, viewport);\n        }\n        builder.preview(renderer);\n        // If only a single path was rendered, try to give it a checkerboard background to\n        // emphasize transparency. TODO: This is very fragile\n        const bbox = builder.getBBox();\n        icon.setAttribute('viewBox', `${bbox.x} ${bbox.y} ${bbox.w} ${bbox.h}`);\n        return icon;\n    }\n    makePipetteIcon(color) {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        const mainGroup = document.createElementNS(svgNamespace, 'g');\n        mainGroup.style.rotate = '45deg';\n        mainGroup.style.transformOrigin = 'center';\n        const pipette = document.createElementNS(svgNamespace, 'g');\n        pipette.innerHTML = `\n\t\t<path\n\t\t\tstyle=\"fill: var(--icon-color); stroke-linecap:round; stroke-linejoin:round;\"\n\t\t\td=\"\n\t\t\t\tm 32,12 v 68\n\t\t\t\tc 0,1 0.5,2 1.33,2.5 1.67,1.15 3.67,2.1 5.17,3.2 1.4,1.1 2.3,2.1 2.5,3.1 0.6,2.1 1,4.6 1,6.2 0,3.7 5.45,4.1 6,0.4 l 0.9,-6.8\n\t\t\t\tc 0.3,-0.9 1.1,-1.9 2.6,-2.9 1.5,-1.1 3.4,-2 5.1,-3.2\n\t\t\t\tC 57.5,82 58,81 58,80\n\t\t\t\tV 12 Z m 20,25 v 41.3\n\t\t\t\tc 0,1.7 -2.5,1.6 -4,2.7 -1,0.76 -2.1,1.5 -3,2.6\n\t\t\t\tC 44,82.5 43.02,81.75 42,81 40.51,79.92 38,80 38,78.34\n\t\t\t\tV 51 Z\n\t\t\t\"\n\t\t/>\n\t\t<rect\n\t\t\tstyle=\"fill: var(--icon-color);\"\n\t\t\twidth=\"32\"\n\t\t\theight=\"9\"\n\t\t\tx=\"29\"\n\t\t\ty=\"2\"\n\t\t\try=\"4.5\"\n\t\t/>\n\t\t<path\n\t\t\tstyle=\"fill: var(--icon-color);\"\n\t\t\td=\"m 45,-25 c -5.54,0 -11,4.26 -11,9 V 0 h 22 v -16 c 0,-4.74 -5.46,-9 -11,-9 z\"\n\t\t/>\n\t\t`;\n        if (color) {\n            const checkerboardPattern = makeCheckerboardPattern();\n            const defs = document.createElementNS(svgNamespace, 'defs');\n            defs.appendChild(checkerboardPattern.patternDefElement);\n            icon.appendChild(defs);\n            const fluidBackground = document.createElementNS(svgNamespace, 'path');\n            const fluid = document.createElementNS(svgNamespace, 'path');\n            const fluidPathData = `\n\t\t\t\tM 35,36 H 55 V 78.678012 83 L 45,87 35,83 Z\n\t\t\t`;\n            fluid.setAttribute('d', fluidPathData);\n            fluidBackground.setAttribute('d', fluidPathData);\n            fluid.style.fill = color.toHexString();\n            fluidBackground.style.fill = checkerboardPattern.patternRef;\n            mainGroup.appendChild(fluidBackground);\n            mainGroup.appendChild(fluid);\n        }\n        mainGroup.appendChild(pipette);\n        icon.appendChild(mainGroup);\n        icon.setAttribute('viewBox', '5 -40 140 140');\n        return icon;\n    }\n    makeShapeAutocorrectIcon() {\n        const fill = 'none';\n        const strokeColor = 'var(--icon-color)';\n        return this.makeIconFromPath(`\n\t\t\tm 79.129476,33.847107 9.967823,-0.03218 v 55 h -55 l 0.03218,-9.96782\n\t\t\tM 71.1,40.8 a 30,30 0 0 1 -30,30 30,30 0 0 1 -30,-30 30,30 0 0 1 30,-30 30,30 0 0 1 30,30 L 71.1,40.8\n\t\t\tM 34.1,58.8 v -25 h 25 v 0\n\t\t`, fill, strokeColor, '7px');\n    }\n    makeStrokeSmoothingIcon() {\n        const fill = 'none';\n        const strokeColor = 'var(--icon-color)';\n        return this.makeIconFromPath(`\n\t\t\tm 31,83.2 c -50,0 30,-65 -20,-65\n\t\t\tM 75,17.3 40,59.7 38.2,77.6 55.5,72.4 90.5,30 Z\n\t\t`, fill, strokeColor, '7px');\n    }\n    makePressureSensitivityIcon() {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        icon.setAttribute('viewBox', '4 -10 100 100');\n        icon.replaceChildren(...createSvgPaths({\n            d: `\n\t\t\t\t\tM 39.7,77.7\n\t\t\t\t\tC 39.7,77.7 3.4,78.1 4.2,60 4.7,45.2 33.2,30.5 40,25 55.9,12.1 7.4,4.8 7.4,4.8\n\t\t\t\t\tc 0,0 40.2,5.5 40.2,15.4\n\t\t\t\t\tC 47.6,29.1 21.2,35.1 23.9,60 25,70 39.7,77.7 39.7,77.7\n\t\t\t\t\tZ`,\n            fill: 'var(--icon-color)',\n            stroke: 'var(--icon-color)',\n            'stroke-width': '2px',\n        }, {\n            d: 'M 86.4,15.6 101.4,28.8 65,70 47.5,74.6 50,56.7Z',\n            fill: 'transparent',\n            stroke: 'var(--icon-color)',\n            'stroke-width': '6px',\n        }));\n        return icon;\n    }\n    /** Unused. @deprecated */\n    makeFormatSelectionIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 5 10\n\t\t\tL 5 20 L 10 20 L 10 15 L 20 15 L 20 40 L 15 40 L 15 45 L 35 45 L 35 40 L 30 40 L 30 15 L 40 15 L 40 20 L 45 20 L 45 15 L 45 10 L 5 10 z\n\t\t\tM 90 10 C 90 10 86.5 13.8 86 14 C 86 14 76.2 24.8 76 25 L 60 25 L 60 65 C 75 70 85 70 90 65 L 90 25 L 80 25 L 76.7 25 L 90 10 z\n\t\t\tM 60 25 L 55 25 L 50 30 L 60 25 z\n\t\t\tM 10 55 L 10 90 L 41 90 L 41 86 L 45 86 L 45 55 L 10 55 z\n\t\t\tM 42 87 L 42 93 L 48 93 L 48 87 L 42 87 z \n\t\t`);\n    }\n    makeResizeImageToSelectionIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 75 5 75 10 90 10 90 25 95 25 95 5 75 5 z\n\t\t\tM 15 15 15 30 20 30 20 20 30 20 30 15 15 15 z\n\t\t\tM 84 15 82 17 81 16 81 20 85 20 84 19 86 17 84 15 z\n\t\t\tM 26 24 24 26 26 28 25 29 29 29 29 25 28 26 26 24 z\n\t\t\tM 25 71 26 72 24 74 26 76 28 74 29 75 29 71 25 71 z\n\t\t\tM 15 75 15 85 25 85 25 80 20 80 20 75 15 75 z\n\t\t\tM 90 75 90 90 75 90 75 95 95 95 95 75 90 75 z\n\t\t\tM 81 81 81 85 82 84 84 86 86 84 84 82 85 81 81 81 z\n\t\t`);\n    }\n    /** Renamed to {@link makeResizeImageToSelectionIcon} @deprecated */\n    makeResizeViewportIcon() {\n        return this.makeResizeImageToSelectionIcon();\n    }\n    makeDuplicateSelectionIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 45,10 45,55 90,55 90,10 45,10 z\n\t\t\tM 10,25 10,90 70,90 70,60 40,60 40,25 10,25 z \n\t\t`);\n    }\n    makeCopyIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 45,10 45,55 90,55 90,10 45,10 z\n\t\t\tM 10,25 10,90 70,90 70,60 40,60 40,25 10,25 z \n\t\t`);\n    }\n    makePasteIcon() {\n        const icon = this.makeIconFromPath(`\n\t\t\tM 50 0 L 50 5 L 35 5 L 40 24.75 L 20 25 L 20 100 L 85 100 L 100 90 L 100 24 L 75.1 24.3 L 80 5 L 65 5 L 65 0 L 50 0 z\n\t\t\tM 10 15 L 10 115 L 110 115 L 110 15 L 85 15 L 83 20 L 105 20 L 105 110 L 15 110 L 15 20 L 32 20 L 30 15 L 10 15 z\n\t\t\tM 25 35 L 90 35 L 90 40 L 25 40 L 25 35 z\n\t\t\tM 25 45 L 90 45 L 90 50 L 25 50 L 25 45 z\n\t\t\tM 25 55 L 85 55 L 85 60 L 25 60 L 25 55 z\n\t\t\tM 25 65 L 90 65 L 90 70 L 25 70 L 25 65 z \n\t\t`);\n        icon.setAttribute('viewBox', '0 0 120 120');\n        return icon;\n    }\n    makeDeleteSelectionIcon() {\n        return __classPrivateFieldGet(this, _IconProvider_instances, \"m\", _IconProvider_makeXIcon).call(this);\n    }\n    makeCloseIcon() {\n        return __classPrivateFieldGet(this, _IconProvider_instances, \"m\", _IconProvider_makeXIcon).call(this);\n    }\n    makeSaveIcon() {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.innerHTML = `\n\t\t\t<style>\n\t\t\t\t.toolbar-save-icon {\n\t\t\t\t\tstroke: var(--icon-color);\n\t\t\t\t\tstroke-width: 6;\n\t\t\t\t\tstroke-linejoin: round;\n\t\t\t\t\tstroke-linecap: round;\n\t\t\t\t\tfill: none;\n\t\t\t\t}\n\t\t\t</style>\n\t\t\t<path\n\t\t\t\td='\n\t\t\t\t\tM 15,55 30,70 85,20\n\t\t\t\t'\n\t\t\t\tclass='toolbar-save-icon'\n\t\t\t/>\n\t\t`;\n        svg.setAttribute('viewBox', '0 0 100 100');\n        return svg;\n    }\n    makeConfigureDocumentIcon() {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.innerHTML = `\n\t\t\t<path\n\t\t\t\td='\n\t\t\t\t\tM 5,5 V 95 H 95 V 5 Z m 5,5 H 90 V 90 H 10 Z\n\t\t\t\t\tm 5,10 V 30 H 50 V 25 H 20 v -5 z\n\t\t\t\t\tm 40,0 V 50 H 85 V 20 Z\n\t\t\t\t\tm 2,2 H 83 V 39 L 77,28 70,42 64,35 57,45 Z\n\t\t\t\t\tm 8.5,5 C 64.67,27 64,27.67 64,28.5 64,29.33 64.67,30 65.5,30 66.33,30 67,29.33 67,28.5 67,27.67 66.33,27 65.5,27 Z\n\t\t\t\t\tM 15,40 v 5 h 35 v -5 z\n\t\t\t\t\tm 0,15 v 5 h 70 v -5 z\n\t\t\t\t\tm 0,15 v 5 h 70 v -5 z\n\t\t\t\t'\n\t\t\t\tstyle='fill: var(--icon-color);'\n\t\t\t/>\n\t\t`;\n        svg.setAttribute('viewBox', '0 0 100 100');\n        return svg;\n    }\n    makeOverflowIcon() {\n        return this.makeIconFromPath(`\n\t\t\tM 15 40\n\t\t\tA 12.5 12.5 0 0 0 2.5 52.5\n\t\t\tA 12.5 12.5 0 0 0 15 65\n\t\t\tA 12.5 12.5 0 0 0 27.5 52.5\n\t\t\tA 12.5 12.5 0 0 0 15 40\n\t\t\tz\n\t\n\t\t\tM 50 40\n\t\t\tA 12.5 12.5 0 0 0 37.5 52.5\n\t\t\tA 12.5 12.5 0 0 0 50 65\n\t\t\tA 12.5 12.5 0 0 0 62.5 52.5\n\t\t\tA 12.5 12.5 0 0 0 50 40\n\t\t\tz\n\t\t\t\n\t\t\tM 85 40\n\t\t\tA 12.5 12.5 0 0 0 72.5 52.5\n\t\t\tA 12.5 12.5 0 0 0 85 65\n\t\t\tA 12.5 12.5 0 0 0 97.5 52.5\n\t\t\tA 12.5 12.5 0 0 0 85 40\n\t\t\tz\n\t\t`);\n    }\n    makeHelpIcon() {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.innerHTML = `\n\t\t\t<circle\n\t\t\t\tstyle=\"stroke-width:1.587; stroke: var(--icon-color);\"\n\t\t\t\tfill=\"none\"\n\t\t\t\tcx=\"13.23\"\n\t\t\t\tcy=\"13.23\"\n\t\t\t\tr=\"11.9\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\tstyle=\"stroke-width: 3; stroke-linecap: butt; stroke: var(--icon-color);\"\n\t\t\t\tfill=\"none\"\n\t\t\t\td=\"M 9.26,6.61 C 18.7,3.25 19.95,10.4 14.3,13.4 c -1.15,0.61 -1.32,1.32 -1.32,2.65 v 2.12\"\n\t\t\t/>\n\t\t\t<circle\n\t\t\t\tstyle=\"fill: var(--icon-color);\"\n\t\t\t\tcx=\"13\"\n\t\t\t\tcy=\"21.32\"\n\t\t\t\tr=\"1.9\"\n\t\t\t/>\n\t\t`;\n        svg.setAttribute('viewBox', '0 0 26.46 26.46');\n        svg.setAttribute('width', '100');\n        svg.setAttribute('height', '100');\n        return svg;\n    }\n    /**\n     * @param pathData - SVG path data (e.g. `m10,10l30,30z`)\n     * @param fill - A valid CSS color (e.g. `var(--icon-color)` or `#f0f`). This can be `none`.\n     */\n    makeIconFromPath(pathData, fill = 'var(--icon-color)', strokeColor = 'none', strokeWidth = '0px') {\n        const icon = document.createElementNS(svgNamespace, 'svg');\n        const path = document.createElementNS(svgNamespace, 'path');\n        path.setAttribute('d', pathData);\n        path.style.fill = fill;\n        path.style.stroke = strokeColor;\n        path.style.strokeWidth = strokeWidth;\n        icon.appendChild(path);\n        icon.setAttribute('viewBox', '0 0 100 100');\n        return icon;\n    }\n    /**\n     * @returns An object with both the definition of a checkerboard pattern and the syntax to\n     * reference that pattern. The defs provided by this function should be wrapped within a\n     * `<defs></defs>` element.\n     *\n     * **Note**: This function's return value includes both `patternDefElement` (which returns\n     * an Element) and a (deprecated) `patternDef` string. Avoid using the `patternDef` result.\n     */\n    makeCheckerboardPattern() {\n        return makeCheckerboardPattern();\n    }\n    /**\n     * @returns true if the given `penStyle` is known to match a rounded tip type of pen.\n     */\n    isRoundedTipPen(penStyle) {\n        return penStyle.factory === makeFreehandLineBuilder || penStyle.factory === makePolylineBuilder;\n    }\n    isPolylinePen(penStyle) {\n        return penStyle.factory === makePolylineBuilder;\n    }\n    /** Must be overridden by icon packs that need attribution. */\n    licenseInfo() {\n        return null;\n    }\n}\n_IconProvider_instances = new WeakSet(), _IconProvider_makeXIcon = function _IconProvider_makeXIcon() {\n    const strokeWidth = '6px';\n    const strokeColor = 'var(--icon-color)';\n    const fillColor = 'none';\n    return this.makeIconFromPath(`\n\t\t\tM 15,15 85,85\n\t\t\tM 15,85 85,15\n\t\t`, fillColor, strokeColor, strokeWidth);\n};\nexport default IconProvider;\n", "/** Returns the smallest ID not used by the pointers in the given list. */\nconst getUniquePointerId = (pointers) => {\n    let ptrId = 0;\n    const pointerIds = pointers.map((ptr) => ptr.id);\n    pointerIds.sort();\n    for (const pointerId of pointerIds) {\n        if (ptrId === pointerId) {\n            ptrId = pointerId + 1;\n        }\n    }\n    return ptrId;\n};\nexport default getUniquePointerId;\n", "import  Pointer, { PointerDevice }  from '../Pointer.mjs';\nimport  { InputEvtType }  from '../inputEvents.mjs';\nimport  getUniquePointerId  from './getUniquePointerId.mjs';\n/**\n * Dispatch a pen event to the currently selected tool.\n * Intended for unit tests.\n *\n * @see {@link sendTouchEvent}\n */\nconst sendPenEvent = (editor, eventType, point, allPointers, deviceType = PointerDevice.Pen) => {\n    const id = getUniquePointerId(allPointers ?? []);\n    const mainPointer = Pointer.ofCanvasPoint(point, eventType !== InputEvtType.PointerUpEvt, editor.viewport, id, deviceType);\n    editor.toolController.dispatchInputEvent({\n        kind: eventType,\n        allPointers: allPointers ?? [mainPointer],\n        current: mainPointer,\n    });\n    return mainPointer;\n};\nexport default sendPenEvent;\n", "export const toolbarCSSPrefix = 'toolbar-';\n", "import  { EditorEventType }  from '../../../types.mjs';\nimport  EventDispatcher  from '../../../EventDispatcher.mjs';\nimport  { toolbarCSSPrefix }  from '../../constants.mjs';\nimport  { ReactiveValue }  from '../../../util/ReactiveValue.mjs';\nvar DropdownEventType;\n(function (DropdownEventType) {\n    DropdownEventType[DropdownEventType[\"DropdownShown\"] = 0] = \"DropdownShown\";\n    DropdownEventType[DropdownEventType[\"DropdownHidden\"] = 1] = \"DropdownHidden\";\n})(DropdownEventType || (DropdownEventType = {}));\nclass Dropdown {\n    constructor(parent, notifier, onDestroy) {\n        this.parent = parent;\n        this.notifier = notifier;\n        this.onDestroy = onDestroy;\n        this.dropdownToggleListener = null;\n        this.hideDropdownTimeout = null;\n        this.visible = ReactiveValue.fromInitialValue(false);\n        this.dropdownContainer = document.createElement('div');\n        this.dropdownContainer.classList.add(`${toolbarCSSPrefix}dropdown`);\n        this.dropdownContainer.classList.add('hidden');\n        parent.target.insertAdjacentElement('afterend', this.dropdownContainer);\n        // When another dropdown is shown,\n        this.dropdownToggleListener = this.notifier.on(DropdownEventType.DropdownShown, (evt) => {\n            if (evt.dropdown !== this &&\n                // Don't hide if a submenu was shown (it might be a submenu of\n                // the current menu).\n                evt.fromToplevelDropdown) {\n                this.setVisible(false);\n            }\n        });\n    }\n    onActivated() {\n        // Do nothing.\n    }\n    repositionDropdown() {\n        const dropdownBBox = this.dropdownContainer.getBoundingClientRect();\n        const screenWidth = document.scrollingElement?.clientWidth ?? document.body.clientHeight;\n        const screenHeight = document.scrollingElement?.clientHeight ?? document.body.clientHeight;\n        let translateX = undefined;\n        let translateY = undefined;\n        if (dropdownBBox.left > screenWidth / 2) {\n            const targetElem = this.parent.target;\n            translateX = `calc(${targetElem.clientWidth + 'px'} - 100%)`;\n        }\n        // Shift the dropdown if it's off the screen, but only if doing so moves it on to the screen\n        // (prevents dropdowns from going almost completely offscreen on small screens).\n        if (dropdownBBox.bottom > screenHeight && dropdownBBox.top - dropdownBBox.height > 0) {\n            const targetElem = this.parent.target;\n            translateY = `calc(-${targetElem.clientHeight}px - 100%)`;\n        }\n        // Use .translate so as not to conflict with CSS animating the\n        // transform property.\n        if (translateX || translateY) {\n            this.dropdownContainer.style.translate = `${translateX ?? '0'} ${translateY ?? '0'}`;\n        }\n        else {\n            this.dropdownContainer.style.translate = '';\n        }\n    }\n    setVisible(visible) {\n        const currentlyVisible = this.visible.get();\n        if (currentlyVisible === visible) {\n            return;\n        }\n        // If waiting to hide the dropdown, cancel it.\n        if (this.hideDropdownTimeout) {\n            clearTimeout(this.hideDropdownTimeout);\n            this.hideDropdownTimeout = null;\n            this.dropdownContainer.classList.remove('hiding');\n            this.repositionDropdown();\n        }\n        const animationDuration = 150; // ms\n        this.visible.set(visible);\n        if (visible) {\n            this.dropdownContainer.classList.remove('hidden');\n            this.notifier.dispatch(DropdownEventType.DropdownShown, {\n                dropdown: this,\n                fromToplevelDropdown: this.parent.isToplevel(),\n            });\n            this.repositionDropdown();\n        }\n        else {\n            this.notifier.dispatch(DropdownEventType.DropdownHidden, {\n                dropdown: this,\n                fromToplevelDropdown: this.parent.isToplevel(),\n            });\n            this.dropdownContainer.classList.add('hiding');\n            // Hide the dropdown *slightly* before the animation finishes. This\n            // prevents flickering in some browsers.\n            const hideDelay = animationDuration * 0.95;\n            this.hideDropdownTimeout = setTimeout(() => {\n                this.dropdownContainer.classList.add('hidden');\n                this.dropdownContainer.classList.remove('hiding');\n                this.repositionDropdown();\n            }, hideDelay);\n        }\n        // Animate\n        const animationName = `var(--dropdown-${visible ? 'show' : 'hide'}-animation)`;\n        this.dropdownContainer.style.animation = `${animationDuration}ms ease ${animationName}`;\n    }\n    requestShow() {\n        this.setVisible(true);\n    }\n    requestHide() {\n        this.setVisible(false);\n    }\n    appendChild(item) {\n        this.dropdownContainer.appendChild(item);\n    }\n    clearChildren() {\n        this.dropdownContainer.replaceChildren();\n    }\n    destroy() {\n        this.setVisible(false);\n        this.dropdownContainer.remove();\n        this.dropdownToggleListener?.remove();\n        // Allow children to be added to other parents\n        this.clearChildren();\n        this.onDestroy();\n    }\n}\nexport default class DropdownLayoutManager {\n    constructor(announceForAccessibility, localization) {\n        this.localization = localization;\n        this.dropdowns = new Set();\n        this.listeners = [];\n        this.connectedNotifiers = [];\n        this.notifier = new EventDispatcher();\n        this.notifier.on(DropdownEventType.DropdownShown, ({ dropdown, fromToplevelDropdown }) => {\n            if (!dropdown)\n                return;\n            announceForAccessibility(this.localization.dropdownShown(dropdown.parent.getTitle()));\n            // Share the event with other connected notifiers\n            this.connectedNotifiers.forEach((notifier) => {\n                notifier.dispatch(EditorEventType.ToolbarDropdownShown, {\n                    kind: EditorEventType.ToolbarDropdownShown,\n                    fromToplevelDropdown,\n                    layoutManager: this,\n                });\n            });\n        });\n        this.notifier.on(DropdownEventType.DropdownHidden, ({ dropdown }) => {\n            if (!dropdown)\n                return;\n            announceForAccessibility(this.localization.dropdownHidden(dropdown.parent.getTitle()));\n        });\n    }\n    connectToEditorNotifier(notifier) {\n        this.connectedNotifiers.push(notifier);\n        this.refreshListeners();\n    }\n    /** Creates a dropdown within `parent`. */\n    createToolMenu(parent) {\n        const dropdown = new Dropdown(parent, this.notifier, () => {\n            this.dropdowns.delete(dropdown);\n            this.refreshListeners();\n        });\n        this.dropdowns.add(dropdown);\n        this.refreshListeners();\n        return dropdown;\n    }\n    /**\n     * Adds/removes listeners based on whether we have any managed dropdowns.\n     *\n     * We attempt to clean up all resources when `dropdowns.size == 0`, at which\n     * point, an instance of this could be safely garbage collected.\n     */\n    refreshListeners() {\n        const clearListeners = () => {\n            // Remove all listeners & resources that won't be garbage collected.\n            this.listeners.forEach((l) => l.remove());\n            this.listeners = [];\n        };\n        if (this.dropdowns.size === 0) {\n            clearListeners();\n        }\n        else if (this.listeners.length !== this.connectedNotifiers.length) {\n            clearListeners();\n            this.listeners = this.connectedNotifiers.map((notifier) => {\n                return notifier.on(EditorEventType.ToolbarDropdownShown, (evt) => {\n                    if (evt.kind !== EditorEventType.ToolbarDropdownShown ||\n                        // Don't forward to ourselves events that we originally triggered.\n                        evt.layoutManager === this) {\n                        return;\n                    }\n                    this.notifier.dispatch(DropdownEventType.DropdownShown, {\n                        fromToplevelDropdown: evt.fromToplevelDropdown,\n                    });\n                });\n            });\n        }\n    }\n}\n", "/**\n * Calls `options.onStart` at the start of a long press or hover.\n * Calls `options.onEnd` when no pointers are within the container.\n */\nconst listenForLongPressOrHover = (target, options) => {\n    const pointersInside = new Map();\n    let timeoutId = null;\n    let isLongPressInProgress = false;\n    const updateTimeout = () => {\n        if (pointersInside.size === 0) {\n            if (isLongPressInProgress) {\n                isLongPressInProgress = false;\n                options.onEnd();\n            }\n            else if (timeoutId !== null) {\n                clearTimeout(timeoutId);\n                timeoutId = null;\n            }\n        }\n        else {\n            const nowTime = Date.now();\n            let timeSinceFirstPointer = 0; // ms\n            for (const record of pointersInside.values()) {\n                const timeSince = nowTime - record.timeEnter;\n                timeSinceFirstPointer = Math.max(timeSince, timeSinceFirstPointer);\n            }\n            const longPressTimeout = options.longPressTimeout ?? 700; // ms\n            if (timeoutId !== null) {\n                clearTimeout(timeoutId);\n                timeoutId = null;\n            }\n            const timeLeft = longPressTimeout - timeSinceFirstPointer;\n            if (timeLeft <= 0) {\n                options.onStart();\n                isLongPressInProgress = true;\n            }\n            else {\n                timeoutId = setTimeout(() => {\n                    timeoutId = null;\n                    updateTimeout();\n                }, timeLeft);\n            }\n        }\n    };\n    // Detects long press\n    const pointerEventListener = (event) => {\n        const eventRecord = {\n            timeEnter: Date.now(),\n        };\n        if (event.type === 'pointerenter') {\n            pointersInside.set(event.pointerId, eventRecord);\n        }\n        else if (event.type === 'pointerleave' || event.type === 'pointercancel') {\n            // In some cases (for example, a click with a stylus on Android/Chrome), moving the pen\n            // over the target, clicking, then moving the pen out of the target produces input\n            // similar to this:\n            // - pointerenter (pointerId: 4)\n            // - pointerleave (pointerId: 4)\n            // - pointerenter (pointerId: 6)\n            // - pointerenter (pointerId: 1)\n            // - pointerleave (pointerId: 6)\n            // Observe that no pointerleave event was fired for the pointer with ID 1.\n            pointersInside.clear();\n        }\n        updateTimeout();\n    };\n    target.addEventListener('pointerenter', pointerEventListener);\n    target.addEventListener('pointerleave', pointerEventListener);\n    target.addEventListener('pointercancel', pointerEventListener);\n    return {\n        removeListeners: () => {\n            target.removeEventListener('pointerenter', pointerEventListener);\n            target.removeEventListener('pointerleave', pointerEventListener);\n            target.removeEventListener('pointercancel', pointerEventListener);\n        },\n    };\n};\nexport default listenForLongPressOrHover;\n", "import  listenForLongPressOrHover  from './listenForLongPressOrHover.mjs';\n/**\n * When a pointer is inside `element`, after a delay, adds the `has-long-press-or-hover`\n * CSS class to `element`.\n *\n * When no pointers are inside `element`, adds the CSS class `no-long-press-or-hover`.\n */\nconst addLongPressOrHoverCssClasses = (element, options) => {\n    const hasLongPressClass = 'has-long-press-or-hover';\n    const noLongPressClass = 'no-long-press-or-hover';\n    element.classList.add('no-long-press-or-hover');\n    const { removeListeners } = listenForLongPressOrHover(element, {\n        onStart() {\n            element.classList.remove(noLongPressClass);\n            element.classList.add(hasLongPressClass);\n        },\n        onEnd() {\n            element.classList.add(noLongPressClass);\n            element.classList.remove(hasLongPressClass);\n        },\n        longPressTimeout: options?.timeout,\n    });\n    return {\n        removeEventListeners: () => {\n            element.classList.remove(noLongPressClass);\n            removeListeners();\n        },\n    };\n};\nexport default addLongPressOrHoverCssClasses;\n", "import { Vec2 } from '@js-draw/math';\nconst makeDraggable = (dragElement, options) => {\n    const dragElements = [...options.draggableChildElements, dragElement];\n    let lastX = 0;\n    let lastY = 0;\n    let startX = 0;\n    let startY = 0;\n    let pointerDown = false;\n    let capturedPointerId = null;\n    const isDraggableElement = (element) => {\n        if (!element) {\n            return false;\n        }\n        if (dragElements.includes(element)) {\n            return true;\n        }\n        // Some inputs handle dragging themselves. Don't also interpret such gestures\n        // as dragging the dropdown.\n        const undraggableElementTypes = ['INPUT', 'SELECT', 'IMG'];\n        let hasSuitableAncestors = false;\n        let ancestor = element.parentElement;\n        while (ancestor) {\n            if (undraggableElementTypes.includes(ancestor.tagName)) {\n                break;\n            }\n            if (dragElements.includes(ancestor)) {\n                hasSuitableAncestors = true;\n                break;\n            }\n            ancestor = ancestor.parentElement;\n        }\n        return !undraggableElementTypes.includes(element.tagName) && hasSuitableAncestors;\n    };\n    const removeEventListenerCallbacks = [];\n    const addEventListener = (listenerType, listener, options) => {\n        dragElement.addEventListener(listenerType, listener, options);\n        removeEventListenerCallbacks.push(() => {\n            dragElement.removeEventListener(listenerType, listener);\n        });\n    };\n    const clickThreshold = 5;\n    // Returns whether the current (or if no current, **the last**) gesture is roughly a click.\n    // Because this can be called **after** a gesture has just ended, it should not require\n    // the gesture to be in progress.\n    const isRoughlyClick = () => {\n        return Math.hypot(lastX - startX, lastY - startY) < clickThreshold;\n    };\n    let startedDragging = false;\n    addEventListener('pointerdown', (event) => {\n        if (event.defaultPrevented || !isDraggableElement(event.target)) {\n            return;\n        }\n        if (event.isPrimary) {\n            startedDragging = false;\n            lastX = event.clientX;\n            lastY = event.clientY;\n            startX = event.clientX;\n            startY = event.clientY;\n            capturedPointerId = null;\n            pointerDown = true;\n        }\n    }, { passive: true });\n    const onGestureEnd = (_event) => {\n        // If the pointerup/pointercancel event was for a pointer not being tracked,\n        if (!pointerDown) {\n            return;\n        }\n        if (capturedPointerId !== null) {\n            dragElement.releasePointerCapture(capturedPointerId);\n            capturedPointerId = null;\n        }\n        options.onDragEnd({\n            roughlyClick: isRoughlyClick(),\n            endTimestamp: performance.now(),\n            displacement: Vec2.of(lastX - startX, lastY - startY),\n        });\n        pointerDown = false;\n        startedDragging = false;\n    };\n    addEventListener('pointermove', (event) => {\n        if (!event.isPrimary || !pointerDown) {\n            return undefined;\n        }\n        // Mouse event and no buttons pressed? Cancel the event.\n        // This can happen if the event was canceled by a focus change (e.g. by opening a\n        // right-click menu).\n        if (event.pointerType === 'mouse' && event.buttons === 0) {\n            onGestureEnd(event);\n            return undefined;\n        }\n        // Only capture after motion -- capturing early prevents click events in Chrome.\n        if (capturedPointerId === null && !isRoughlyClick()) {\n            dragElement.setPointerCapture(event.pointerId);\n            capturedPointerId = event.pointerId;\n        }\n        const x = event.clientX;\n        const y = event.clientY;\n        const dx = x - lastX;\n        const dy = y - lastY;\n        const isClick = Math.abs(x - startX) <= clickThreshold && Math.abs(y - startY) <= clickThreshold;\n        if (!isClick || startedDragging) {\n            options.onDrag(dx, dy, Vec2.of(x - startX, y - startY));\n            lastX = x;\n            lastY = y;\n            startedDragging = true;\n        }\n    });\n    addEventListener('pointerleave', (event) => {\n        // Capture the pointer if it exits the container while dragging.\n        if (capturedPointerId === null && pointerDown && event.isPrimary) {\n            dragElement.setPointerCapture(event.pointerId);\n            capturedPointerId = event.pointerId;\n        }\n    });\n    addEventListener('pointerup', onGestureEnd);\n    addEventListener('pointercancel', onGestureEnd);\n    return {\n        removeListeners: () => {\n            for (const removeListenerCallback of removeEventListenerCallbacks) {\n                removeListenerCallback();\n            }\n        },\n    };\n};\nexport default makeDraggable;\n", "/**\n * Makes a clone of `element` and recursively applies styles from the original to the\n * clone's children.\n */\nconst cloneElementWithStyles = (element) => {\n    const restyle = (originalElement, clonedElement) => {\n        const originalComputedStyle = getComputedStyle(originalElement);\n        // jsdom doesn't support iterators in CSSStyleDeclarations. Iterate with\n        // an index.\n        for (let index = 0; index < originalComputedStyle.length; index++) {\n            const propertyName = originalComputedStyle.item(index);\n            const propertyValue = originalComputedStyle.getPropertyValue(propertyName);\n            clonedElement.style?.setProperty(propertyName, propertyValue);\n        }\n        for (let i = 0; i < originalElement.children.length; i++) {\n            const originalChild = originalElement.children.item(i);\n            const clonedChild = clonedElement.children.item(i);\n            if (originalChild && clonedChild) {\n                restyle(originalChild, clonedChild);\n            }\n            else {\n                console.warn('CloneElement: Missing child');\n            }\n        }\n    };\n    const elementClone = element.cloneNode(true);\n    restyle(element, elementClone);\n    return elementClone;\n};\nexport default cloneElementWithStyles;\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _HelpDisplay_helpData;\nimport { Rect2 } from '@js-draw/math';\nimport  makeDraggable  from './makeDraggable.mjs';\nimport  { MutableReactiveValue }  from '../../util/ReactiveValue.mjs';\nimport  cloneElementWithStyles  from '../../util/cloneElementWithStyles.mjs';\nimport  addLongPressOrHoverCssClasses  from '../../util/addLongPressOrHoverCssClasses.mjs';\n/**\n * Creates the main content of the help overlay.\n *\n * Shows the label for a `HelpRecord` and a highlighted copy\n * of that label's `targetElements`.\n */\nconst createHelpPage = (helpItems, onItemClick, onBackgroundClick, context) => {\n    const container = document.createElement('div');\n    container.classList.add('help-page-container');\n    const textLabel = document.createElement('div');\n    textLabel.classList.add('label', '-space-above');\n    textLabel.setAttribute('aria-live', 'polite');\n    // The current active item in helpItems.\n    // (Only one item is active at a time, but each item can have multiple HTMLElements).\n    let currentItemIndex = 0;\n    let currentItem = helpItems[0] ?? null;\n    // Each help item can have multiple associated elements. We store clones of each\n    // of these elements in their own container.\n    //\n    // clonedElementContainers maps from help item indicies to **arrays** of containers.\n    //\n    // For example, clonedElementContainers would be\n    //   [ [ Container1, Container2 ], [ Container3 ], [ Container4 ]]\n    //       ↑                            ↑              ↑\n    //       HelpItem 1                   HelpItem 2     HelpItem 3\n    // if the first help item had two elements (and thus two cloned element containers).\n    //\n    // We also store the original bounding box -- the bounding box of the clones can change\n    // while dragging to switch pages.\n    let clonedElementContainers = [];\n    // Clicking on the background of the help area should send an event (e.g. to allow the\n    // help container to be closed).\n    container.addEventListener('click', (event) => {\n        // If clicking directly on the container (and not on a child)\n        if (event.target === container) {\n            onBackgroundClick();\n        }\n    });\n    // Returns the combined bounding box of all elements associated with the currentItem\n    // (all active help items).\n    const getCombinedBBox = () => {\n        if (!currentItem) {\n            return Rect2.empty;\n        }\n        const itemBoundingBoxes = currentItem.targetElements.map((element) => Rect2.of(element.getBoundingClientRect()));\n        return Rect2.union(...itemBoundingBoxes);\n    };\n    // Updates each cloned element's click listener and CSS classes based on whether\n    // that element is the current focused element.\n    const updateClonedElementStates = () => {\n        const currentItemBBox = getCombinedBBox();\n        for (let index = 0; index < clonedElementContainers.length; index++) {\n            for (const { container, bbox: containerBBox } of clonedElementContainers[index]) {\n                if (index === currentItemIndex) {\n                    container.classList.add('-active');\n                    container.classList.remove('-clickable', '-background');\n                    container.onclick = () => { };\n                }\n                // Otherwise, if not containing the current element\n                else {\n                    if (!containerBBox.containsRect(currentItemBBox)) {\n                        container.classList.add('-clickable');\n                        container.classList.remove('-active', '-background');\n                    }\n                    else {\n                        container.classList.add('-background');\n                        container.classList.remove('-active', '-clickable');\n                    }\n                    const containerIndex = index;\n                    container.onclick = () => {\n                        onItemClick(containerIndex);\n                    };\n                }\n            }\n        }\n    };\n    // Ensures that the item label doesn't overlap the current help item's cloned element.\n    const updateLabelPosition = () => {\n        const labelBBox = Rect2.of(textLabel.getBoundingClientRect());\n        const combinedBBox = getCombinedBBox();\n        if (labelBBox.intersects(combinedBBox)) {\n            const containerBBox = Rect2.of(container.getBoundingClientRect());\n            const spaceAboveCombined = combinedBBox.topLeft.y;\n            const spaceBelowCombined = containerBBox.bottomLeft.y - combinedBBox.bottomLeft.y;\n            if (spaceAboveCombined > spaceBelowCombined && spaceAboveCombined > labelBBox.height / 3) {\n                // Push to the very top\n                textLabel.classList.remove('-small-space-above', '-large-space-above');\n                textLabel.classList.add('-large-space-below');\n            }\n            if (spaceAboveCombined < spaceBelowCombined && spaceBelowCombined > labelBBox.height) {\n                // Push to the very bottom\n                textLabel.classList.add('-large-space-above');\n                textLabel.classList.remove('-large-space-below');\n            }\n        }\n    };\n    const refreshContent = () => {\n        container.replaceChildren();\n        // Add the text label first so that screen readers will visit it first.\n        textLabel.classList.remove('-large-space-above');\n        textLabel.classList.add('-small-space-above', '-large-space-below');\n        container.appendChild(textLabel);\n        const screenBBox = new Rect2(0, 0, window.innerWidth, window.innerHeight);\n        clonedElementContainers = [];\n        for (let itemIndex = 0; itemIndex < helpItems.length; itemIndex++) {\n            const item = helpItems[itemIndex];\n            const itemCloneContainers = [];\n            for (const targetElement of item.targetElements) {\n                let targetBBox = Rect2.of(targetElement.getBoundingClientRect());\n                // Move the element onto the screen if not visible\n                if (!screenBBox.intersects(targetBBox)) {\n                    const screenBottomCenter = screenBBox.bottomLeft.lerp(screenBBox.bottomRight, 0.5);\n                    const targetBottomCenter = targetBBox.bottomLeft.lerp(targetBBox.bottomRight, 0.5);\n                    const delta = screenBottomCenter.minus(targetBottomCenter);\n                    targetBBox = targetBBox.translatedBy(delta);\n                }\n                const clonedElement = cloneElementWithStyles(targetElement);\n                // Interacting with the clone won't trigger event listeners, so disable\n                // all inputs.\n                for (const input of clonedElement.querySelectorAll('input')) {\n                    input.disabled = true;\n                }\n                clonedElement.style.margin = '0';\n                const clonedElementContainer = document.createElement('div');\n                clonedElementContainer.classList.add('cloned-element-container');\n                clonedElementContainer.role = 'group';\n                clonedElementContainer.ariaLabel = context.localization.helpControlsAccessibilityLabel;\n                clonedElementContainer.style.position = 'absolute';\n                clonedElementContainer.style.left = `${targetBBox.topLeft.x}px`;\n                clonedElementContainer.style.top = `${targetBBox.topLeft.y}px`;\n                clonedElementContainer.replaceChildren(clonedElement);\n                addLongPressOrHoverCssClasses(clonedElementContainer, { timeout: 0 });\n                itemCloneContainers.push({ container: clonedElementContainer, bbox: targetBBox });\n                container.appendChild(clonedElementContainer);\n            }\n            clonedElementContainers.push(itemCloneContainers);\n        }\n        updateClonedElementStates();\n    };\n    const refresh = () => {\n        refreshContent();\n        updateLabelPosition();\n    };\n    const onItemChange = () => {\n        const helpTextElement = document.createElement('div');\n        helpTextElement.textContent = currentItem?.helpText ?? '';\n        // For tests\n        helpTextElement.classList.add('current-item-help');\n        const navigationHelpElement = document.createElement('div');\n        navigationHelpElement.textContent = context.localization.helpScreenNavigationHelp;\n        navigationHelpElement.classList.add('navigation-help');\n        textLabel.replaceChildren(helpTextElement, ...(currentItemIndex === 0 ? [navigationHelpElement] : []));\n        updateClonedElementStates();\n    };\n    onItemChange();\n    return {\n        addToParent: (parent) => {\n            refreshContent();\n            parent.appendChild(container);\n            updateLabelPosition();\n        },\n        refresh,\n        setPageIndex: (pageIndex) => {\n            currentItemIndex = pageIndex;\n            currentItem = helpItems[pageIndex];\n            onItemChange();\n        },\n    };\n};\n/**\n * Creates and manages an overlay that shows help text for a set of\n * `HTMLElement`s.\n *\n * @see {@link BaseWidget.fillDropdown}.\n */\nclass HelpDisplay {\n    /** Constructed internally by BaseWidget. @internal */\n    constructor(createOverlay, context) {\n        this.createOverlay = createOverlay;\n        this.context = context;\n        _HelpDisplay_helpData.set(this, []);\n    }\n    /** @internal */\n    showHelpOverlay() {\n        const overlay = document.createElement('dialog');\n        overlay.setAttribute('autofocus', 'true');\n        overlay.classList.add('toolbar-help-overlay');\n        // Closes the overlay with a closing animation\n        const closing = false;\n        const closeOverlay = () => {\n            if (closing)\n                return;\n            // If changing animationDelay, be sure to also update the CSS.\n            const animationDelay = 250; // ms\n            overlay.classList.add('-hiding');\n            setTimeout(() => overlay.close(), animationDelay);\n        };\n        let lastDragTimestamp = 0;\n        const onBackgroundClick = () => {\n            const wasJustDragging = performance.now() - lastDragTimestamp < 100;\n            if (!wasJustDragging) {\n                closeOverlay();\n            }\n        };\n        const makeCloseButton = () => {\n            const closeButton = document.createElement('button');\n            closeButton.classList.add('close-button');\n            closeButton.appendChild(this.context.icons.makeCloseIcon());\n            const label = this.context.localization.close;\n            closeButton.setAttribute('aria-label', label);\n            closeButton.setAttribute('title', label);\n            closeButton.onclick = () => {\n                closeOverlay();\n            };\n            return closeButton;\n        };\n        // Wraps the label and clickable help elements\n        const makeNavigationContent = () => {\n            const currentPage = MutableReactiveValue.fromInitialValue(0);\n            const content = document.createElement('div');\n            content.classList.add('navigation-content');\n            const helpPage = createHelpPage(__classPrivateFieldGet(this, _HelpDisplay_helpData, \"f\"), (newPageIndex) => currentPage.set(newPageIndex), onBackgroundClick, this.context);\n            helpPage.addToParent(content);\n            const showPage = (pageIndex) => {\n                if (pageIndex >= __classPrivateFieldGet(this, _HelpDisplay_helpData, \"f\").length || pageIndex < 0) {\n                    // Hide if out of bounds\n                    console.warn('Help screen: Navigated to out-of-bounds page', pageIndex);\n                    content.style.display = 'none';\n                }\n                else {\n                    content.style.display = '';\n                    helpPage.setPageIndex(pageIndex);\n                }\n            };\n            currentPage.onUpdateAndNow(showPage);\n            const navigationControl = {\n                content,\n                currentPage,\n                toNext: () => {\n                    if (navigationControl.hasNext()) {\n                        currentPage.set(currentPage.get() + 1);\n                    }\n                },\n                toPrevious: () => {\n                    if (navigationControl.hasPrevious()) {\n                        currentPage.set(currentPage.get() - 1);\n                    }\n                },\n                hasNext: () => {\n                    return currentPage.get() + 1 < __classPrivateFieldGet(this, _HelpDisplay_helpData, \"f\").length;\n                },\n                hasPrevious: () => {\n                    return currentPage.get() > 0;\n                },\n                refreshCurrent: () => {\n                    helpPage.refresh();\n                },\n            };\n            return navigationControl;\n        };\n        // Creates next/previous buttons.\n        const makeNavigationButtons = (navigation) => {\n            const navigationButtonContainer = document.createElement('div');\n            navigationButtonContainer.classList.add('navigation-buttons');\n            const nextButton = document.createElement('button');\n            const previousButton = document.createElement('button');\n            nextButton.textContent = this.context.localization.next;\n            previousButton.textContent = this.context.localization.previous;\n            nextButton.classList.add('next');\n            previousButton.classList.add('previous');\n            const updateButtonVisibility = () => {\n                navigationButtonContainer.classList.remove('-has-next', '-has-previous');\n                if (navigation.hasNext()) {\n                    navigationButtonContainer.classList.add('-has-next');\n                    nextButton.disabled = false;\n                }\n                else {\n                    navigationButtonContainer.classList.remove('-has-next');\n                    nextButton.disabled = true;\n                }\n                if (navigation.hasPrevious()) {\n                    navigationButtonContainer.classList.add('-has-previous');\n                    previousButton.disabled = false;\n                }\n                else {\n                    navigationButtonContainer.classList.remove('-has-previous');\n                    previousButton.disabled = true;\n                }\n            };\n            navigation.currentPage.onUpdateAndNow(updateButtonVisibility);\n            nextButton.onclick = () => {\n                navigation.toNext();\n            };\n            previousButton.onclick = () => {\n                navigation.toPrevious();\n            };\n            navigationButtonContainer.replaceChildren(previousButton, nextButton);\n            return navigationButtonContainer;\n        };\n        const navigation = makeNavigationContent();\n        const navigationButtons = makeNavigationButtons(navigation);\n        overlay.replaceChildren(makeCloseButton(), navigationButtons, navigation.content);\n        this.createOverlay(overlay);\n        overlay.showModal();\n        const minDragOffsetToTransition = 30;\n        const setDragOffset = (offset) => {\n            if (offset > 0 && !navigation.hasPrevious()) {\n                offset = 0;\n            }\n            if (offset < 0 && !navigation.hasNext()) {\n                offset = 0;\n            }\n            // Clamp offset\n            if (offset > minDragOffsetToTransition || offset < -minDragOffsetToTransition) {\n                offset = minDragOffsetToTransition * Math.sign(offset);\n            }\n            overlay.style.transform = `translate(${offset}px, 0px)`;\n            if (offset >= minDragOffsetToTransition) {\n                navigationButtons.classList.add('-highlight-previous');\n            }\n            else {\n                navigationButtons.classList.remove('-highlight-previous');\n            }\n            if (offset <= -minDragOffsetToTransition) {\n                navigationButtons.classList.add('-highlight-next');\n            }\n            else {\n                navigationButtons.classList.remove('-highlight-next');\n            }\n        };\n        // Listeners\n        const dragListener = makeDraggable(overlay, {\n            draggableChildElements: [navigation.content],\n            onDrag: (_deltaX, _deltaY, totalDisplacement) => {\n                overlay.classList.add('-dragging');\n                setDragOffset(totalDisplacement.x);\n            },\n            onDragEnd: (dragStatistics) => {\n                overlay.classList.remove('-dragging');\n                setDragOffset(0);\n                if (!dragStatistics.roughlyClick) {\n                    const xDisplacement = dragStatistics.displacement.x;\n                    if (xDisplacement > minDragOffsetToTransition) {\n                        navigation.toPrevious();\n                    }\n                    else if (xDisplacement < -minDragOffsetToTransition) {\n                        navigation.toNext();\n                    }\n                    lastDragTimestamp = dragStatistics.endTimestamp;\n                }\n            },\n        });\n        let resizeObserver;\n        if (window.ResizeObserver) {\n            resizeObserver = new ResizeObserver(() => {\n                navigation.refreshCurrent();\n            });\n            resizeObserver.observe(overlay);\n        }\n        const onMediaChangeListener = () => {\n            // Refresh the cloned elements and their styles after a delay.\n            // This is necessary because styles are cloned, in addition to elements.\n            requestAnimationFrame(() => navigation.refreshCurrent());\n        };\n        // matchMedia is unsupported by jsdom\n        const mediaQueryList = window.matchMedia?.('(prefers-color-scheme: dark)');\n        mediaQueryList?.addEventListener('change', onMediaChangeListener);\n        // Close the overlay when clicking on the background (*directly* on any of the\n        // elements in closeOverlayTriggers).\n        const closeOverlayTriggers = [navigation.content, navigationButtons, overlay];\n        overlay.onclick = (event) => {\n            if (closeOverlayTriggers.includes(event.target)) {\n                onBackgroundClick();\n            }\n        };\n        overlay.onkeyup = (event) => {\n            if (event.code === 'Escape') {\n                closeOverlay();\n                event.preventDefault();\n            }\n            else if (event.code === 'ArrowRight') {\n                navigation.toNext();\n                event.preventDefault();\n            }\n            else if (event.code === 'ArrowLeft') {\n                navigation.toPrevious();\n                event.preventDefault();\n            }\n        };\n        overlay.addEventListener('close', () => {\n            this.context.announceForAccessibility(this.context.localization.helpHidden);\n            mediaQueryList?.removeEventListener('change', onMediaChangeListener);\n            dragListener.removeListeners();\n            resizeObserver?.disconnect();\n            overlay.remove();\n        });\n    }\n    /** Marks `helpText` as associated with a single `targetElement`. */\n    registerTextHelpForElement(targetElement, helpText) {\n        this.registerTextHelpForElements([targetElement], helpText);\n    }\n    /** Marks `helpText` as associated with all elements in `targetElements`. */\n    registerTextHelpForElements(targetElements, helpText) {\n        __classPrivateFieldGet(this, _HelpDisplay_helpData, \"f\").push({ targetElements: [...targetElements], helpText });\n    }\n    /** Returns true if any help text has been registered. */\n    hasHelpText() {\n        return __classPrivateFieldGet(this, _HelpDisplay_helpData, \"f\").length > 0;\n    }\n    /**\n     * Creates and returns a button that toggles the help display.\n     */\n    createToggleButton() {\n        const buttonContainer = document.createElement('div');\n        buttonContainer.classList.add('toolbar-help-overlay-button');\n        const helpButton = document.createElement('button');\n        helpButton.classList.add('button');\n        const icon = this.context.icons.makeHelpIcon();\n        icon.classList.add('icon');\n        helpButton.appendChild(icon);\n        helpButton.setAttribute('aria-label', this.context.localization.help);\n        helpButton.onclick = () => {\n            this.showHelpOverlay();\n        };\n        buttonContainer.appendChild(helpButton);\n        return buttonContainer;\n    }\n}\n_HelpDisplay_helpData = new WeakMap();\nexport default HelpDisplay;\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _BaseWidget_instances, _a, _BaseWidget_hasDropdown, _BaseWidget_disabledDueToReadOnlyEditor, _BaseWidget_tags, _BaseWidget_removeEditorListeners, _BaseWidget_addEditorListeners;\nimport  ToolbarShortcutHandler  from '../../tools/ToolbarShortcutHandler.mjs';\nimport  { keyPressEventFromHTMLEvent, keyUpEventFromHTMLEvent, }  from '../../inputEvents.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  DropdownLayoutManager  from './layout/DropdownLayoutManager.mjs';\nimport  addLongPressOrHoverCssClasses  from '../../util/addLongPressOrHoverCssClasses.mjs';\nimport  HelpDisplay  from '../utils/HelpDisplay.mjs';\nimport  { assertIsObject }  from '../../util/assertions.mjs';\n/**\n * A set of labels that allow toolbar themes to treat buttons differently.\n */\nexport var ToolbarWidgetTag;\n(function (ToolbarWidgetTag) {\n    ToolbarWidgetTag[\"Save\"] = \"save\";\n    ToolbarWidgetTag[\"Exit\"] = \"exit\";\n    ToolbarWidgetTag[\"Undo\"] = \"undo\";\n    ToolbarWidgetTag[\"Redo\"] = \"redo\";\n})(ToolbarWidgetTag || (ToolbarWidgetTag = {}));\n/**\n * The `abstract` base class for items that can be shown in a `js-draw` toolbar. See also {@link AbstractToolbar.addWidget}.\n *\n * See [the custom tool example](https://github.com/personalizedrefrigerator/js-draw/blob/main/docs/examples/example-custom-tools/example.ts)\n * for how to create a custom toolbar widget for a tool.\n *\n * For custom action buttons, {@link AbstractToolbar.addActionButton} may be sufficient for most use cases.\n */\nclass BaseWidget {\n    constructor(editor, id, localizationTable) {\n        _BaseWidget_instances.add(this);\n        this.editor = editor;\n        this.id = id;\n        this.dropdown = null;\n        _BaseWidget_hasDropdown.set(this, void 0);\n        // True iff this widget is disabled.\n        this.disabled = false;\n        // True iff this widget is currently disabled because the editor is read only\n        _BaseWidget_disabledDueToReadOnlyEditor.set(this, false);\n        _BaseWidget_tags.set(this, []);\n        // Maps subWidget IDs to subWidgets.\n        this.subWidgets = {};\n        this.toplevel = true;\n        _BaseWidget_removeEditorListeners.set(this, null);\n        this.localizationTable = localizationTable ?? editor.localization;\n        // Default layout manager\n        const defaultLayoutManager = new DropdownLayoutManager((text) => this.editor.announceForAccessibility(text), this.localizationTable);\n        defaultLayoutManager.connectToEditorNotifier(editor.notifier);\n        this.layoutManager = defaultLayoutManager;\n        this.icon = null;\n        this.container = document.createElement('div');\n        this.container.classList.add(`${toolbarCSSPrefix}toolContainer`, `${toolbarCSSPrefix}toolButtonContainer`, `${toolbarCSSPrefix}internalWidgetId--${id.replace(/[^a-zA-Z0-9_]/g, '-')}`);\n        this.dropdownContent = document.createElement('div');\n        __classPrivateFieldSet(this, _BaseWidget_hasDropdown, false, \"f\");\n        this.button = document.createElement('div');\n        this.button.classList.add(`${toolbarCSSPrefix}button`);\n        this.label = document.createElement('label');\n        this.button.setAttribute('role', 'button');\n        this.button.tabIndex = 0;\n        // Disable the context menu. This allows long-press gestures to trigger the button's\n        // tooltip instead.\n        this.button.oncontextmenu = (event) => {\n            event.preventDefault();\n        };\n        addLongPressOrHoverCssClasses(this.button);\n    }\n    /**\n     * Should return a constant true or false value. If true (the default),\n     * this widget must be automatically disabled when its editor is read-only.\n     */\n    shouldAutoDisableInReadOnlyEditor() {\n        return true;\n    }\n    getId() {\n        return this.id;\n    }\n    /**\n     * Note: Tags should be set *before* a tool widget is added to a toolbar.\n     *\n     *\n     * Associates tags with this widget that can be used by toolbar themes\n     * to customize the layout/appearance of this button. Prefer tags in\n     * the `ToolbarWidgetTag` enum, where possible.\n     *\n     * In addition to being readable from the {@link getTags} method, tags are\n     * added to a button's main container as CSS classes with the `toolwidget-tag--` prefix.\n     *\n     * For example, the `undo` tag would result in `toolwidget-tag--undo`\n     * being added to the button's container's class list.\n     *\n     */\n    setTags(tags) {\n        const toClassName = (tag) => {\n            return `toolwidget-tag--${tag}`;\n        };\n        // Remove CSS classes associated with old tags\n        for (const tag of __classPrivateFieldGet(this, _BaseWidget_tags, \"f\")) {\n            this.container.classList.remove(toClassName(tag));\n        }\n        __classPrivateFieldSet(this, _BaseWidget_tags, [...tags], \"f\");\n        // Add new CSS classes\n        for (const tag of __classPrivateFieldGet(this, _BaseWidget_tags, \"f\")) {\n            this.container.classList.add(toClassName(tag));\n        }\n    }\n    getTags() {\n        return [...__classPrivateFieldGet(this, _BaseWidget_tags, \"f\")];\n    }\n    /**\n     * Returns the ID of this widget in `container`. Adds a suffix to this' ID\n     * if an item in `container` already has this' ID.\n     *\n     * For example, if `this` has ID `foo` and if\n     * `container = { 'foo': somethingNotThis, 'foo-1': somethingElseNotThis }`, this method\n     * returns `foo-2` because elements with IDs `foo` and `foo-1` are already present in\n     * `container`.\n     *\n     * If `this` is already in `container`, returns the id given to `this` in the container.\n     */\n    getUniqueIdIn(container) {\n        let id = this.getId();\n        let idCounter = 0;\n        while (id in container && container[id] !== this) {\n            id = this.getId() + '-' + idCounter.toString();\n            idCounter++;\n        }\n        return id;\n    }\n    // Add content to the widget's associated dropdown menu.\n    // Returns true if such a menu should be created, false otherwise.\n    fillDropdown(dropdown, helpDisplay) {\n        if (Object.keys(this.subWidgets).length === 0) {\n            return false;\n        }\n        for (const widgetId in this.subWidgets) {\n            const widget = this.subWidgets[widgetId];\n            const widgetElement = widget.addTo(dropdown);\n            widget.setIsToplevel(false);\n            // Add help information\n            const helpText = widget.getHelpText();\n            if (helpText) {\n                helpDisplay?.registerTextHelpForElement(widgetElement, helpText);\n            }\n        }\n        return true;\n    }\n    /**\n     * Should return a 1-2 sentence description of the widget.\n     *\n     * At present, this is only used if this widget has an associated dropdown.\n     */\n    getHelpText() {\n        return undefined;\n    }\n    /** @deprecated Renamed to `setUpButtonEventListeners`. */\n    setupActionBtnClickListener(button) {\n        return this.setUpButtonEventListeners(button);\n    }\n    setUpButtonEventListeners(button) {\n        const clickTriggers = { Enter: true, ' ': true };\n        button.onkeydown = (evt) => {\n            let handled = false;\n            if (evt.key in clickTriggers) {\n                if (!this.disabled) {\n                    this.handleClick();\n                    handled = true;\n                }\n            }\n            // If we didn't do anything with the event, send it to the editor.\n            if (!handled) {\n                const editorEvent = keyPressEventFromHTMLEvent(evt);\n                handled = this.editor.toolController.dispatchInputEvent(editorEvent);\n            }\n            if (handled) {\n                evt.preventDefault();\n            }\n        };\n        button.onkeyup = (htmlEvent) => {\n            if (htmlEvent.key in clickTriggers) {\n                return;\n            }\n            const event = keyUpEventFromHTMLEvent(htmlEvent);\n            const handled = this.editor.toolController.dispatchInputEvent(event);\n            if (handled) {\n                htmlEvent.preventDefault();\n            }\n        };\n        button.onclick = () => {\n            if (!this.disabled) {\n                this.handleClick();\n            }\n        };\n        // Prevent double-click zoom on some devices.\n        button.ondblclick = (event) => {\n            event.preventDefault();\n        };\n    }\n    // Add a listener that is triggered when a key is pressed.\n    // Listeners will fire regardless of whether this widget is selected and require that\n    // {@link Editor.toolController} to have an enabled {@link ToolbarShortcutHandler} tool.\n    onKeyPress(_event) {\n        return false;\n    }\n    get hasDropdown() {\n        return __classPrivateFieldGet(this, _BaseWidget_hasDropdown, \"f\");\n    }\n    // Add a widget to this' dropdown. Must be called before this.addTo.\n    addSubWidget(widget) {\n        // Generate a unique ID for the widget.\n        const id = widget.getUniqueIdIn(this.subWidgets);\n        this.subWidgets[id] = widget;\n    }\n    setLayoutManager(manager) {\n        if (manager === this.layoutManager) {\n            return;\n        }\n        this.layoutManager = manager;\n        if (this.container.parentElement) {\n            // Trigger a re-creation of this' content\n            this.addTo(this.container.parentElement);\n        }\n    }\n    /**\n     * Adds this to `parent`.\n     * Returns the element that was just added to `parent`.\n     * @internal\n     */\n    addTo(parent) {\n        // Update title and icon\n        this.icon = null;\n        this.updateIcon();\n        this.label.innerText = this.getTitle();\n        const longLabelCSSClass = 'long-label';\n        if (this.label.innerText.length > 7) {\n            this.label.classList.add(longLabelCSSClass);\n        }\n        else {\n            this.label.classList.remove(longLabelCSSClass);\n        }\n        // Click functionality\n        this.setUpButtonEventListeners(this.button);\n        // Clear anything already in this.container.\n        this.container.replaceChildren();\n        this.button.replaceChildren(this.icon, this.label);\n        this.container.appendChild(this.button);\n        const helpDisplay = new HelpDisplay((content) => this.editor.createHTMLOverlay(content), this.editor);\n        const helpText = this.getHelpText();\n        if (helpText) {\n            helpDisplay.registerTextHelpForElement(this.dropdownContent, [this.getTitle(), helpText].join('\\n\\n'));\n        }\n        // Clear the dropdownContainer in case this element is being moved to another\n        // parent.\n        this.dropdownContent.replaceChildren();\n        __classPrivateFieldSet(this, _BaseWidget_hasDropdown, this.fillDropdown(this.dropdownContent, helpDisplay), \"f\");\n        if (__classPrivateFieldGet(this, _BaseWidget_hasDropdown, \"f\")) {\n            this.button.classList.add('has-dropdown');\n            // We're re-creating the dropdown.\n            this.dropdown?.destroy();\n            this.dropdownIcon = this.createDropdownIcon();\n            this.button.appendChild(this.dropdownIcon);\n            this.dropdown = this.layoutManager.createToolMenu({\n                target: this.button,\n                getTitle: () => this.getTitle(),\n                isToplevel: () => this.toplevel,\n            });\n            this.dropdown.visible.onUpdate((visible) => {\n                if (visible) {\n                    this.container.classList.add('dropdownVisible');\n                }\n                else {\n                    this.container.classList.remove('dropdownVisible');\n                }\n                // Auto-focus this component's button when the dropdown hides --\n                // this ensures that keyboard focus goes to a reasonable location when\n                // the user closes a menu.\n                if (!visible) {\n                    this.focus();\n                }\n            });\n            if (helpDisplay.hasHelpText()) {\n                this.dropdown.appendChild(helpDisplay.createToggleButton());\n            }\n            this.dropdown.appendChild(this.dropdownContent);\n        }\n        this.setDropdownVisible(false);\n        if (this.container.parentElement) {\n            this.container.remove();\n        }\n        __classPrivateFieldGet(this, _BaseWidget_instances, \"m\", _BaseWidget_addEditorListeners).call(this);\n        parent.appendChild(this.container);\n        return this.container;\n    }\n    /**\n     * Remove this. This allows the widget to be added to a toolbar again\n     * in the future using `addTo`.\n     */\n    remove() {\n        this.container.remove();\n        __classPrivateFieldGet(this, _BaseWidget_removeEditorListeners, \"f\")?.call(this);\n    }\n    focus() {\n        this.button.focus();\n    }\n    /**\n     * @internal\n     */\n    addCSSClassToContainer(className) {\n        this.container.classList.add(className);\n    }\n    removeCSSClassFromContainer(className) {\n        this.container.classList.remove(className);\n    }\n    updateIcon() {\n        let newIcon = this.createIcon();\n        if (!newIcon) {\n            newIcon = document.createElement('div');\n            this.container.classList.add('no-icon');\n        }\n        else {\n            this.container.classList.remove('no-icon');\n        }\n        this.icon?.replaceWith(newIcon);\n        this.icon = newIcon;\n        this.icon.classList.add(`${toolbarCSSPrefix}icon`);\n    }\n    setDisabled(disabled) {\n        this.disabled = disabled;\n        __classPrivateFieldSet(this, _BaseWidget_disabledDueToReadOnlyEditor, false, \"f\");\n        if (this.disabled) {\n            this.button.classList.add('disabled');\n            this.button.setAttribute('aria-disabled', 'true');\n        }\n        else {\n            this.button.classList.remove('disabled');\n            this.button.removeAttribute('aria-disabled');\n        }\n    }\n    setSelected(selected) {\n        const currentlySelected = this.isSelected();\n        if (currentlySelected === selected) {\n            return;\n        }\n        // Ensure that accessibility tools check and read the value of\n        // aria-checked.\n        // TODO: Ensure that 'role' is set to 'switch' by default for selectable\n        //       buttons.\n        this.button.setAttribute('role', 'switch');\n        if (selected) {\n            this.container.classList.add('selected');\n            this.button.setAttribute('aria-checked', 'true');\n        }\n        else {\n            this.container.classList.remove('selected');\n            this.button.setAttribute('aria-checked', 'false');\n        }\n    }\n    setDropdownVisible(visible) {\n        if (visible) {\n            this.dropdown?.requestShow();\n        }\n        else {\n            this.dropdown?.requestHide();\n        }\n    }\n    /**\n     * Only used by some layout managers.\n     * In those layout managers, makes this dropdown visible.\n     */\n    activateDropdown() {\n        this.dropdown?.onActivated();\n    }\n    /**\n     * Returns `true` if this widget must always be in a toplevel menu and not\n     * in a scrolling/overflow menu.\n     *\n     * This method can be overidden to override the default of `true`.\n     */\n    mustBeInToplevelMenu() {\n        return false;\n    }\n    /**\n     * Returns true iff this widget can be in a nontoplevel menu.\n     *\n     * @deprecated Use `!mustBeInToplevelMenu()` instead.\n     */\n    canBeInOverflowMenu() {\n        return !this.mustBeInToplevelMenu();\n    }\n    getButtonWidth() {\n        return this.button.clientWidth;\n    }\n    isHidden() {\n        return this.container.style.display === 'none';\n    }\n    setHidden(hidden) {\n        this.container.style.display = hidden ? 'none' : '';\n    }\n    /** Set whether the widget is contained within another. @internal */\n    setIsToplevel(toplevel) {\n        this.toplevel = toplevel;\n    }\n    /** Returns true if the menu for this widget is open. */\n    isDropdownVisible() {\n        return this.dropdown?.visible?.get() ?? false;\n    }\n    isSelected() {\n        return this.container.classList.contains('selected');\n    }\n    createDropdownIcon() {\n        const icon = this.editor.icons.makeDropdownIcon();\n        icon.classList.add(`${toolbarCSSPrefix}showHideDropdownIcon`);\n        return icon;\n    }\n    /**\n     * Serialize state associated with this widget.\n     * Override this method to allow saving/restoring from state on application load.\n     *\n     * Overriders should call `super` and include the output of `super.serializeState` in\n     * the output dictionary.\n     *\n     * Clients should not rely on the output from `saveState` being in any particular\n     * format.\n     */\n    serializeState() {\n        const subwidgetState = {};\n        // Save all subwidget state.\n        for (const subwidgetId in this.subWidgets) {\n            subwidgetState[subwidgetId] = this.subWidgets[subwidgetId].serializeState();\n        }\n        return {\n            subwidgetState,\n        };\n    }\n    /**\n     * Restore widget state from serialized data. See also `saveState`.\n     *\n     * Overriders must call `super`.\n     */\n    deserializeFrom(state) {\n        if (state.subwidgetState) {\n            assertIsObject(state.subwidgetState);\n            // Deserialize all subwidgets.\n            for (const subwidgetId in state.subwidgetState) {\n                if (subwidgetId in this.subWidgets) {\n                    const serializedSubwidgetState = state.subwidgetState[subwidgetId];\n                    if (serializedSubwidgetState) {\n                        this.subWidgets[subwidgetId].deserializeFrom(serializedSubwidgetState);\n                    }\n                }\n            }\n        }\n    }\n}\n_a = BaseWidget, _BaseWidget_hasDropdown = new WeakMap(), _BaseWidget_disabledDueToReadOnlyEditor = new WeakMap(), _BaseWidget_tags = new WeakMap(), _BaseWidget_removeEditorListeners = new WeakMap(), _BaseWidget_instances = new WeakSet(), _BaseWidget_addEditorListeners = function _BaseWidget_addEditorListeners() {\n    __classPrivateFieldGet(this, _BaseWidget_removeEditorListeners, \"f\")?.call(this);\n    const toolbarShortcutHandlers = this.editor.toolController.getMatchingTools(ToolbarShortcutHandler);\n    let removeKeyPressListener = null;\n    // If the onKeyPress function has been extended and the editor is configured to send keypress events to\n    // toolbar widgets,\n    if (toolbarShortcutHandlers.length > 0 && this.onKeyPress !== _a.prototype.onKeyPress) {\n        const keyPressListener = (event) => this.onKeyPress(event);\n        const handler = toolbarShortcutHandlers[0];\n        handler.registerListener(keyPressListener);\n        removeKeyPressListener = () => {\n            handler.removeListener(keyPressListener);\n        };\n    }\n    const readOnlyListener = this.editor.isReadOnlyReactiveValue().onUpdateAndNow((readOnly) => {\n        if (readOnly && this.shouldAutoDisableInReadOnlyEditor() && !this.disabled) {\n            this.setDisabled(true);\n            __classPrivateFieldSet(this, _BaseWidget_disabledDueToReadOnlyEditor, true, \"f\");\n            if (__classPrivateFieldGet(this, _BaseWidget_hasDropdown, \"f\")) {\n                this.dropdown?.requestHide();\n            }\n        }\n        else if (!readOnly && __classPrivateFieldGet(this, _BaseWidget_disabledDueToReadOnlyEditor, \"f\")) {\n            __classPrivateFieldSet(this, _BaseWidget_disabledDueToReadOnlyEditor, false, \"f\");\n            this.setDisabled(false);\n        }\n    });\n    __classPrivateFieldSet(this, _BaseWidget_removeEditorListeners, () => {\n        readOnlyListener.remove();\n        removeKeyPressListener?.();\n        __classPrivateFieldSet(this, _BaseWidget_removeEditorListeners, null, \"f\");\n    }, \"f\");\n};\nexport default BaseWidget;\n", "import  { ReactiveValue }  from '../../../util/ReactiveValue.mjs';\nexport default class EdgeToolbarLayoutManager {\n    // @internal\n    constructor(setSidebarContent, sidebarTitle, sidebarVisibility, announceForAccessibility, localization) {\n        this.setSidebarContent = setSidebarContent;\n        this.sidebarTitle = sidebarTitle;\n        this.sidebarVisibility = sidebarVisibility;\n        this.announceForAccessibility = announceForAccessibility;\n        this.localization = localization;\n        this.visibleWidgetContent = ReactiveValue.fromInitialValue(null);\n    }\n    /** Creates a dropdown within `parent`. */\n    createToolMenu(parent) {\n        const contentElem = document.createElement('div');\n        let result = null;\n        const visible = ReactiveValue.fromCallback(() => {\n            return this.visibleWidgetContent.get() === result && this.sidebarVisibility.get();\n        }, [this.visibleWidgetContent, this.sidebarVisibility]);\n        result = {\n            visible,\n            requestShow: () => {\n                this.setSidebarContent(contentElem);\n                this.sidebarTitle.set(parent.getTitle());\n                // Set visibleWidgetContent first -- this causes the previously visible (if any)\n                // item to not be sent a shown event.\n                this.visibleWidgetContent.set(result);\n                this.sidebarVisibility.set(true);\n                this.announceForAccessibility(this.localization.dropdownShown(parent.getTitle()));\n            },\n            onActivated: () => {\n                // TODO: Only request show when in sidebar mode\n                //result?.requestShow();\n            },\n            requestHide: () => {\n                if (visible.get()) {\n                    this.sidebarVisibility.set(false);\n                }\n            },\n            appendChild: (item) => {\n                contentElem.appendChild(item);\n            },\n            clearChildren: () => {\n                contentElem.replaceChildren();\n            },\n            destroy: () => {\n                result?.requestHide();\n                if (contentElem.parentElement) {\n                    contentElem.remove();\n                }\n                if (this.visibleWidgetContent.get() === result) {\n                    this.visibleWidgetContent.set(null);\n                }\n            },\n        };\n        return result;\n    }\n}\n", "const Coloris = (() => {\n  /*!\r\n  * Copyright (c) 2021-2023 Momo Bassit.\r\n  * Licensed under the MIT License (MIT)\r\n  * https://github.com/mdbassit/Coloris\r\n  * Version: 0.21.1\r\n  * NPM: https://github.com/melloware/coloris-npm\r\n  */\n\n  return ((window, document, Math, undefined) => {\n    const ctx = document.createElement('canvas').getContext('2d');\n    const currentColor = { r: 0, g: 0, b: 0, h: 0, s: 0, v: 0, a: 1 };\n    let container,picker,colorArea,colorMarker,colorPreview,colorValue,clearButton,closeButton,\n      hueSlider,hueMarker,alphaSlider,alphaMarker,currentEl,currentFormat,oldColor,keyboardNav,\n      colorAreaDims = {};\n\n    // Default settings\n    const settings = {\n      el: '[data-coloris]',\n      parent: 'body',\n      theme: 'default',\n      themeMode: 'light',\n      rtl: false,\n      wrap: true,\n      margin: 2,\n      format: 'hex',\n      formatToggle: false,\n      swatches: [],\n      swatchesOnly: false,\n      alpha: true,\n      forceAlpha: false,\n      focusInput: true,\n      selectInput: false,\n      inline: false,\n      defaultColor: '#000000',\n      clearButton: false,\n      clearLabel: 'Clear',\n      closeButton: false,\n      closeLabel: 'Close',\n      onChange: () => undefined,\n      a11y: {\n        open: 'Open color picker',\n        close: 'Close color picker',\n        clear: 'Clear the selected color',\n        marker: 'Saturation: {s}. Brightness: {v}.',\n        hueSlider: 'Hue slider',\n        alphaSlider: 'Opacity slider',\n        input: 'Color value field',\n        format: 'Color format',\n        swatch: 'Color swatch',\n        instruction: 'Saturation and brightness selector. Use up, down, left and right arrow keys to select.'\n      }\n    };\n\n    // Virtual instances cache\n    const instances = {};\n    let currentInstanceId = '';\n    let defaultInstance = {};\n    let hasInstance = false;\n\n    /**\r\n     * Configure the color picker.\r\n     * @param {object} options Configuration options.\r\n     */\n    function configure(options) {\n      if (typeof options !== 'object') {\n        return;\n      }\n\n      for (const key in options) {\n        switch (key) {\n          case 'el':\n            bindFields(options.el);\n            if (options.wrap !== false) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'parent':\n            container = document.querySelector(options.parent);\n            if (container) {\n              container.appendChild(picker);\n              settings.parent = options.parent;\n\n              // document.body is special\n              if (container === document.body) {\n                container = undefined;\n              }\n            }\n            break;\n          case 'themeMode':\n            settings.themeMode = options.themeMode;\n            if (options.themeMode === 'auto' && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n              settings.themeMode = 'dark';\n            }\n          // The lack of a break statement is intentional\n          case 'theme':\n            if (options.theme) {\n              settings.theme = options.theme;\n            }\n\n            // Set the theme and color scheme\n            picker.className = `clr-picker clr-${settings.theme} clr-${settings.themeMode}`;\n\n            // Update the color picker's position if inline mode is in use\n            if (settings.inline) {\n              updatePickerPosition();\n            }\n            break;\n          case 'rtl':\n            settings.rtl = !!options.rtl;\n            document.querySelectorAll('.clr-field').forEach((field) => field.classList.toggle('clr-rtl', settings.rtl));\n            break;\n          case 'margin':\n            options.margin *= 1;\n            settings.margin = !isNaN(options.margin) ? options.margin : settings.margin;\n            break;\n          case 'wrap':\n            if (options.el && options.wrap) {\n              wrapFields(options.el);\n            }\n            break;\n          case 'formatToggle':\n            settings.formatToggle = !!options.formatToggle;\n            getEl('clr-format').style.display = settings.formatToggle ? 'block' : 'none';\n            if (settings.formatToggle) {\n              settings.format = 'auto';\n            }\n            break;\n          case 'swatches':\n            if (Array.isArray(options.swatches)) {\n              const swatches = [];\n\n              options.swatches.forEach((swatch, i) => {\n                swatches.push(`<button type=\"button\" id=\"clr-swatch-${i}\" aria-labelledby=\"clr-swatch-label clr-swatch-${i}\" style=\"color: ${swatch};\">${swatch}</button>`);\n              });\n\n              getEl('clr-swatches').innerHTML = swatches.length ? `<div>${swatches.join('')}</div>` : '';\n              settings.swatches = options.swatches.slice();\n            }\n            break;\n          case 'swatchesOnly':\n            settings.swatchesOnly = !!options.swatchesOnly;\n            picker.setAttribute('data-minimal', settings.swatchesOnly);\n            break;\n          case 'alpha':\n            settings.alpha = !!options.alpha;\n            picker.setAttribute('data-alpha', settings.alpha);\n            break;\n          case 'inline':\n            settings.inline = !!options.inline;\n            picker.setAttribute('data-inline', settings.inline);\n\n            if (settings.inline) {\n              const defaultColor = options.defaultColor || settings.defaultColor;\n\n              currentFormat = getColorFormatFromStr(defaultColor);\n              updatePickerPosition();\n              setColorFromStr(defaultColor);\n            }\n            break;\n          case 'clearButton':\n            // Backward compatibility\n            if (typeof options.clearButton === 'object') {\n              if (options.clearButton.label) {\n                settings.clearLabel = options.clearButton.label;\n                clearButton.innerHTML = settings.clearLabel;\n              }\n\n              options.clearButton = options.clearButton.show;\n            }\n\n            settings.clearButton = !!options.clearButton;\n            clearButton.style.display = settings.clearButton ? 'block' : 'none';\n            break;\n          case 'clearLabel':\n            settings.clearLabel = options.clearLabel;\n            clearButton.innerHTML = settings.clearLabel;\n            break;\n          case 'closeButton':\n            settings.closeButton = !!options.closeButton;\n\n            if (settings.closeButton) {\n              picker.insertBefore(closeButton, colorPreview);\n            } else {\n              colorPreview.appendChild(closeButton);\n            }\n\n            break;\n          case 'closeLabel':\n            settings.closeLabel = options.closeLabel;\n            closeButton.innerHTML = settings.closeLabel;\n            break;\n          case 'a11y':\n            const labels = options.a11y;\n            let update = false;\n\n            if (typeof labels === 'object') {\n              for (const label in labels) {\n                if (labels[label] && settings.a11y[label]) {\n                  settings.a11y[label] = labels[label];\n                  update = true;\n                }\n              }\n            }\n\n            if (update) {\n              const openLabel = getEl('clr-open-label');\n              const swatchLabel = getEl('clr-swatch-label');\n\n              openLabel.innerHTML = settings.a11y.open;\n              swatchLabel.innerHTML = settings.a11y.swatch;\n              closeButton.setAttribute('aria-label', settings.a11y.close);\n              clearButton.setAttribute('aria-label', settings.a11y.clear);\n              hueSlider.setAttribute('aria-label', settings.a11y.hueSlider);\n              alphaSlider.setAttribute('aria-label', settings.a11y.alphaSlider);\n              colorValue.setAttribute('aria-label', settings.a11y.input);\n              colorArea.setAttribute('aria-label', settings.a11y.instruction);\n            }\n            break;\n          default:\n            settings[key] = options[key];\n        }\n      }\n    }\n\n    /**\r\n     * Add or update a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     * @param {Object} options Per-instance options to apply.\r\n     */\n    function setVirtualInstance(selector, options) {\n      if (typeof selector === 'string' && typeof options === 'object') {\n        instances[selector] = options;\n        hasInstance = true;\n      }\n    }\n\n    /**\r\n     * Remove a virtual instance.\r\n     * @param {String} selector The CSS selector of the elements to which the instance is attached.\r\n     */\n    function removeVirtualInstance(selector) {\n      delete instances[selector];\n\n      if (Object.keys(instances).length === 0) {\n        hasInstance = false;\n\n        if (selector === currentInstanceId) {\n          resetVirtualInstance();\n        }\n      }\n    }\n\n    /**\r\n     * Attach a virtual instance to an element if it matches a selector.\r\n     * @param {Object} element Target element that will receive a virtual instance if applicable.\r\n     */\n    function attachVirtualInstance(element) {\n      if (hasInstance) {\n        // These options can only be set globally, not per instance\n        const unsupportedOptions = ['el', 'wrap', 'rtl', 'inline', 'defaultColor', 'a11y'];\n\n        for (let selector in instances) {\n          const options = instances[selector];\n\n          // If the element matches an instance's CSS selector\n          if (element.matches(selector)) {\n            currentInstanceId = selector;\n            defaultInstance = {};\n\n            // Delete unsupported options\n            unsupportedOptions.forEach((option) => delete options[option]);\n\n            // Back up the default options so we can restore them later\n            for (let option in options) {\n              defaultInstance[option] = Array.isArray(settings[option]) ? settings[option].slice() : settings[option];\n            }\n\n            // Set the instance's options\n            configure(options);\n            break;\n          }\n        }\n      }\n    }\n\n    /**\r\n     * Revert any per-instance options that were previously applied.\r\n     */\n    function resetVirtualInstance() {\n      if (Object.keys(defaultInstance).length > 0) {\n        configure(defaultInstance);\n        currentInstanceId = '';\n        defaultInstance = {};\n      }\n    }\n\n    /**\r\n     * Bind the color picker to input fields that match the selector.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function bindFields(selector) {\n      // Show the color picker on click on the input fields that match the selector\n      addListener(document, 'click', selector, (event) => {\n        // Skip if inline mode is in use\n        if (settings.inline) {\n          return;\n        }\n\n        // Apply any per-instance options first\n        attachVirtualInstance(event.target);\n\n        currentEl = event.target;\n        oldColor = currentEl.value;\n        currentFormat = getColorFormatFromStr(oldColor);\n        picker.classList.add('clr-open');\n\n        updatePickerPosition();\n        setColorFromStr(oldColor);\n\n        if (settings.focusInput || settings.selectInput) {\n          colorValue.focus({ preventScroll: true });\n          colorValue.setSelectionRange(currentEl.selectionStart, currentEl.selectionEnd);\n        }\n\n        if (settings.selectInput) {\n          colorValue.select();\n        }\n\n        // Always focus the first element when using keyboard navigation\n        if (keyboardNav || settings.swatchesOnly) {\n          getFocusableElements().shift().focus();\n        }\n\n        // Trigger an \"open\" event\n        currentEl.dispatchEvent(new Event('open', { bubbles: true }));\n      });\n\n      // Update the color preview of the input fields that match the selector\n      addListener(document, 'input', selector, (event) => {\n        const parent = event.target.parentNode;\n\n        // Only update the preview if the field has been previously wrapped\n        if (parent.classList.contains('clr-field')) {\n          parent.style.color = event.target.value;\n        }\n      });\n    }\n\n    /**\r\n     * Update the color picker's position and the color gradient's offset\r\n     */\n    function updatePickerPosition() {\n      if (!picker || !currentEl && !settings.inline) return; //** DO NOT REMOVE: in case called before initialized\n      const parent = container;\n      const scrollY = window.scrollY;\n      const pickerWidth = picker.offsetWidth;\n      const pickerHeight = picker.offsetHeight;\n      const reposition = { left: false, top: false };\n      let parentStyle, parentMarginTop, parentBorderTop;\n      let offset = { x: 0, y: 0 };\n\n      if (parent) {\n        parentStyle = window.getComputedStyle(parent);\n        parentMarginTop = parseFloat(parentStyle.marginTop);\n        parentBorderTop = parseFloat(parentStyle.borderTopWidth);\n\n        offset = parent.getBoundingClientRect();\n        offset.y += parentBorderTop + scrollY;\n      }\n\n      if (!settings.inline) {\n        const coords = currentEl.getBoundingClientRect();\n        let left = coords.x;\n        let top = scrollY + coords.y + coords.height + settings.margin;\n\n        // If the color picker is inside a custom container\n        // set the position relative to it\n        if (parent) {\n          left -= offset.x;\n          top -= offset.y;\n\n          if (left + pickerWidth > parent.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight > parent.clientHeight - parentMarginTop) {\n            if (pickerHeight + settings.margin <= coords.top - (offset.y - scrollY)) {\n              top -= coords.height + pickerHeight + settings.margin * 2;\n              reposition.top = true;\n            }\n          }\n\n          top += parent.scrollTop;\n\n          // Otherwise set the position relative to the whole document\n        } else {\n          if (left + pickerWidth > document.documentElement.clientWidth) {\n            left += coords.width - pickerWidth;\n            reposition.left = true;\n          }\n\n          if (top + pickerHeight - scrollY > document.documentElement.clientHeight) {\n            if (pickerHeight + settings.margin <= coords.top) {\n              top = scrollY + coords.y - pickerHeight - settings.margin;\n              reposition.top = true;\n            }\n          }\n        }\n\n        picker.classList.toggle('clr-left', reposition.left);\n        picker.classList.toggle('clr-top', reposition.top);\n        picker.style.left = `${left}px`;\n        picker.style.top = `${top}px`;\n        offset.x += picker.offsetLeft;\n        offset.y += picker.offsetTop;\n      }\n\n      colorAreaDims = {\n        width: colorArea.offsetWidth,\n        height: colorArea.offsetHeight,\n        x: colorArea.offsetLeft + offset.x,\n        y: colorArea.offsetTop + offset.y\n      };\n    }\n\n    /**\r\n     * Wrap the linked input fields in a div that adds a color preview.\r\n     * @param {string} selector One or more selectors pointing to input fields.\r\n     */\n    function wrapFields(selector) {\n      document.querySelectorAll(selector).forEach((field) => {\n        const parentNode = field.parentNode;\n\n        if (!parentNode.classList.contains('clr-field')) {\n          const wrapper = document.createElement('div');\n          let classes = 'clr-field';\n\n          if (settings.rtl || field.classList.contains('clr-rtl')) {\n            classes += ' clr-rtl';\n          }\n\n          wrapper.innerHTML = `<button type=\"button\" aria-labelledby=\"clr-open-label\"></button>`;\n          parentNode.insertBefore(wrapper, field);\n          wrapper.setAttribute('class', classes);\n          wrapper.style.color = field.value;\n          wrapper.appendChild(field);\n        }\n      });\n    }\n\n    /**\r\n     * Close the color picker.\r\n     * @param {boolean} [revert] If true, revert the color to the original value.\r\n     */\n    function closePicker(revert) {\n      if (currentEl && !settings.inline) {\n        const prevEl = currentEl;\n\n        // Revert the color to the original value if needed\n        if (revert) {\n          // This will prevent the \"change\" event on the colorValue input to execute its handler\n          currentEl = undefined;\n\n          if (oldColor !== prevEl.value) {\n            prevEl.value = oldColor;\n\n            // Trigger an \"input\" event to force update the thumbnail next to the input field\n            prevEl.dispatchEvent(new Event('input', { bubbles: true }));\n          }\n        }\n\n        // Trigger a \"change\" event if needed\n        setTimeout(() => {// Add this to the end of the event loop\n          if (oldColor !== prevEl.value) {\n            prevEl.dispatchEvent(new Event('change', { bubbles: true }));\n          }\n        });\n\n        // Hide the picker dialog\n        picker.classList.remove('clr-open');\n\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Trigger a \"close\" event\n        prevEl.dispatchEvent(new Event('close', { bubbles: true }));\n\n        if (settings.focusInput) {\n          prevEl.focus({ preventScroll: true });\n        }\n\n        // This essentially marks the picker as closed\n        currentEl = undefined;\n      }\n    }\n\n    /**\r\n     * Set the active color from a string.\r\n     * @param {string} str String representing a color.\r\n     */\n    function setColorFromStr(str) {\n      const rgba = strToRGBA(str);\n      const hsva = RGBAtoHSVA(rgba);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n\n      // Update the UI\n      hueSlider.value = hsva.h;\n      picker.style.color = `hsl(${hsva.h}, 100%, 50%)`;\n      hueMarker.style.left = `${hsva.h / 360 * 100}%`;\n\n      colorMarker.style.left = `${colorAreaDims.width * hsva.s / 100}px`;\n      colorMarker.style.top = `${colorAreaDims.height - colorAreaDims.height * hsva.v / 100}px`;\n\n      alphaSlider.value = hsva.a * 100;\n      alphaMarker.style.left = `${hsva.a * 100}%`;\n    }\n\n    /**\r\n     * Guess the color format from a string.\r\n     * @param {string} str String representing a color.\r\n     * @return {string} The color format.\r\n     */\n    function getColorFormatFromStr(str) {\n      const format = str.substring(0, 3).toLowerCase();\n\n      if (format === 'rgb' || format === 'hsl') {\n        return format;\n      }\n\n      return 'hex';\n    }\n\n    /**\r\n     * Copy the active color to the linked input field.\r\n     * @param {number} [color] Color value to override the active color.\r\n     */\n    function pickColor(color) {\n      color = color !== undefined ? color : colorValue.value;\n\n      if (currentEl) {\n        currentEl.value = color;\n        currentEl.dispatchEvent(new Event('input', { bubbles: true }));\n      }\n\n      if (settings.onChange) {\n        settings.onChange.call(window, color, currentEl);\n      }\n\n      document.dispatchEvent(new CustomEvent('coloris:pick', { detail: { color, currentEl } }));\n    }\n\n    /**\r\n     * Set the active color based on a specific point in the color gradient.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setColorAtPosition(x, y) {\n      const hsva = {\n        h: hueSlider.value * 1,\n        s: x / colorAreaDims.width * 100,\n        v: 100 - y / colorAreaDims.height * 100,\n        a: alphaSlider.value / 100\n      };\n      const rgba = HSVAtoRGBA(hsva);\n\n      updateMarkerA11yLabel(hsva.s, hsva.v);\n      updateColor(rgba, hsva);\n      pickColor();\n    }\n\n    /**\r\n     * Update the color marker's accessibility label.\r\n     * @param {number} saturation\r\n     * @param {number} value\r\n     */\n    function updateMarkerA11yLabel(saturation, value) {\n      let label = settings.a11y.marker;\n\n      saturation = saturation.toFixed(1) * 1;\n      value = value.toFixed(1) * 1;\n      label = label.replace('{s}', saturation);\n      label = label.replace('{v}', value);\n      colorMarker.setAttribute('aria-label', label);\n    }\n\n    //\n    /**\r\n     * Get the pageX and pageY positions of the pointer.\r\n     * @param {object} event The MouseEvent or TouchEvent object.\r\n     * @return {object} The pageX and pageY positions.\r\n     */\n    function getPointerPosition(event) {\n      return {\n        pageX: event.changedTouches ? event.changedTouches[0].pageX : event.pageX,\n        pageY: event.changedTouches ? event.changedTouches[0].pageY : event.pageY\n      };\n    }\n\n    /**\r\n     * Move the color marker when dragged.\r\n     * @param {object} event The MouseEvent object.\r\n     */\n    function moveMarker(event) {\n      const pointer = getPointerPosition(event);\n      let x = pointer.pageX - colorAreaDims.x;\n      let y = pointer.pageY - colorAreaDims.y;\n\n      if (container) {\n        y += container.scrollTop;\n      }\n\n      setMarkerPosition(x, y);\n\n      // Prevent scrolling while dragging the marker\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    /**\r\n     * Move the color marker when the arrow keys are pressed.\r\n     * @param {number} offsetX The horizontal amount to move.\r\n     * @param {number} offsetY The vertical amount to move.\r\n     */\n    function moveMarkerOnKeydown(offsetX, offsetY) {\n      let x = colorMarker.style.left.replace('px', '') * 1 + offsetX;\n      let y = colorMarker.style.top.replace('px', '') * 1 + offsetY;\n\n      setMarkerPosition(x, y);\n    }\n\n    /**\r\n     * Set the color marker's position.\r\n     * @param {number} x Left position.\r\n     * @param {number} y Top position.\r\n     */\n    function setMarkerPosition(x, y) {\n      // Make sure the marker doesn't go out of bounds\n      x = x < 0 ? 0 : x > colorAreaDims.width ? colorAreaDims.width : x;\n      y = y < 0 ? 0 : y > colorAreaDims.height ? colorAreaDims.height : y;\n\n      // Set the position\n      colorMarker.style.left = `${x}px`;\n      colorMarker.style.top = `${y}px`;\n\n      // Update the color\n      setColorAtPosition(x, y);\n\n      // Make sure the marker is focused\n      colorMarker.focus();\n    }\n\n    /**\r\n     * Update the color picker's input field and preview thumb.\r\n     * @param {Object} rgba Red, green, blue and alpha values.\r\n     * @param {Object} [hsva] Hue, saturation, value and alpha values.\r\n     */\n    function updateColor(rgba, hsva) {if (rgba === void 0) {rgba = {};}if (hsva === void 0) {hsva = {};}\n      let format = settings.format;\n\n      for (const key in rgba) {\n        currentColor[key] = rgba[key];\n      }\n\n      for (const key in hsva) {\n        currentColor[key] = hsva[key];\n      }\n\n      const hex = RGBAToHex(currentColor);\n      const opaqueHex = hex.substring(0, 7);\n\n      colorMarker.style.color = opaqueHex;\n      alphaMarker.parentNode.style.color = opaqueHex;\n      alphaMarker.style.color = hex;\n      colorPreview.style.color = hex;\n\n      // Force repaint the color and alpha gradients as a workaround for a Google Chrome bug\n      colorArea.style.display = 'none';\n      colorArea.offsetHeight;\n      colorArea.style.display = '';\n      alphaMarker.nextElementSibling.style.display = 'none';\n      alphaMarker.nextElementSibling.offsetHeight;\n      alphaMarker.nextElementSibling.style.display = '';\n\n      if (format === 'mixed') {\n        format = currentColor.a === 1 ? 'hex' : 'rgb';\n      } else if (format === 'auto') {\n        format = currentFormat;\n      }\n\n      switch (format) {\n        case 'hex':\n          colorValue.value = hex;\n          break;\n        case 'rgb':\n          colorValue.value = RGBAToStr(currentColor);\n          break;\n        case 'hsl':\n          colorValue.value = HSLAToStr(HSVAtoHSLA(currentColor));\n          break;\n      }\n\n      // Select the current format in the format switcher\n      document.querySelector(`.clr-format [value=\"${format}\"]`).checked = true;\n    }\n\n    /**\r\n     * Set the hue when its slider is moved.\r\n     */\n    function setHue() {\n      const hue = hueSlider.value * 1;\n      const x = colorMarker.style.left.replace('px', '') * 1;\n      const y = colorMarker.style.top.replace('px', '') * 1;\n\n      picker.style.color = `hsl(${hue}, 100%, 50%)`;\n      hueMarker.style.left = `${hue / 360 * 100}%`;\n\n      setColorAtPosition(x, y);\n    }\n\n    /**\r\n     * Set the alpha when its slider is moved.\r\n     */\n    function setAlpha() {\n      const alpha = alphaSlider.value / 100;\n\n      alphaMarker.style.left = `${alpha * 100}%`;\n      updateColor({ a: alpha });\n      pickColor();\n    }\n\n    /**\r\n     * Convert HSVA to RGBA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function HSVAtoRGBA(hsva) {\n      const saturation = hsva.s / 100;\n      const value = hsva.v / 100;\n      let chroma = saturation * value;\n      let hueBy60 = hsva.h / 60;\n      let x = chroma * (1 - Math.abs(hueBy60 % 2 - 1));\n      let m = value - chroma;\n\n      chroma = chroma + m;\n      x = x + m;\n\n      const index = Math.floor(hueBy60) % 6;\n      const red = [chroma, x, m, m, x, chroma][index];\n      const green = [x, chroma, chroma, x, m, m][index];\n      const blue = [m, m, x, chroma, chroma, x][index];\n\n      return {\n        r: Math.round(red * 255),\n        g: Math.round(green * 255),\n        b: Math.round(blue * 255),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert HSVA to HSLA.\r\n     * @param {object} hsva Hue, saturation, value and alpha values.\r\n     * @return {object} Hue, saturation, lightness and alpha values.\r\n     */\n    function HSVAtoHSLA(hsva) {\n      const value = hsva.v / 100;\n      const lightness = value * (1 - hsva.s / 100 / 2);\n      let saturation;\n\n      if (lightness > 0 && lightness < 1) {\n        saturation = Math.round((value - lightness) / Math.min(lightness, 1 - lightness) * 100);\n      }\n\n      return {\n        h: hsva.h,\n        s: saturation || 0,\n        l: Math.round(lightness * 100),\n        a: hsva.a\n      };\n    }\n\n    /**\r\n     * Convert RGBA to HSVA.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {object} Hue, saturation, value and alpha values.\r\n     */\n    function RGBAtoHSVA(rgba) {\n      const red = rgba.r / 255;\n      const green = rgba.g / 255;\n      const blue = rgba.b / 255;\n      const xmax = Math.max(red, green, blue);\n      const xmin = Math.min(red, green, blue);\n      const chroma = xmax - xmin;\n      const value = xmax;\n      let hue = 0;\n      let saturation = 0;\n\n      if (chroma) {\n        if (xmax === red) {hue = (green - blue) / chroma;}\n        if (xmax === green) {hue = 2 + (blue - red) / chroma;}\n        if (xmax === blue) {hue = 4 + (red - green) / chroma;}\n        if (xmax) {saturation = chroma / xmax;}\n      }\n\n      hue = Math.floor(hue * 60);\n\n      return {\n        h: hue < 0 ? hue + 360 : hue,\n        s: Math.round(saturation * 100),\n        v: Math.round(value * 100),\n        a: rgba.a\n      };\n    }\n\n    /**\r\n     * Parse a string to RGBA.\r\n     * @param {string} str String representing a color.\r\n     * @return {object} Red, green, blue and alpha values.\r\n     */\n    function strToRGBA(str) {\n      const regex = /^((rgba)|rgb)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]+([\\d.]+)[\\D]*?([\\d.]+|$)/i;\n      let match, rgba;\n\n      // Default to black for invalid color strings\n      ctx.fillStyle = '#000';\n\n      // Use canvas to convert the string to a valid color string\n      ctx.fillStyle = str;\n      match = regex.exec(ctx.fillStyle);\n\n      if (match) {\n        rgba = {\n          r: match[3] * 1,\n          g: match[4] * 1,\n          b: match[5] * 1,\n          a: match[6] * 1\n        };\n\n        // Workaround to mitigate a Chromium bug where the alpha value is rounded incorrectly\n        rgba.a = +rgba.a.toFixed(2);\n\n      } else {\n        match = ctx.fillStyle.replace('#', '').match(/.{2}/g).map((h) => parseInt(h, 16));\n        rgba = {\n          r: match[0],\n          g: match[1],\n          b: match[2],\n          a: 1\n        };\n      }\n\n      return rgba;\n    }\n\n    /**\r\n     * Convert RGBA to Hex.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} Hex color string.\r\n     */\n    function RGBAToHex(rgba) {\n      let R = rgba.r.toString(16);\n      let G = rgba.g.toString(16);\n      let B = rgba.b.toString(16);\n      let A = '';\n\n      if (rgba.r < 16) {\n        R = '0' + R;\n      }\n\n      if (rgba.g < 16) {\n        G = '0' + G;\n      }\n\n      if (rgba.b < 16) {\n        B = '0' + B;\n      }\n\n      if (settings.alpha && (rgba.a < 1 || settings.forceAlpha)) {\n        const alpha = rgba.a * 255 | 0;\n        A = alpha.toString(16);\n\n        if (alpha < 16) {\n          A = '0' + A;\n        }\n      }\n\n      return '#' + R + G + B + A;\n    }\n\n    /**\r\n     * Convert RGBA values to a CSS rgb/rgba string.\r\n     * @param {object} rgba Red, green, blue and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function RGBAToStr(rgba) {\n      if (!settings.alpha || rgba.a === 1 && !settings.forceAlpha) {\n        return `rgb(${rgba.r}, ${rgba.g}, ${rgba.b})`;\n      } else {\n        return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\n      }\n    }\n\n    /**\r\n     * Convert HSLA values to a CSS hsl/hsla string.\r\n     * @param {object} hsla Hue, saturation, lightness and alpha values.\r\n     * @return {string} CSS color string.\r\n     */\n    function HSLAToStr(hsla) {\n      if (!settings.alpha || hsla.a === 1 && !settings.forceAlpha) {\n        return `hsl(${hsla.h}, ${hsla.s}%, ${hsla.l}%)`;\n      } else {\n        return `hsla(${hsla.h}, ${hsla.s}%, ${hsla.l}%, ${hsla.a})`;\n      }\n    }\n\n    /**\r\n     * Init the color picker.\r\n     */\n    function init() {\n      if (document.getElementById('clr-picker')) return; //** DO NOT REMOVE: Prevent binding events multiple times\n      // Render the UI\n      container = undefined;\n      picker = document.createElement('div');\n      picker.setAttribute('id', 'clr-picker');\n      picker.className = 'clr-picker';\n      picker.innerHTML =\n      `<input id=\"clr-color-value\" name=\"clr-color-value\" class=\"clr-color\" type=\"text\" value=\"\" spellcheck=\"false\" aria-label=\"${settings.a11y.input}\">` +\n      `<div id=\"clr-color-area\" class=\"clr-gradient\" role=\"application\" aria-label=\"${settings.a11y.instruction}\">` +\n      '<div id=\"clr-color-marker\" class=\"clr-marker\" tabindex=\"0\"></div>' +\n      '</div>' +\n      '<div class=\"clr-hue\">' +\n      `<input id=\"clr-hue-slider\" name=\"clr-hue-slider\" type=\"range\" min=\"0\" max=\"360\" step=\"1\" aria-label=\"${settings.a11y.hueSlider}\">` +\n      '<div id=\"clr-hue-marker\"></div>' +\n      '</div>' +\n      '<div class=\"clr-alpha\">' +\n      `<input id=\"clr-alpha-slider\" name=\"clr-alpha-slider\" type=\"range\" min=\"0\" max=\"100\" step=\"1\" aria-label=\"${settings.a11y.alphaSlider}\">` +\n      '<div id=\"clr-alpha-marker\"></div>' +\n      '<span></span>' +\n      '</div>' +\n      '<div id=\"clr-format\" class=\"clr-format\">' +\n      '<fieldset class=\"clr-segmented\">' +\n      `<legend>${settings.a11y.format}</legend>` +\n      '<input id=\"clr-f1\" type=\"radio\" name=\"clr-format\" value=\"hex\">' +\n      '<label for=\"clr-f1\">Hex</label>' +\n      '<input id=\"clr-f2\" type=\"radio\" name=\"clr-format\" value=\"rgb\">' +\n      '<label for=\"clr-f2\">RGB</label>' +\n      '<input id=\"clr-f3\" type=\"radio\" name=\"clr-format\" value=\"hsl\">' +\n      '<label for=\"clr-f3\">HSL</label>' +\n      '<span></span>' +\n      '</fieldset>' +\n      '</div>' +\n      '<div id=\"clr-swatches\" class=\"clr-swatches\"></div>' +\n      `<button type=\"button\" id=\"clr-clear\" class=\"clr-clear\" aria-label=\"${settings.a11y.clear}\">${settings.clearLabel}</button>` +\n      '<div id=\"clr-color-preview\" class=\"clr-preview\">' +\n      `<button type=\"button\" id=\"clr-close\" class=\"clr-close\" aria-label=\"${settings.a11y.close}\">${settings.closeLabel}</button>` +\n      '</div>' +\n      `<span id=\"clr-open-label\" hidden>${settings.a11y.open}</span>` +\n      `<span id=\"clr-swatch-label\" hidden>${settings.a11y.swatch}</span>`;\n\n      // Append the color picker to the DOM\n      document.body.appendChild(picker);\n\n      // Reference the UI elements\n      colorArea = getEl('clr-color-area');\n      colorMarker = getEl('clr-color-marker');\n      clearButton = getEl('clr-clear');\n      closeButton = getEl('clr-close');\n      colorPreview = getEl('clr-color-preview');\n      colorValue = getEl('clr-color-value');\n      hueSlider = getEl('clr-hue-slider');\n      hueMarker = getEl('clr-hue-marker');\n      alphaSlider = getEl('clr-alpha-slider');\n      alphaMarker = getEl('clr-alpha-marker');\n\n      // Bind the picker to the default selector\n      bindFields(settings.el);\n      wrapFields(settings.el);\n\n      addListener(picker, 'mousedown', (event) => {\n        picker.classList.remove('clr-keyboard-nav');\n        event.stopPropagation();\n      });\n\n      addListener(colorArea, 'mousedown', (event) => {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorArea, 'touchstart', (event) => {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorMarker, 'mousedown', (event) => {\n        addListener(document, 'mousemove', moveMarker);\n      });\n\n      addListener(colorMarker, 'touchstart', (event) => {\n        document.addEventListener('touchmove', moveMarker, { passive: false });\n      });\n\n      addListener(colorValue, 'change', (event) => {\n        const value = colorValue.value;\n\n        if (currentEl || settings.inline) {\n          const color = value === '' ? value : setColorFromStr(value);\n          pickColor(color);\n        }\n      });\n\n      addListener(clearButton, 'click', (event) => {\n        pickColor('');\n        closePicker();\n      });\n\n      addListener(closeButton, 'click', (event) => {\n        pickColor();\n        closePicker();\n      });\n\n      addListener(getEl('clr-format'), 'click', '.clr-format input', (event) => {\n        currentFormat = event.target.value;\n        updateColor();\n        pickColor();\n      });\n\n      addListener(picker, 'click', '.clr-swatches button', (event) => {\n        setColorFromStr(event.target.textContent);\n        pickColor();\n\n        if (settings.swatchesOnly) {\n          closePicker();\n        }\n      });\n\n      addListener(document, 'mouseup', (event) => {\n        document.removeEventListener('mousemove', moveMarker);\n      });\n\n      addListener(document, 'touchend', (event) => {\n        document.removeEventListener('touchmove', moveMarker);\n      });\n\n      addListener(document, 'mousedown', (event) => {\n        keyboardNav = false;\n        picker.classList.remove('clr-keyboard-nav');\n        closePicker();\n      });\n\n      addListener(document, 'keydown', (event) => {\n        const key = event.key;\n        const target = event.target;\n        const shiftKey = event.shiftKey;\n        const navKeys = ['Tab', 'ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'];\n\n        if (key === 'Escape') {\n          closePicker(true);\n\n          // Display focus rings when using the keyboard\n        } else if (navKeys.includes(key)) {\n          keyboardNav = true;\n          picker.classList.add('clr-keyboard-nav');\n        }\n\n        // Trap the focus within the color picker while it's open\n        if (key === 'Tab' && target.matches('.clr-picker *')) {\n          const focusables = getFocusableElements();\n          const firstFocusable = focusables.shift();\n          const lastFocusable = focusables.pop();\n\n          if (shiftKey && target === firstFocusable) {\n            lastFocusable.focus();\n            event.preventDefault();\n          } else if (!shiftKey && target === lastFocusable) {\n            firstFocusable.focus();\n            event.preventDefault();\n          }\n        }\n      });\n\n      addListener(document, 'click', '.clr-field button', (event) => {\n        // Reset any previously set per-instance options\n        if (hasInstance) {\n          resetVirtualInstance();\n        }\n\n        // Open the color picker\n        event.target.nextElementSibling.dispatchEvent(new Event('click', { bubbles: true }));\n      });\n\n      addListener(colorMarker, 'keydown', (event) => {\n        const movements = {\n          ArrowUp: [0, -1],\n          ArrowDown: [0, 1],\n          ArrowLeft: [-1, 0],\n          ArrowRight: [1, 0]\n        };\n\n        if (Object.keys(movements).includes(event.key)) {\n          moveMarkerOnKeydown(...movements[event.key]);\n          event.preventDefault();\n        }\n      });\n\n      addListener(colorArea, 'click', moveMarker);\n      addListener(hueSlider, 'input', setHue);\n      addListener(alphaSlider, 'input', setAlpha);\n    }\n\n    /**\r\n     * Return a list of focusable elements within the color picker.\r\n     * @return {array} The list of focusable DOM elemnts.\r\n     */\n    function getFocusableElements() {\n      const controls = Array.from(picker.querySelectorAll('input, button'));\n      const focusables = controls.filter((node) => !!node.offsetWidth);\n\n      return focusables;\n    }\n\n    /**\r\n     * Shortcut for getElementById to optimize the minified JS.\r\n     * @param {string} id The element id.\r\n     * @return {object} The DOM element with the provided id.\r\n     */\n    function getEl(id) {\n      return document.getElementById(id);\n    }\n\n    /**\r\n     * Shortcut for addEventListener to optimize the minified JS.\r\n     * @param {object} context The context to which the listener is attached.\r\n     * @param {string} type Event type.\r\n     * @param {(string|function)} selector Event target if delegation is used, event handler if not.\r\n     * @param {function} [fn] Event handler if delegation is used.\r\n     */\n    function addListener(context, type, selector, fn) {\n      const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n      // Delegate event to the target of the selector\n      if (typeof selector === 'string') {\n        context.addEventListener(type, (event) => {\n          if (matches.call(event.target, selector)) {\n            fn.call(event.target, event);\n          }\n        });\n\n        // If the selector is not a string then it's a function\n        // in which case we need a regular event listener\n      } else {\n        fn = selector;\n        context.addEventListener(type, fn);\n      }\n    }\n\n    /**\r\n     * Call a function only when the DOM is ready.\r\n     * @param {function} fn The function to call.\r\n     * @param {array} [args] Arguments to pass to the function.\r\n     */\n    function DOMReady(fn, args) {\n      args = args !== undefined ? args : [];\n\n      if (document.readyState !== 'loading') {\n        fn(...args);\n      } else {\n        document.addEventListener('DOMContentLoaded', () => {\n          fn(...args);\n        });\n      }\n    }\n\n    // Polyfill for Nodelist.forEach\n    if (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n      NodeList.prototype.forEach = Array.prototype.forEach;\n    }\n\n    //*****************************************************\n    //******* NPM: Custom code starts here ****************\n    //*****************************************************\n\n    /**\r\n     * Copy the active color to the linked input field and set the color.\r\n     * @param {string} [color] Color value to override the active color.\r\n     * @param {HTMLelement} [target] the element setting the color on\r\n     */\n    function setColor(color, target) {\n      currentEl = target;\n      oldColor = currentEl.value;\n      attachVirtualInstance(target);\n      currentFormat = getColorFormatFromStr(color);\n      updatePickerPosition();\n      setColorFromStr(color);\n      pickColor();\n      if (oldColor !== color) {\n        currentEl.dispatchEvent(new Event('change', { bubbles: true }));\n      }\n    }\n\n    // Expose the color picker to the global scope\n    const Coloris = (() => {\n      const methods = {\n        init: init,\n        set: configure,\n        wrap: wrapFields,\n        close: closePicker,\n        setInstance: setVirtualInstance,\n        setColor: setColor,\n        removeInstance: removeVirtualInstance,\n        updatePosition: updatePickerPosition,\n        ready: DOMReady\n      };\n\n      function Coloris(options) {\n        DOMReady(() => {\n          if (options) {\n            if (typeof options === 'string') {\n              bindFields(options);\n            } else {\n              configure(options);\n            }\n          }\n        });\n      }\n\n      for (const key in methods) {\n        Coloris[key] = function () {for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {args[_key] = arguments[_key];}\n          DOMReady(methods[key], args);\n        };\n      }\n\n      // handle window resize events re-aligning the panel\n      DOMReady(() => {\n        window.addEventListener('resize', (event) => {Coloris.updatePosition();});\n        window.addEventListener('scroll', (event) => {Coloris.updatePosition();});\n      });\n\n      return Coloris;\n    })();\n\n    // Ensure init function is available not only as as a default import\n    Coloris.coloris = Coloris;\n\n    // Init the color picker when the DOM is ready\n    return Coloris;\n\n  })(window, document, Math);\n})();\n\nconst _coloris = Coloris.coloris;\nconst _init = Coloris.init;\nconst _set = Coloris.set;\nconst _wrap = Coloris.wrap;\nconst _close = Coloris.close;\nconst _setInstance = Coloris.setInstance;\nconst _removeInstance = Coloris.removeInstance;\nconst _updatePosition = Coloris.updatePosition;\nexport default Coloris;\nexport {\n  _coloris as coloris,\n  _close as close,\n  _init as init,\n  _set as set,\n  _wrap as wrap,\n  _setInstance as setInstance,\n  _removeInstance as removeInstance,\n  _updatePosition as updatePosition };", "const makeSnapToGridAutocorrect = (sourceFactory) => {\n    return (startPoint, viewport) => {\n        return new SnapToGridAutocompleteBuilder(sourceFactory, startPoint, viewport);\n    };\n};\nexport default makeSnapToGridAutocorrect;\nclass SnapToGridAutocompleteBuilder {\n    constructor(sourceFactory, startPoint, viewport) {\n        this.sourceFactory = sourceFactory;\n        this.startPoint = startPoint;\n        this.viewport = viewport;\n        this.builder = sourceFactory(startPoint, viewport);\n        this.points = [startPoint];\n    }\n    getBBox() {\n        return this.builder.getBBox();\n    }\n    build() {\n        return this.builder.build();\n    }\n    preview(renderer) {\n        this.builder.preview(renderer);\n    }\n    addPoint(point) {\n        this.points.push(point);\n        this.builder.addPoint(point);\n    }\n    async autocorrectShape() {\n        const snapToGrid = (point) => {\n            return {\n                ...point,\n                pos: this.viewport.snapToGrid(point.pos),\n            };\n        };\n        // Use screen points so that snapped shapes rotate with the screen.\n        const startPoint = snapToGrid(this.startPoint);\n        const builder = this.sourceFactory(startPoint, this.viewport);\n        const points = this.points.map((point) => snapToGrid(point));\n        for (const point of points) {\n            builder.addPoint(point);\n        }\n        return builder.build();\n    }\n}\n", "import { Path, PathCommandType } from '@js-draw/math';\nimport  Stroke  from '../Stroke.mjs';\nimport  makeSnapToGridAutocorrect  from './autocorrect/makeSnapToGridAutocorrect.mjs';\n/**\n * Creates a stroke builder that generates arrows.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makeArrowBuilder = makeSnapToGridAutocorrect((initialPoint, viewport) => {\n    return new ArrowBuilder(initialPoint, viewport);\n});\nexport default class ArrowBuilder {\n    constructor(startPoint, viewport) {\n        this.startPoint = startPoint;\n        this.viewport = viewport;\n        this.endPoint = startPoint;\n    }\n    getLineWidth() {\n        return Math.max(this.endPoint.width, this.startPoint.width);\n    }\n    getBBox() {\n        const preview = this.buildPreview();\n        return preview.getBBox();\n    }\n    buildPreview() {\n        const lineStartPoint = this.startPoint.pos;\n        const endPoint = this.endPoint.pos;\n        const toEnd = endPoint.minus(lineStartPoint).normalized();\n        const arrowLength = endPoint.distanceTo(lineStartPoint);\n        // Ensure that the arrow tip is smaller than the arrow.\n        const arrowTipSize = Math.min(this.getLineWidth(), arrowLength / 2);\n        const startSize = this.startPoint.width / 2;\n        const endSize = this.endPoint.width / 2;\n        const arrowTipBase = endPoint.minus(toEnd.times(arrowTipSize));\n        // Scaled normal vectors.\n        const lineNormal = toEnd.orthog();\n        const scaledStartNormal = lineNormal.times(startSize);\n        const scaledBaseNormal = lineNormal.times(endSize);\n        const path = new Path(arrowTipBase.minus(scaledBaseNormal), [\n            // Stem\n            {\n                kind: PathCommandType.LineTo,\n                point: lineStartPoint.minus(scaledStartNormal),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: lineStartPoint.plus(scaledStartNormal),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: arrowTipBase.plus(scaledBaseNormal),\n            },\n            // Head\n            {\n                kind: PathCommandType.LineTo,\n                point: arrowTipBase.plus(lineNormal.times(arrowTipSize).plus(scaledBaseNormal)),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: endPoint.plus(toEnd.times(endSize)),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: arrowTipBase.plus(lineNormal.times(-arrowTipSize).minus(scaledBaseNormal)),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: arrowTipBase.minus(scaledBaseNormal),\n            },\n            // Round all points in the arrow (to remove unnecessary decimal places)\n        ]).mapPoints((point) => this.viewport.roundPoint(point));\n        const preview = new Stroke([\n            {\n                startPoint: path.startPoint,\n                commands: path.parts,\n                style: {\n                    fill: this.startPoint.color,\n                },\n            },\n        ]);\n        return preview;\n    }\n    build() {\n        return this.buildPreview();\n    }\n    preview(renderer) {\n        this.buildPreview().render(renderer);\n    }\n    addPoint(point) {\n        this.endPoint = point;\n    }\n}\n", "import { Path, PathCommandType } from '@js-draw/math';\nimport  { pathToRenderable }  from '../../rendering/RenderablePathSpec.mjs';\nimport  Stroke  from '../Stroke.mjs';\nimport  makeSnapToGridAutocorrect  from './autocorrect/makeSnapToGridAutocorrect.mjs';\n/**\n * Creates a stroke builder that generates filled lines.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makeLineBuilder = makeSnapToGridAutocorrect((initialPoint, viewport) => {\n    return new LineBuilder(initialPoint, viewport);\n});\nexport default class LineBuilder {\n    constructor(startPoint, viewport) {\n        this.startPoint = startPoint;\n        this.viewport = viewport;\n        this.endPoint = startPoint;\n    }\n    getBBox() {\n        const preview = this.buildPreview();\n        return preview.getBBox();\n    }\n    buildPreview() {\n        const startPoint = this.startPoint.pos;\n        const endPoint = this.endPoint.pos;\n        const toEnd = endPoint.minus(startPoint).normalized();\n        const startSize = this.startPoint.width / 2;\n        const endSize = this.endPoint.width / 2;\n        const lineNormal = toEnd.orthog();\n        const scaledStartNormal = lineNormal.times(startSize);\n        const scaledEndNormal = lineNormal.times(endSize);\n        const strokeStartPoint = startPoint.minus(scaledStartNormal);\n        const path = new Path(strokeStartPoint, [\n            {\n                kind: PathCommandType.LineTo,\n                point: startPoint.plus(scaledStartNormal),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: endPoint.plus(scaledEndNormal),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: endPoint.minus(scaledEndNormal),\n            },\n            {\n                kind: PathCommandType.LineTo,\n                point: startPoint.minus(scaledStartNormal),\n            },\n        ]).mapPoints((point) => this.viewport.roundPoint(point));\n        const preview = new Stroke([pathToRenderable(path, { fill: this.startPoint.color })]);\n        return preview;\n    }\n    build() {\n        return this.buildPreview();\n    }\n    preview(renderer) {\n        this.buildPreview().render(renderer);\n    }\n    addPoint(point) {\n        this.endPoint = point;\n    }\n}\n", "import { Mat33, Rect2, Path } from '@js-draw/math';\nimport  { pathToRenderable }  from '../../rendering/RenderablePathSpec.mjs';\nimport  Stroke  from '../Stroke.mjs';\nimport  makeSnapToGridAutocorrect  from './autocorrect/makeSnapToGridAutocorrect.mjs';\n/**\n * Creates filled rectangles with sharp corners.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makeFilledRectangleBuilder = makeSnapToGridAutocorrect((initialPoint, viewport) => {\n    return new RectangleBuilder(initialPoint, true, viewport);\n});\n/**\n * Creates outlined rectangles with sharp corners.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makeOutlinedRectangleBuilder = makeSnapToGridAutocorrect((initialPoint, viewport) => {\n    return new RectangleBuilder(initialPoint, false, viewport);\n});\nexport default class RectangleBuilder {\n    constructor(startPoint, filled, viewport) {\n        this.startPoint = startPoint;\n        this.filled = filled;\n        this.viewport = viewport;\n        // Initially, the start and end points are the same.\n        this.endPoint = startPoint;\n    }\n    getBBox() {\n        const preview = this.buildPreview();\n        return preview.getBBox();\n    }\n    buildPreview() {\n        const canvasAngle = this.viewport.getRotationAngle();\n        const rotationMat = Mat33.zRotation(-canvasAngle);\n        // Adjust startPoint and endPoint such that applying [rotationMat] to them\n        // brings them to this.startPoint and this.endPoint.\n        const startPoint = rotationMat.inverse().transformVec2(this.startPoint.pos);\n        const endPoint = rotationMat.inverse().transformVec2(this.endPoint.pos);\n        const rect = Rect2.fromCorners(startPoint, endPoint);\n        const path = Path.fromRect(rect, this.filled ? null : this.endPoint.width)\n            .transformedBy(\n        // Rotate the canvas rectangle so that its rotation matches the screen\n        rotationMat)\n            .mapPoints((point) => this.viewport.roundPoint(point));\n        const preview = new Stroke([\n            pathToRenderable(path, {\n                fill: this.endPoint.color,\n            }),\n        ]);\n        return preview;\n    }\n    build() {\n        return this.buildPreview();\n    }\n    preview(renderer) {\n        this.buildPreview().render(renderer);\n    }\n    addPoint(point) {\n        this.endPoint = point;\n    }\n}\n", "import { Vec2, Path, PathCommandType, Color4 } from '@js-draw/math';\nimport  { pathToRenderable }  from '../../rendering/RenderablePathSpec.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  Stroke  from '../Stroke.mjs';\nimport  makeSnapToGridAutocorrect  from './autocorrect/makeSnapToGridAutocorrect.mjs';\n/**\n * Creates a stroke builder that generates outlined circles.\n *\n * Example:\n * [[include:doc-pages/inline-examples/changing-pen-types.md]]\n */\nexport const makeOutlinedCircleBuilder = makeSnapToGridAutocorrect((initialPoint, viewport) => {\n    return new CircleBuilder(initialPoint, viewport);\n});\nclass CircleBuilder {\n    constructor(startPoint, viewport) {\n        this.startPoint = startPoint;\n        this.viewport = viewport;\n        // Initially, the start and end points are the same.\n        this.endPoint = startPoint;\n    }\n    getBBox() {\n        const preview = this.buildPreview();\n        return preview.getBBox();\n    }\n    buildPreview() {\n        const pathCommands = [];\n        const numDivisions = 6;\n        const stepSize = (Math.PI * 2) / numDivisions;\n        // Round the stroke width so that when exported it doesn't have unnecessary trailing decimals.\n        const strokeWidth = Viewport.roundPoint(this.endPoint.width, 5 / this.viewport.getScaleFactor());\n        const center = this.startPoint.pos.lerp(this.endPoint.pos, 0.5);\n        const startEndDelta = this.endPoint.pos.minus(center);\n        const radius = startEndDelta.length() - strokeWidth / 2;\n        const startPoint = center.plus(Vec2.of(radius, 0));\n        for (let t = stepSize; t <= Math.PI * 2; t += stepSize) {\n            const endPoint = Vec2.of(radius * Math.cos(t), -radius * Math.sin(t)).plus(center);\n            // controlPointRadiusScale is selected to make the circles appear circular and\n            // **does** depend on stepSize.\n            const controlPointRadiusScale = 1.141;\n            const controlPoint = Vec2.of(Math.cos(t - stepSize / 2), -Math.sin(t - stepSize / 2))\n                .times(radius * controlPointRadiusScale)\n                .plus(center);\n            pathCommands.push({\n                kind: PathCommandType.QuadraticBezierTo,\n                controlPoint,\n                endPoint,\n            });\n        }\n        pathCommands.push({\n            kind: PathCommandType.LineTo,\n            point: startPoint,\n        });\n        const path = new Path(startPoint, pathCommands).mapPoints((point) => this.viewport.roundPoint(point));\n        const preview = new Stroke([\n            pathToRenderable(path, {\n                fill: Color4.transparent,\n                stroke: {\n                    width: strokeWidth,\n                    color: this.endPoint.color,\n                },\n            }),\n        ]);\n        return preview;\n    }\n    build() {\n        return this.buildPreview();\n    }\n    preview(renderer) {\n        this.buildPreview().render(renderer);\n    }\n    addPoint(point) {\n        this.endPoint = point;\n    }\n}\n", "import { Color4 } from '@js-draw/math';\nimport  PipetteTool  from '../../../tools/PipetteTool.mjs';\nimport  { EditorEventType }  from '../../../types.mjs';\n// Returns [ color input, input container, callback to change the color value ].\nexport const makeColorInput = (editor, onColorChange) => {\n    const container = document.createElement('span');\n    const inputWrapper = document.createElement('span');\n    const colorInput = document.createElement('input');\n    colorInput.type = 'button';\n    colorInput.classList.add('coloris_input');\n    container.classList.add('color-input-container');\n    inputWrapper.classList.add('color-input-wrapper');\n    inputWrapper.appendChild(colorInput);\n    container.appendChild(inputWrapper);\n    const pipetteController = addPipetteTool(editor, container, (color) => {\n        colorInput.value = color.toHexString();\n        onInputEnd();\n        // Update the color preview, if it exists (may be managed by Coloris).\n        const parentElem = colorInput.parentElement;\n        if (parentElem && parentElem.classList.contains('clr-field')) {\n            parentElem.style.color = colorInput.value;\n        }\n    });\n    let currentColor;\n    const handleColorInput = () => {\n        currentColor = Color4.fromHex(colorInput.value);\n    };\n    // Only change the pen color when we finish sending input (this limits the number of\n    // editor events triggered and accessibility announcements).\n    const onInputEnd = () => {\n        handleColorInput();\n        if (currentColor) {\n            editor.announceForAccessibility(editor.localization.colorChangedAnnouncement(currentColor.toHexString()));\n            onColorChange(currentColor);\n            editor.notifier.dispatch(EditorEventType.ColorPickerColorSelected, {\n                kind: EditorEventType.ColorPickerColorSelected,\n                color: currentColor,\n            });\n        }\n    };\n    colorInput.oninput = handleColorInput;\n    let isOpen = false;\n    colorInput.addEventListener('open', () => {\n        isOpen = true;\n        editor.notifier.dispatch(EditorEventType.ColorPickerToggled, {\n            kind: EditorEventType.ColorPickerToggled,\n            open: true,\n        });\n        pipetteController.cancel();\n        container.classList.add('picker-open');\n        // Focus the Coloris color picker, if it exists.\n        // Don't focus the text input within the color picker, however,\n        // as this displays a keyboard on mobile devices.\n        const colorPickerElem = document.querySelector('#clr-picker #clr-hue-slider');\n        colorPickerElem?.focus();\n    });\n    const onClose = () => {\n        isOpen = false;\n        editor.notifier.dispatch(EditorEventType.ColorPickerToggled, {\n            kind: EditorEventType.ColorPickerToggled,\n            open: false,\n        });\n        onInputEnd();\n        // Restore focus to the input that opened the color picker\n        colorInput.focus();\n        container.classList.remove('picker-open');\n    };\n    colorInput.addEventListener('close', () => {\n        onClose();\n    });\n    const setColorInputValue = (color) => {\n        if (typeof color === 'object') {\n            color = color.toHexString();\n        }\n        colorInput.value = color;\n        // Fire all color event listeners. See\n        // https://github.com/mdbassit/Coloris#manually-updating-the-thumbnail\n        colorInput.dispatchEvent(new Event('input', { bubbles: true }));\n    };\n    return {\n        input: colorInput,\n        container,\n        setValue: setColorInputValue,\n        closePicker: () => {\n            if (isOpen) {\n                onInputEnd();\n            }\n        },\n        registerWithHelpTextDisplay: (helpDisplay) => {\n            helpDisplay.registerTextHelpForElement(inputWrapper, editor.localization.colorPickerToggleHelpText);\n            pipetteController.registerWithHelpTextDisplay(helpDisplay);\n        },\n    };\n};\nconst addPipetteTool = (editor, container, onColorChange) => {\n    const pipetteButton = document.createElement('button');\n    pipetteButton.classList.add('pipetteButton');\n    pipetteButton.title = editor.localization.pickColorFromScreen;\n    pipetteButton.setAttribute('alt', pipetteButton.title);\n    const pickColorLabel = document.createElement('span');\n    pickColorLabel.classList.add('pickColorInstructions');\n    pickColorLabel.innerText = editor.localization.clickToPickColorAnnouncement;\n    const updatePipetteButtonContent = (color) => {\n        pipetteButton.replaceChildren(editor.icons.makePipetteIcon(color), pickColorLabel);\n    };\n    updatePipetteButtonContent();\n    const pipetteTool = editor.toolController.getMatchingTools(PipetteTool)[0];\n    const endColorSelectMode = () => {\n        pipetteTool?.clearColorListener();\n        updatePipetteButtonContent();\n        pipetteButton.classList.remove('active');\n    };\n    const pipetteColorSelect = (color) => {\n        endColorSelectMode();\n        if (color) {\n            onColorChange(color);\n        }\n    };\n    const pipetteColorPreview = (color) => {\n        if (color) {\n            updatePipetteButtonContent(color);\n        }\n        else {\n            updatePipetteButtonContent();\n        }\n    };\n    pipetteButton.onclick = () => {\n        // If already picking, cancel it.\n        if (pipetteButton.classList.contains('active')) {\n            endColorSelectMode();\n            editor.announceForAccessibility(editor.localization.colorSelectionCanceledAnnouncement);\n            return;\n        }\n        pipetteTool?.setColorListener(pipetteColorPreview, pipetteColorSelect);\n        if (pipetteTool) {\n            pipetteButton.classList.add('active');\n            editor.announceForAccessibility(editor.localization.clickToPickColorAnnouncement);\n        }\n    };\n    container.appendChild(pipetteButton);\n    return {\n        // Cancel a pipette color selection if one is in progress.\n        cancel: () => {\n            endColorSelectMode();\n        },\n        registerWithHelpTextDisplay: (helpDisplay) => {\n            helpDisplay.registerTextHelpForElement(pipetteButton, editor.localization.colorPickerPipetteHelpText);\n        },\n    };\n};\nexport default makeColorInput;\n", "import  BaseWidget  from './BaseWidget.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nconst isToolWidgetFocused = () => {\n    const currentFocus = [...document.querySelectorAll('*:focus')];\n    return (currentFocus.length &&\n        currentFocus.some((elem) => elem.classList.contains(`${toolbarCSSPrefix}button`)));\n};\nexport default class BaseToolWidget extends BaseWidget {\n    constructor(editor, targetTool, id, localizationTable) {\n        super(editor, id, localizationTable);\n        this.targetTool = targetTool;\n        this.targetTool.enabledValue().onUpdateAndNow((enabled) => {\n            if (enabled) {\n                this.setSelected(true);\n                // Transfer focus to the current button, only if another toolbar button is\n                // focused.\n                // This prevents pressing \"space\" from triggering a different action when\n                // the current is selected.\n                if (isToolWidgetFocused()) {\n                    this.focus();\n                }\n            }\n            else {\n                this.setSelected(false);\n                this.setDropdownVisible(false);\n            }\n        });\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return !this.targetTool.canReceiveInputInReadOnlyEditor();\n    }\n    handleClick() {\n        if (this.hasDropdown) {\n            if (!this.targetTool.isEnabled()) {\n                this.targetTool.setEnabled(true);\n                this.activateDropdown();\n            }\n            else {\n                this.setDropdownVisible(!this.isDropdownVisible());\n            }\n        }\n        else {\n            this.targetTool.setEnabled(!this.targetTool.isEnabled());\n        }\n    }\n    onKeyPress(event) {\n        if (this.isSelected() && event.code === 'Space' && this.hasDropdown) {\n            this.handleClick();\n            return true;\n        }\n        return false;\n    }\n    addTo(parent) {\n        const result = super.addTo(parent);\n        this.setSelected(this.targetTool.isEnabled());\n        return result;\n    }\n}\n", "import  KeyboardShortcutManager  from '../../shortcuts/KeyboardShortcutManager.mjs';\n// Selection\nexport const resizeImageToSelectionKeyboardShortcut = 'jsdraw.toolbar.SelectionTool.resizeImageToSelection';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(resizeImageToSelectionKeyboardShortcut, ['ctrlOrMeta+r'], 'Resize image to selection');\n// Pen tool\nexport const selectStrokeTypeKeyboardShortcutIds = [1, 2, 3, 4, 5, 6, 7, 8, 9].map((id) => `jsdraw.toolbar.PenTool.select-pen-${id}`);\nfor (let i = 0; i < selectStrokeTypeKeyboardShortcutIds.length; i++) {\n    const id = selectStrokeTypeKeyboardShortcutIds[i];\n    KeyboardShortcutManager.registerDefaultKeyboardShortcut(id, [`CtrlOrMeta+Digit${i + 1}`], 'Select pen style ' + (i + 1));\n}\n// Save\nexport const saveKeyboardShortcut = 'jsdraw.toolbar.SaveActionWidget.save';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(saveKeyboardShortcut, ['ctrlOrMeta+KeyS'], 'Save');\n// Exit\nexport const exitKeyboardShortcut = 'jsdraw.toolbar.ExitActionWidget.exit';\nKeyboardShortcutManager.registerDefaultKeyboardShortcut(exitKeyboardShortcut, ['Alt+KeyQ'], 'Exit');\n", "import { toRoundedString } from '@js-draw/math';\nimport  { toolbarCSSPrefix }  from '../../constants.mjs';\nlet idCounter = 0;\nconst makeThicknessSlider = (context, onChange) => {\n    const container = document.createElement('div');\n    const thicknessLabel = document.createElement('label');\n    const thicknessInput = document.createElement('input');\n    container.classList.add(`${toolbarCSSPrefix}thicknessSliderContainer`);\n    // Give inputs IDs so we can label them with a <label for=...>Label text</label>\n    thicknessInput.id = `${toolbarCSSPrefix}thicknessInput${idCounter++}`;\n    thicknessLabel.innerText = context.localization.thicknessLabel;\n    thicknessLabel.setAttribute('for', thicknessInput.id);\n    // Use a logarithmic scale for thicknessInput (finer control over thinner strokewidths.)\n    const inverseThicknessInputFn = (t) => Math.log10(t);\n    const thicknessInputFn = (t) => 10 ** t;\n    thicknessInput.type = 'range';\n    thicknessInput.oninput = () => {\n        onChange(thicknessInputFn(parseFloat(thicknessInput.value)));\n    };\n    container.appendChild(thicknessLabel);\n    container.appendChild(thicknessInput);\n    const setBounds = (min, max) => {\n        const round = (value, roundUp) => {\n            const roundFn = roundUp ? Math.ceil : Math.floor;\n            return roundFn(value * 100) / 100;\n        };\n        const sliderMin = round(inverseThicknessInputFn(min), false);\n        const sliderMax = round(inverseThicknessInputFn(max), true);\n        thicknessInput.min = `${sliderMin}`;\n        thicknessInput.max = `${sliderMax}`;\n        thicknessInput.step = `${toRoundedString((sliderMax - sliderMin) / 20)}`;\n    };\n    setBounds(2, 262);\n    return {\n        container,\n        addTo: (parent) => {\n            parent.appendChild(container);\n        },\n        setBounds,\n        setValue: (thickness) => {\n            thicknessInput.value = inverseThicknessInputFn(thickness).toString();\n        },\n    };\n};\nexport default makeThicknessSlider;\n", "const stopPropagationOfScrollingWheelEvents = (scrollingContainer) => {\n    const scrollsAxis = (delta, clientSize, scrollOffset, scrollSize) => {\n        const hasScroll = clientSize !== scrollSize && delta !== 0;\n        const eventScrollsPastStart = scrollOffset + delta <= 0;\n        const scrollEnd = scrollOffset + clientSize;\n        const eventScrollsPastEnd = scrollEnd + delta > scrollSize;\n        return hasScroll && !eventScrollsPastStart && !eventScrollsPastEnd;\n    };\n    scrollingContainer.onwheel = (event) => {\n        const scrollsX = scrollsAxis(event.deltaX, scrollingContainer.clientWidth, scrollingContainer.scrollLeft, scrollingContainer.scrollWidth);\n        const scrollsY = scrollsAxis(event.deltaY, scrollingContainer.clientHeight, scrollingContainer.scrollTop, scrollingContainer.scrollHeight);\n        // Stop the editor from receiving the event if it will scroll the pen type selector\n        // instead.\n        if (scrollsX || scrollsY) {\n            event.stopPropagation();\n        }\n    };\n};\nexport default stopPropagationOfScrollingWheelEvents;\n", "import  { MutableReactiveValue }  from '../../../util/ReactiveValue.mjs';\nimport  stopPropagationOfScrollingWheelEvents  from '../../../util/stopPropagationOfScrollingWheelEvents.mjs';\nimport  addLongPressOrHoverCssClasses  from '../../../util/addLongPressOrHoverCssClasses.mjs';\nimport  { toolbarCSSPrefix }  from '../../constants.mjs';\nlet idCounter = 0;\n/**\n * Creates a widget that allows users to select one of serveral items from a list.\n *\n * `ChoiceIdType` should be `string`, a `number`, or an `enum` (or similar).\n *\n * If this input is set to an ID that is not in `choices`, no item is selected.\n */\nconst makeGridSelector = (\n// Text before the grid selector used as a label\nlabelText, defaultId, choices) => {\n    const outerContainer = document.createElement('div');\n    outerContainer.classList.add(`${toolbarCSSPrefix}grid-selector`);\n    const selectedValue = MutableReactiveValue.fromInitialValue(defaultId);\n    const menuContainer = document.createElement('div');\n    menuContainer.role = 'group';\n    menuContainer.id = `${toolbarCSSPrefix}-grid-select-id-${idCounter++}`;\n    stopPropagationOfScrollingWheelEvents(menuContainer);\n    const label = document.createElement('label');\n    label.textContent = labelText;\n    label.htmlFor = menuContainer.id;\n    outerContainer.appendChild(label);\n    // All buttons in a radiogroup need the same name attribute.\n    let radiogroupName = `${toolbarCSSPrefix}-grid-selector-${idCounter++}`;\n    const createChoiceButton = (record) => {\n        const buttonContainer = document.createElement('div');\n        buttonContainer.classList.add('choice-button');\n        const button = document.createElement('input');\n        button.type = 'radio';\n        button.id = `${toolbarCSSPrefix}-grid-select-button-${idCounter++}`;\n        // Some toolbars only show the label on hover. Having long press or hover\n        // CSS classes are helpful here.\n        addLongPressOrHoverCssClasses(buttonContainer);\n        // Clicking any part of labelContainer triggers the radio button.\n        const labelContainer = document.createElement('label');\n        const rebuildLabel = () => {\n            labelContainer.setAttribute('title', record.title);\n            const labelText = document.createElement('span');\n            labelText.classList.add('button-label-text');\n            const icon = record.makeIcon();\n            icon.classList.add('icon');\n            // The title of the record\n            labelText.innerText = record.title;\n            labelContainer.htmlFor = button.id;\n            labelContainer.replaceChildren(icon, labelText);\n        };\n        rebuildLabel();\n        // Mark the button as belonging to the current group (causes\n        // other buttons in the same group to automatically uncheck\n        // when this button is checked).\n        const updateButtonRadiogroupName = () => {\n            button.name = radiogroupName;\n        };\n        updateButtonRadiogroupName();\n        const updateButtonCSS = () => {\n            if (button.checked) {\n                buttonContainer.classList.add('checked');\n            }\n            else {\n                buttonContainer.classList.remove('checked');\n            }\n        };\n        button.oninput = () => {\n            // Setting the selected value fires an event that causes the value\n            // of this button to be set.\n            if (button.checked) {\n                selectedValue.set(record.id);\n            }\n            updateButtonCSS();\n        };\n        button.onfocus = () => {\n            if (buttonContainer.querySelector(':focus-visible')) {\n                buttonContainer.classList.add('focus-visible');\n            }\n        };\n        button.onblur = () => {\n            buttonContainer.classList.remove('focus-visible');\n        };\n        // Prevent the right-click menu from being shown on long-press\n        // (important for some toolbars that use long-press gestures to\n        // show grid selector labels).\n        buttonContainer.oncontextmenu = (event) => {\n            event.preventDefault();\n        };\n        buttonContainer.replaceChildren(button, labelContainer);\n        menuContainer.appendChild(buttonContainer);\n        // Set whether the current button is checked\n        const setChecked = (checked) => {\n            button.checked = checked;\n            updateButtonCSS();\n        };\n        setChecked(false);\n        // Updates the factory's icon based on the current style of the tool.\n        const updateIcon = () => {\n            rebuildLabel();\n        };\n        return {\n            choiceRecord: record,\n            setChecked,\n            updateIcon,\n            updateButtonRadiogroupName,\n        };\n    };\n    const buttons = [];\n    for (const choice of choices) {\n        buttons.push(createChoiceButton(choice));\n    }\n    // invariant: buttons.length = choices.length\n    // However, it is still possible that selectedValue does not correspond\n    // to a choice in `choices`. This is acceptable.\n    outerContainer.appendChild(menuContainer);\n    selectedValue.onUpdateAndNow((choiceId) => {\n        for (let i = 0; i < buttons.length; i++) {\n            buttons[i].setChecked(buttons[i].choiceRecord.id === choiceId);\n        }\n    });\n    const result = {\n        value: selectedValue,\n        _radiogroupName: radiogroupName,\n        linkWith: (other) => {\n            result._radiogroupName = other._radiogroupName;\n            radiogroupName = other._radiogroupName;\n            for (const button of buttons) {\n                button.updateButtonRadiogroupName();\n            }\n        },\n        updateIcons: () => {\n            buttons.forEach((button) => button.updateIcon());\n        },\n        getRootElement() {\n            return outerContainer;\n        },\n        addTo: (parent) => {\n            parent.appendChild(outerContainer);\n        },\n    };\n    return result;\n};\nexport default makeGridSelector;\n", "import  { makeArrowBuilder }  from '../../components/builders/ArrowBuilder.mjs';\nimport  { makeFreehandLineBuilder }  from '../../components/builders/FreehandLineBuilder.mjs';\nimport  { makePressureSensitiveFreehandLineBuilder }  from '../../components/builders/PressureSensitiveFreehandLineBuilder.mjs';\nimport  { makeLineBuilder }  from '../../components/builders/LineBuilder.mjs';\nimport  { makeFilledRectangleBuilder, makeOutlinedRectangleBuilder, }  from '../../components/builders/RectangleBuilder.mjs';\nimport  { makeOutlinedCircleBuilder }  from '../../components/builders/CircleBuilder.mjs';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  makeColorInput  from './components/makeColorInput.mjs';\nimport  BaseToolWidget  from './BaseToolWidget.mjs';\nimport { Color4 } from '@js-draw/math';\nimport  { selectStrokeTypeKeyboardShortcutIds }  from './keybindings.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  makeThicknessSlider  from './components/makeThicknessSlider.mjs';\nimport  makeGridSelector  from './components/makeGridSelector.mjs';\nimport  { makePolylineBuilder }  from '../../components/builders/PolylineBuilder.mjs';\n/**\n * This toolbar widget allows a user to control a single {@link Pen} tool.\n *\n * See also {@link AbstractToolbar.addDefaultToolWidgets}.\n */\nclass PenToolWidget extends BaseToolWidget {\n    constructor(editor, tool, localization) {\n        super(editor, tool, 'pen', localization);\n        this.tool = tool;\n        this.updateInputs = () => { };\n        // Pen types that correspond to\n        this.shapelikeIDs = ['pressure-sensitive-pen', 'freehand-pen'];\n        // Additional client-specified pens.\n        const additionalPens = editor.getCurrentSettings().pens?.additionalPenTypes ?? [];\n        const filterPens = editor.getCurrentSettings().pens?.filterPenTypes ?? (() => true);\n        // Default pen types\n        this.penTypes = [\n            // Non-shape pens\n            {\n                name: this.localizationTable.flatTipPen,\n                id: 'pressure-sensitive-pen',\n                factory: makePressureSensitiveFreehandLineBuilder,\n            },\n            {\n                name: this.localizationTable.roundedTipPen,\n                id: 'freehand-pen',\n                factory: makeFreehandLineBuilder,\n            },\n            {\n                name: this.localizationTable.roundedTipPen2,\n                id: 'polyline-pen',\n                factory: makePolylineBuilder,\n            },\n            ...additionalPens.filter((pen) => !pen.isShapeBuilder),\n            // Shape pens\n            {\n                name: this.localizationTable.arrowPen,\n                id: 'arrow',\n                isShapeBuilder: true,\n                factory: makeArrowBuilder,\n            },\n            {\n                name: this.localizationTable.linePen,\n                id: 'line',\n                isShapeBuilder: true,\n                factory: makeLineBuilder,\n            },\n            {\n                name: this.localizationTable.filledRectanglePen,\n                id: 'filled-rectangle',\n                isShapeBuilder: true,\n                factory: makeFilledRectangleBuilder,\n            },\n            {\n                name: this.localizationTable.outlinedRectanglePen,\n                id: 'outlined-rectangle',\n                isShapeBuilder: true,\n                factory: makeOutlinedRectangleBuilder,\n            },\n            {\n                name: this.localizationTable.outlinedCirclePen,\n                id: 'outlined-circle',\n                isShapeBuilder: true,\n                factory: makeOutlinedCircleBuilder,\n            },\n            ...additionalPens.filter((pen) => pen.isShapeBuilder),\n        ].filter(filterPens);\n        this.editor.notifier.on(EditorEventType.ToolUpdated, (toolEvt) => {\n            if (toolEvt.kind !== EditorEventType.ToolUpdated) {\n                throw new Error('Invalid event type!');\n            }\n            // The button icon may depend on tool properties.\n            if (toolEvt.tool === this.tool) {\n                this.updateIcon();\n                this.updateInputs();\n            }\n        });\n    }\n    getTitle() {\n        return this.targetTool.description;\n    }\n    // Return the index of this tool's stroke factory in the list of\n    // all stroke factories.\n    //\n    // Returns -1 if the stroke factory is not in the list of all stroke factories.\n    getCurrentPenTypeIdx() {\n        const currentFactory = this.tool.getStrokeFactory();\n        for (let i = 0; i < this.penTypes.length; i++) {\n            if (this.penTypes[i].factory === currentFactory) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    getCurrentPenType() {\n        for (const penType of this.penTypes) {\n            if (penType.factory === this.tool.getStrokeFactory()) {\n                return penType;\n            }\n        }\n        return null;\n    }\n    createIconForRecord(record) {\n        const style = {\n            ...this.tool.getStyleValue().get(),\n        };\n        if (record?.factory) {\n            style.factory = record.factory;\n        }\n        const strokeFactory = record?.factory;\n        if (!strokeFactory ||\n            strokeFactory === makeFreehandLineBuilder ||\n            strokeFactory === makePressureSensitiveFreehandLineBuilder ||\n            strokeFactory === makePolylineBuilder) {\n            return this.editor.icons.makePenIcon(style);\n        }\n        else {\n            return this.editor.icons.makeIconFromFactory(style);\n        }\n    }\n    createIcon() {\n        return this.createIconForRecord(this.getCurrentPenType());\n    }\n    // Creates a widget that allows selecting different pen types\n    createPenTypeSelector(helpOverlay) {\n        const allChoices = this.penTypes.map((penType, index) => {\n            return {\n                id: index,\n                makeIcon: () => this.createIconForRecord(penType),\n                title: penType.name,\n                isShapeBuilder: penType.isShapeBuilder ?? false,\n            };\n        });\n        const penItems = allChoices.filter((choice) => !choice.isShapeBuilder);\n        const penSelector = makeGridSelector(this.localizationTable.selectPenType, this.getCurrentPenTypeIdx(), penItems);\n        const shapeItems = allChoices.filter((choice) => choice.isShapeBuilder);\n        const shapeSelector = makeGridSelector(this.localizationTable.selectShape, this.getCurrentPenTypeIdx(), shapeItems);\n        const onSelectorUpdate = (newPenTypeIndex) => {\n            this.tool.setStrokeFactory(this.penTypes[newPenTypeIndex].factory);\n        };\n        penSelector.value.onUpdate(onSelectorUpdate);\n        shapeSelector.value.onUpdate(onSelectorUpdate);\n        helpOverlay?.registerTextHelpForElements([penSelector.getRootElement(), shapeSelector.getRootElement()], this.localizationTable.penDropdown__penTypeHelpText);\n        return {\n            setValue: (penTypeIndex) => {\n                penSelector.value.set(penTypeIndex);\n                shapeSelector.value.set(penTypeIndex);\n            },\n            updateIcons: () => {\n                penSelector.updateIcons();\n                shapeSelector.updateIcons();\n            },\n            addTo: (parent) => {\n                if (penItems.length) {\n                    penSelector.addTo(parent);\n                }\n                if (shapeItems.length) {\n                    shapeSelector.addTo(parent);\n                }\n            },\n        };\n    }\n    createStrokeCorrectionOptions(helpOverlay) {\n        const container = document.createElement('div');\n        container.classList.add('action-button-row', `${toolbarCSSPrefix}-pen-tool-toggle-buttons`);\n        const addToggleButton = (labelText, icon) => {\n            const button = document.createElement('button');\n            button.classList.add(`${toolbarCSSPrefix}-toggle-button`);\n            const iconElement = icon.cloneNode(true);\n            iconElement.classList.add('icon');\n            const label = document.createElement('span');\n            label.innerText = labelText;\n            button.replaceChildren(iconElement, label);\n            button.setAttribute('role', 'switch');\n            container.appendChild(button);\n            let checked = false;\n            let onChangeListener = (_checked) => { };\n            const result = {\n                setChecked(newChecked) {\n                    checked = newChecked;\n                    button.setAttribute('aria-checked', `${checked}`);\n                    onChangeListener(checked);\n                },\n                setOnInputListener(listener) {\n                    onChangeListener = listener;\n                },\n                addHelpText(text) {\n                    helpOverlay?.registerTextHelpForElement(button, text);\n                },\n            };\n            button.onclick = () => {\n                result.setChecked(!checked);\n            };\n            return result;\n        };\n        const stabilizationOption = addToggleButton(this.localizationTable.inputStabilization, this.editor.icons.makeStrokeSmoothingIcon());\n        stabilizationOption.setOnInputListener((enabled) => {\n            this.tool.setHasStabilization(enabled);\n        });\n        const autocorrectOption = addToggleButton(this.localizationTable.strokeAutocorrect, this.editor.icons.makeShapeAutocorrectIcon());\n        autocorrectOption.setOnInputListener((enabled) => {\n            this.tool.setStrokeAutocorrectEnabled(enabled);\n        });\n        const pressureSensitivityOption = addToggleButton(this.localizationTable.pressureSensitivity, this.editor.icons.makePressureSensitivityIcon());\n        pressureSensitivityOption.setOnInputListener((enabled) => {\n            this.tool.setPressureSensitivityEnabled(enabled);\n        });\n        // Help text\n        autocorrectOption.addHelpText(this.localizationTable.penDropdown__autocorrectHelpText);\n        stabilizationOption.addHelpText(this.localizationTable.penDropdown__stabilizationHelpText);\n        pressureSensitivityOption.addHelpText(this.localizationTable.penDropdown__pressureSensitivityHelpText);\n        return {\n            update: () => {\n                stabilizationOption.setChecked(!!this.tool.getInputMapper());\n                autocorrectOption.setChecked(this.tool.getStrokeAutocorrectionEnabled());\n                pressureSensitivityOption.setChecked(this.tool.getPressureSensitivityEnabled());\n            },\n            addTo: (parent) => {\n                parent.appendChild(container);\n            },\n        };\n    }\n    getHelpText() {\n        return this.localizationTable.penDropdown__baseHelpText;\n    }\n    fillDropdown(dropdown, helpDisplay) {\n        const container = document.createElement('div');\n        container.classList.add(`${toolbarCSSPrefix}spacedList`, `${toolbarCSSPrefix}nonbutton-controls-main-list`);\n        // Thickness: Value of the input is squared to allow for finer control/larger values.\n        const { container: thicknessRow, setValue: setThickness } = makeThicknessSlider(this.editor, (thickness) => {\n            this.tool.setThickness(thickness);\n        });\n        const colorRow = document.createElement('div');\n        const colorLabel = document.createElement('label');\n        const colorInputControl = makeColorInput(this.editor, (color) => {\n            this.tool.setColor(color);\n        });\n        const { input: colorInput, container: colorInputContainer } = colorInputControl;\n        colorInput.id = `${toolbarCSSPrefix}colorInput${PenToolWidget.idCounter++}`;\n        colorLabel.innerText = this.localizationTable.colorLabel;\n        colorLabel.setAttribute('for', colorInput.id);\n        colorRow.appendChild(colorLabel);\n        colorRow.appendChild(colorInputContainer);\n        // Autocorrect and stabilization options\n        const toggleButtonRow = this.createStrokeCorrectionOptions(helpDisplay);\n        const penTypeSelect = this.createPenTypeSelector(helpDisplay);\n        // Add help text for color and thickness last, as these are likely to be\n        // features users are least interested in.\n        helpDisplay?.registerTextHelpForElement(colorRow, this.localizationTable.penDropdown__colorHelpText);\n        if (helpDisplay) {\n            colorInputControl.registerWithHelpTextDisplay(helpDisplay);\n        }\n        helpDisplay?.registerTextHelpForElement(thicknessRow, this.localizationTable.penDropdown__thicknessHelpText);\n        this.updateInputs = () => {\n            colorInputControl.setValue(this.tool.getColor());\n            setThickness(this.tool.getThickness());\n            penTypeSelect.updateIcons();\n            // Update the selected stroke factory.\n            penTypeSelect.setValue(this.getCurrentPenTypeIdx());\n            toggleButtonRow.update();\n        };\n        this.updateInputs();\n        container.replaceChildren(colorRow, thicknessRow);\n        penTypeSelect.addTo(container);\n        dropdown.replaceChildren(container);\n        // Add the toggle button row *outside* of the main content (use different\n        // spacing with respect to the sides of the container).\n        toggleButtonRow.addTo(dropdown);\n        return true;\n    }\n    onKeyPress(event) {\n        if (!this.isSelected()) {\n            return false;\n        }\n        for (let i = 0; i < selectStrokeTypeKeyboardShortcutIds.length; i++) {\n            const shortcut = selectStrokeTypeKeyboardShortcutIds[i];\n            if (this.editor.shortcuts.matchesShortcut(shortcut, event)) {\n                const penTypeIdx = i;\n                if (penTypeIdx < this.penTypes.length) {\n                    this.tool.setStrokeFactory(this.penTypes[penTypeIdx].factory);\n                    return true;\n                }\n            }\n        }\n        // Run any default actions registered by the parent class.\n        if (super.onKeyPress(event)) {\n            return true;\n        }\n        return false;\n    }\n    serializeState() {\n        return {\n            ...super.serializeState(),\n            color: this.tool.getColor().toHexString(),\n            thickness: this.tool.getThickness(),\n            strokeFactoryId: this.getCurrentPenType()?.id,\n            inputStabilization: !!this.tool.getInputMapper(),\n            strokeAutocorrect: this.tool.getStrokeAutocorrectionEnabled(),\n            pressureSensitivity: this.tool.getPressureSensitivityEnabled(),\n        };\n    }\n    deserializeFrom(state) {\n        super.deserializeFrom(state);\n        const verifyPropertyType = (propertyName, expectedType) => {\n            const actualType = typeof state[propertyName];\n            if (actualType !== expectedType) {\n                throw new Error(`Deserializing property ${propertyName}: Invalid type. Expected ${expectedType},` +\n                    ` was ${actualType}.`);\n            }\n        };\n        if (state.color) {\n            verifyPropertyType('color', 'string');\n            this.tool.setColor(Color4.fromHex(state.color));\n        }\n        if (state.thickness) {\n            verifyPropertyType('thickness', 'number');\n            this.tool.setThickness(state.thickness);\n        }\n        if (state.strokeFactoryId) {\n            verifyPropertyType('strokeFactoryId', 'string');\n            const factoryId = state.strokeFactoryId;\n            for (const penType of this.penTypes) {\n                if (factoryId === penType.id) {\n                    this.tool.setStrokeFactory(penType.factory);\n                    break;\n                }\n            }\n        }\n        if (state.inputStabilization !== undefined) {\n            this.tool.setHasStabilization(!!state.inputStabilization);\n        }\n        if (state.strokeAutocorrect !== undefined) {\n            this.tool.setStrokeAutocorrectEnabled(!!state.strokeAutocorrect);\n        }\n        if (state.pressureSensitivity !== undefined) {\n            this.tool.setPressureSensitivityEnabled(!!state.pressureSensitivity);\n        }\n    }\n}\n// A counter variable that ensures different HTML elements are given unique names/ids.\nPenToolWidget.idCounter = 0;\nexport default PenToolWidget;\n", "import  { EraserMode }  from '../../tools/Eraser.mjs';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  BaseToolWidget  from './BaseToolWidget.mjs';\nimport  makeThicknessSlider  from './components/makeThicknessSlider.mjs';\nclass EraserToolWidget extends BaseToolWidget {\n    constructor(editor, tool, localizationTable) {\n        super(editor, tool, 'eraser-tool-widget', localizationTable);\n        this.tool = tool;\n        this.updateInputs = () => { };\n        this.editor.notifier.on(EditorEventType.ToolUpdated, (toolEvt) => {\n            if (toolEvt.kind === EditorEventType.ToolUpdated && toolEvt.tool === this.tool) {\n                this.updateInputs();\n                this.updateIcon();\n            }\n        });\n    }\n    getHelpText() {\n        return this.localizationTable.eraserDropdown__baseHelpText;\n    }\n    getTitle() {\n        return this.localizationTable.eraser;\n    }\n    makeIconForType(mode) {\n        return this.editor.icons.makeEraserIcon(this.tool.getThickness(), mode);\n    }\n    createIcon() {\n        return this.makeIconForType(this.tool.getModeValue().get());\n    }\n    makeEraserTypeSelector(helpDisplay) {\n        const container = document.createElement('div');\n        const labelElement = document.createElement('label');\n        const checkboxElement = document.createElement('input');\n        checkboxElement.id = `${toolbarCSSPrefix}eraserToolWidget-${EraserToolWidget.idCounter++}`;\n        labelElement.htmlFor = checkboxElement.id;\n        labelElement.innerText = this.localizationTable.fullStrokeEraser;\n        checkboxElement.type = 'checkbox';\n        checkboxElement.oninput = () => {\n            this.tool\n                .getModeValue()\n                .set(checkboxElement.checked ? EraserMode.FullStroke : EraserMode.PartialStroke);\n        };\n        const updateValue = () => {\n            checkboxElement.checked = this.tool.getModeValue().get() === EraserMode.FullStroke;\n        };\n        container.replaceChildren(labelElement, checkboxElement);\n        helpDisplay?.registerTextHelpForElement(container, this.localizationTable.eraserDropdown__fullStrokeEraserHelpText);\n        return {\n            addTo: (parent) => {\n                parent.appendChild(container);\n            },\n            updateValue,\n        };\n    }\n    fillDropdown(dropdown, helpDisplay) {\n        const container = document.createElement('div');\n        container.classList.add(`${toolbarCSSPrefix}spacedList`, `${toolbarCSSPrefix}nonbutton-controls-main-list`);\n        const thicknessSlider = makeThicknessSlider(this.editor, (thickness) => {\n            this.tool.setThickness(thickness);\n        });\n        thicknessSlider.setBounds(10, 55);\n        helpDisplay?.registerTextHelpForElement(thicknessSlider.container, this.localizationTable.eraserDropdown__thicknessHelpText);\n        const modeSelector = this.makeEraserTypeSelector(helpDisplay);\n        this.updateInputs = () => {\n            thicknessSlider.setValue(this.tool.getThickness());\n            modeSelector.updateValue();\n        };\n        this.updateInputs();\n        container.replaceChildren(thicknessSlider.container);\n        modeSelector.addTo(container);\n        dropdown.replaceChildren(container);\n        return true;\n    }\n    serializeState() {\n        return {\n            ...super.serializeState(),\n            thickness: this.tool.getThickness(),\n            mode: this.tool.getModeValue().get(),\n        };\n    }\n    deserializeFrom(state) {\n        super.deserializeFrom(state);\n        if (state.thickness) {\n            const parsedThickness = parseFloat(state.thickness);\n            if (typeof parsedThickness !== 'number' || !isFinite(parsedThickness)) {\n                throw new Error(`Deserializing property ${parsedThickness} is not a number or is not finite.`);\n            }\n            this.tool.setThickness(parsedThickness);\n        }\n        if (state.mode) {\n            const mode = state.mode;\n            if (Object.values(EraserMode).includes(mode)) {\n                this.tool.getModeValue().set(mode);\n            }\n        }\n    }\n}\nEraserToolWidget.idCounter = 0;\nexport default EraserToolWidget;\n", "/**\n * Creates a separator element that renders a line and, optionally, a header.\n */\nconst makeSeparator = (header = '') => {\n    const container = document.createElement('div');\n    container.classList.add('tool-dropdown-separator');\n    container.innerText = header;\n    return {\n        addTo: (parent) => {\n            parent.appendChild(container);\n        },\n    };\n};\nexport default makeSeparator;\n", "import  addLongPressOrHoverCssClasses  from '../../../util/addLongPressOrHoverCssClasses.mjs';\n/**\n * Creates HTML `button` elements from `buttonSpecs` and displays them in a\n * grid with `columnCount` columns.\n */\nconst makeButtonGrid = (buttonSpecs, columnCount) => {\n    const container = document.createElement('div');\n    container.classList.add('toolbar-button-grid');\n    container.style.setProperty('--column-count', `${columnCount}`);\n    const makeButton = (buttonSpec) => {\n        const buttonElement = document.createElement('button');\n        buttonElement.classList.add('button');\n        const iconElement = buttonSpec.icon();\n        iconElement.classList.add('icon');\n        const labelElement = document.createElement('label');\n        labelElement.textContent = buttonSpec.label;\n        labelElement.classList.add('button-label-text');\n        buttonElement.onclick = buttonSpec.onClick;\n        if (buttonSpec.enabled) {\n            buttonSpec.enabled.onUpdateAndNow((enabled) => {\n                buttonElement.disabled = !enabled;\n            });\n        }\n        buttonElement.replaceChildren(iconElement, labelElement);\n        container.appendChild(buttonElement);\n        addLongPressOrHoverCssClasses(buttonElement);\n        buttonSpec.onCreated?.(buttonElement);\n        return buttonElement;\n    };\n    buttonSpecs.map(makeButton);\n    return {\n        container,\n    };\n};\nexport default makeButtonGrid;\n", "import { Color4 } from '@js-draw/math';\nimport  { isRestylableComponent }  from '../../components/RestylableComponent.mjs';\nimport  uniteCommands  from '../../commands/uniteCommands.mjs';\nimport  { SelectionMode }  from '../../tools/SelectionTool/SelectionTool.mjs';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  makeColorInput  from './components/makeColorInput.mjs';\nimport  BaseToolWidget  from './BaseToolWidget.mjs';\nimport  { resizeImageToSelectionKeyboardShortcut }  from './keybindings.mjs';\nimport  makeSeparator  from './components/makeSeparator.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  BaseWidget  from './BaseWidget.mjs';\nimport  makeButtonGrid  from './components/makeButtonGrid.mjs';\nimport  { MutableReactiveValue }  from '../../util/ReactiveValue.mjs';\nconst makeFormatMenu = (editor, selectionTool, localizationTable) => {\n    const container = document.createElement('div');\n    container.classList.add('selection-format-menu', `${toolbarCSSPrefix}spacedList`, `${toolbarCSSPrefix}indentedList`);\n    const colorRow = document.createElement('div');\n    const colorLabel = document.createElement('label');\n    const colorInputControl = makeColorInput(editor, (color) => {\n        const selection = selectionTool.getSelection();\n        if (selection) {\n            const updateStyleCommands = [];\n            for (const elem of selection.getSelectedObjects()) {\n                if (isRestylableComponent(elem)) {\n                    updateStyleCommands.push(elem.updateStyle({ color }));\n                }\n            }\n            const unitedCommand = uniteCommands(updateStyleCommands);\n            editor.dispatch(unitedCommand);\n        }\n    });\n    const { input: colorInput, container: colorInputContainer } = colorInputControl;\n    colorLabel.innerText = localizationTable.colorLabel;\n    const update = () => {\n        const selection = selectionTool.getSelection();\n        if (selection && selection.getSelectedItemCount() > 0) {\n            colorInput.disabled = false;\n            container.classList.remove('disabled');\n            const colors = [];\n            for (const elem of selection.getSelectedObjects()) {\n                if (isRestylableComponent(elem)) {\n                    const color = elem.getStyle().color;\n                    if (color) {\n                        colors.push(color);\n                    }\n                }\n            }\n            colorInputControl.setValue(Color4.average(colors));\n        }\n        else {\n            colorInput.disabled = true;\n            container.classList.add('disabled');\n            colorInputControl.setValue(Color4.transparent);\n        }\n    };\n    colorRow.replaceChildren(colorLabel, colorInputContainer);\n    container.replaceChildren(colorRow);\n    return {\n        addTo: (parent) => {\n            parent.appendChild(container);\n        },\n        update,\n        registerHelpText: (helpDisplay) => {\n            helpDisplay.registerTextHelpForElement(colorRow, localizationTable.selectionDropdown__changeColorHelpText);\n            colorInputControl.registerWithHelpTextDisplay(helpDisplay);\n        },\n    };\n};\nclass LassoSelectToggle extends BaseWidget {\n    constructor(editor, tool, localizationTable) {\n        super(editor, 'selection-mode-toggle', localizationTable);\n        this.tool = tool;\n        editor.notifier.on(EditorEventType.ToolUpdated, (toolEvt) => {\n            if (toolEvt.kind === EditorEventType.ToolUpdated && toolEvt.tool === tool) {\n                this.setSelected(tool.modeValue.get() === SelectionMode.Lasso);\n            }\n        });\n        this.setSelected(false);\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return false;\n    }\n    setModeFlag(enabled) {\n        this.tool.modeValue.set(enabled ? SelectionMode.Lasso : SelectionMode.Rectangle);\n    }\n    handleClick() {\n        this.setModeFlag(!this.isSelected());\n    }\n    getTitle() {\n        return this.localizationTable.selectionTool__lassoSelect;\n    }\n    createIcon() {\n        return this.editor.icons.makeSelectionIcon(SelectionMode.Lasso);\n    }\n    fillDropdown(_dropdown) {\n        return false;\n    }\n    getHelpText() {\n        return this.localizationTable.selectionTool__lassoSelect__help;\n    }\n}\nexport default class SelectionToolWidget extends BaseToolWidget {\n    constructor(editor, tool, localization) {\n        super(editor, tool, 'selection-tool-widget', localization);\n        this.tool = tool;\n        this.updateFormatMenu = () => { };\n        this.addSubWidget(new LassoSelectToggle(editor, tool, this.localizationTable));\n        const hasSelection = () => {\n            const selection = this.tool.getSelection();\n            return !!selection && selection.getSelectedItemCount() > 0;\n        };\n        this.hasSelectionValue = MutableReactiveValue.fromInitialValue(hasSelection());\n        // Enable/disable actions based on whether items are selected\n        this.editor.notifier.on(EditorEventType.ToolUpdated, (toolEvt) => {\n            if (toolEvt.kind !== EditorEventType.ToolUpdated) {\n                throw new Error('Invalid event type!');\n            }\n            if (toolEvt.tool === this.tool) {\n                this.hasSelectionValue.set(hasSelection());\n                this.updateFormatMenu();\n            }\n        });\n        tool.modeValue.onUpdate(() => {\n            this.updateIcon();\n        });\n    }\n    resizeImageToSelection() {\n        const selection = this.tool.getSelection();\n        if (selection) {\n            this.editor.dispatch(this.editor.setImportExportRect(selection.region));\n        }\n    }\n    onKeyPress(event) {\n        const shortcuts = this.editor.shortcuts;\n        // Resize image to selection:\n        // Other keys are handled directly by the selection tool.\n        if (shortcuts.matchesShortcut(resizeImageToSelectionKeyboardShortcut, event)) {\n            this.resizeImageToSelection();\n            return true;\n        }\n        // If we didn't handle the event, allow the superclass to handle it.\n        if (super.onKeyPress(event)) {\n            return true;\n        }\n        return false;\n    }\n    getTitle() {\n        return this.localizationTable.select;\n    }\n    createIcon() {\n        return this.editor.icons.makeSelectionIcon(this.tool.modeValue.get());\n    }\n    getHelpText() {\n        return this.localizationTable.selectionDropdown__baseHelpText;\n    }\n    createSelectionActions(helpDisplay) {\n        const icons = this.editor.icons;\n        const grid = makeButtonGrid([\n            {\n                icon: () => icons.makeDeleteSelectionIcon(),\n                label: this.localizationTable.deleteSelection,\n                onCreated: (button) => {\n                    helpDisplay?.registerTextHelpForElement(button, this.localizationTable.selectionDropdown__deleteHelpText);\n                },\n                onClick: () => {\n                    const selection = this.tool.getSelection();\n                    this.editor.dispatch(selection.deleteSelectedObjects());\n                    this.tool.clearSelection();\n                },\n                enabled: this.hasSelectionValue,\n            },\n            {\n                icon: () => icons.makeDuplicateSelectionIcon(),\n                label: this.localizationTable.duplicateSelection,\n                onCreated: (button) => {\n                    helpDisplay?.registerTextHelpForElement(button, this.localizationTable.selectionDropdown__duplicateHelpText);\n                },\n                onClick: async () => {\n                    const selection = this.tool.getSelection();\n                    const command = await selection?.duplicateSelectedObjects();\n                    if (command) {\n                        this.editor.dispatch(command);\n                    }\n                },\n                enabled: this.hasSelectionValue,\n            },\n            {\n                icon: () => icons.makeResizeImageToSelectionIcon(),\n                label: this.localizationTable.resizeImageToSelection,\n                onCreated: (button) => {\n                    helpDisplay?.registerTextHelpForElement(button, this.localizationTable.selectionDropdown__resizeToHelpText);\n                },\n                onClick: () => {\n                    this.resizeImageToSelection();\n                },\n                enabled: this.hasSelectionValue,\n            },\n        ], 3);\n        return { container: grid.container };\n    }\n    fillDropdown(dropdown, helpDisplay) {\n        super.fillDropdown(dropdown, helpDisplay);\n        const controlsContainer = document.createElement('div');\n        controlsContainer.classList.add(`${toolbarCSSPrefix}nonbutton-controls-main-list`);\n        dropdown.appendChild(controlsContainer);\n        // Actions (duplicate, delete, etc.)\n        makeSeparator().addTo(controlsContainer);\n        const actions = this.createSelectionActions(helpDisplay);\n        controlsContainer.appendChild(actions.container);\n        // Formatting\n        makeSeparator(this.localizationTable.reformatSelection).addTo(controlsContainer);\n        const formatMenu = makeFormatMenu(this.editor, this.tool, this.localizationTable);\n        formatMenu.addTo(controlsContainer);\n        this.updateFormatMenu = () => formatMenu.update();\n        if (helpDisplay) {\n            formatMenu.registerHelpText(helpDisplay);\n        }\n        formatMenu.update();\n        return true;\n    }\n    serializeState() {\n        return {\n            ...super.serializeState(),\n            selectionMode: this.tool.modeValue.get(),\n        };\n    }\n    deserializeFrom(state) {\n        super.deserializeFrom(state);\n        const isValidSelectionMode = Object.values(SelectionMode).includes(state.selectionMode);\n        if (isValidSelectionMode) {\n            this.tool.modeValue.set(state.selectionMode);\n        }\n    }\n}\n", "import { Color4 } from '@js-draw/math';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  makeColorInput  from './components/makeColorInput.mjs';\nimport  BaseToolWidget  from './BaseToolWidget.mjs';\nclass TextToolWidget extends BaseToolWidget {\n    constructor(editor, tool, localization) {\n        super(editor, tool, 'text-tool-widget', localization);\n        this.tool = tool;\n        this.updateDropdownInputs = null;\n        editor.notifier.on(EditorEventType.ToolUpdated, (evt) => {\n            if (evt.kind === EditorEventType.ToolUpdated && evt.tool === tool) {\n                this.updateIcon();\n                this.updateDropdownInputs?.();\n            }\n        });\n    }\n    getTitle() {\n        return this.targetTool.description;\n    }\n    createIcon() {\n        const textStyle = this.tool.getTextStyle();\n        return this.editor.icons.makeTextIcon(textStyle);\n    }\n    fillDropdown(dropdown) {\n        const container = document.createElement('div');\n        container.classList.add(`${toolbarCSSPrefix}spacedList`, `${toolbarCSSPrefix}nonbutton-controls-main-list`);\n        const fontRow = document.createElement('div');\n        const colorRow = document.createElement('div');\n        const sizeRow = document.createElement('div');\n        const fontInput = document.createElement('select');\n        const fontLabel = document.createElement('label');\n        const sizeInput = document.createElement('input');\n        const sizeLabel = document.createElement('label');\n        const { input: colorInput, container: colorInputContainer, setValue: setColorInputValue, } = makeColorInput(this.editor, (color) => {\n            this.tool.setColor(color);\n        });\n        const colorLabel = document.createElement('label');\n        const fontsInInput = new Set();\n        const addFontToInput = (fontName) => {\n            const option = document.createElement('option');\n            option.value = fontName;\n            option.textContent = fontName;\n            fontInput.appendChild(option);\n            fontsInInput.add(fontName);\n        };\n        sizeInput.setAttribute('type', 'number');\n        sizeInput.min = '1';\n        sizeInput.max = '128';\n        fontLabel.innerText = this.localizationTable.fontLabel;\n        colorLabel.innerText = this.localizationTable.colorLabel;\n        sizeLabel.innerText = this.localizationTable.textSize;\n        colorInput.id = `${toolbarCSSPrefix}-text-color-input-${TextToolWidget.idCounter++}`;\n        colorLabel.setAttribute('for', colorInput.id);\n        sizeInput.id = `${toolbarCSSPrefix}-text-size-input-${TextToolWidget.idCounter++}`;\n        sizeLabel.setAttribute('for', sizeInput.id);\n        const defaultFonts = this.editor.getCurrentSettings().text?.fonts ?? [];\n        for (const font of defaultFonts) {\n            addFontToInput(font);\n        }\n        fontInput.classList.add('font-selector');\n        fontInput.id = `${toolbarCSSPrefix}-text-font-input-${TextToolWidget.idCounter++}`;\n        fontLabel.setAttribute('for', fontInput.id);\n        fontInput.onchange = () => {\n            this.tool.setFontFamily(fontInput.value);\n        };\n        sizeInput.onchange = () => {\n            const size = parseInt(sizeInput.value);\n            if (!isNaN(size) && size > 0) {\n                this.tool.setFontSize(size);\n            }\n        };\n        colorRow.appendChild(colorLabel);\n        colorRow.appendChild(colorInputContainer);\n        fontRow.appendChild(fontLabel);\n        fontRow.appendChild(fontInput);\n        sizeRow.appendChild(sizeLabel);\n        sizeRow.appendChild(sizeInput);\n        this.updateDropdownInputs = () => {\n            const style = this.tool.getTextStyle();\n            setColorInputValue(style.renderingStyle.fill);\n            if (!fontsInInput.has(style.fontFamily)) {\n                addFontToInput(style.fontFamily);\n            }\n            fontInput.value = style.fontFamily;\n            sizeInput.value = `${style.size}`;\n        };\n        this.updateDropdownInputs();\n        container.replaceChildren(colorRow, sizeRow, fontRow);\n        dropdown.appendChild(container);\n        return true;\n    }\n    serializeState() {\n        const textStyle = this.tool.getTextStyle();\n        return {\n            ...super.serializeState(),\n            fontFamily: textStyle.fontFamily,\n            textSize: textStyle.size,\n            color: textStyle.renderingStyle.fill.toHexString(),\n        };\n    }\n    deserializeFrom(state) {\n        if (state.fontFamily && typeof state.fontFamily === 'string') {\n            this.tool.setFontFamily(state.fontFamily);\n        }\n        if (state.color && typeof state.color === 'string') {\n            this.tool.setColor(Color4.fromHex(state.color));\n        }\n        if (state.textSize && typeof state.textSize === 'number') {\n            this.tool.setFontSize(state.textSize);\n        }\n        super.deserializeFrom(state);\n    }\n}\nTextToolWidget.idCounter = 0;\nexport default TextToolWidget;\n", "import { Mat33 } from '@js-draw/math';\nimport  PanZoom, { PanZoomMode }  from '../../tools/PanZoom.mjs';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  Viewport  from '../../Viewport.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  BaseToolWidget  from './BaseToolWidget.mjs';\nimport  BaseWidget  from './BaseWidget.mjs';\nimport  makeSeparator  from './components/makeSeparator.mjs';\nconst makeZoomControl = (localizationTable, editor, helpDisplay) => {\n    const zoomLevelRow = document.createElement('div');\n    const increaseButton = document.createElement('button');\n    const decreaseButton = document.createElement('button');\n    const resetViewButton = document.createElement('button');\n    const zoomLevelDisplay = document.createElement('span');\n    increaseButton.innerText = '+';\n    decreaseButton.innerText = '-';\n    resetViewButton.innerText = localizationTable.resetView;\n    zoomLevelRow.replaceChildren(zoomLevelDisplay, increaseButton, decreaseButton, resetViewButton);\n    zoomLevelRow.classList.add(`${toolbarCSSPrefix}zoomLevelEditor`);\n    zoomLevelDisplay.classList.add('zoomDisplay');\n    let lastZoom;\n    const updateZoomDisplay = () => {\n        let zoomLevel = editor.viewport.getScaleFactor() * 100;\n        if (zoomLevel > 0.1) {\n            zoomLevel = Math.round(zoomLevel * 10) / 10;\n        }\n        else {\n            zoomLevel = Math.round(zoomLevel * 1000) / 1000;\n        }\n        if (zoomLevel !== lastZoom) {\n            zoomLevelDisplay.textContent = localizationTable.zoomLevel(zoomLevel);\n            lastZoom = zoomLevel;\n        }\n    };\n    updateZoomDisplay();\n    editor.notifier.on(EditorEventType.ViewportChanged, (event) => {\n        if (event.kind === EditorEventType.ViewportChanged) {\n            updateZoomDisplay();\n            // Can't reset if already reset.\n            resetViewButton.disabled = event.newTransform.eq(Mat33.identity);\n        }\n    });\n    const zoomBy = (factor) => {\n        const screenCenter = editor.viewport.visibleRect.center;\n        const transformUpdate = Mat33.scaling2D(factor, screenCenter);\n        editor.dispatch(Viewport.transformBy(transformUpdate), false);\n    };\n    increaseButton.onclick = () => {\n        zoomBy(5.0 / 4);\n    };\n    decreaseButton.onclick = () => {\n        zoomBy(4.0 / 5);\n    };\n    resetViewButton.onclick = () => {\n        const addToHistory = false;\n        editor.dispatch(Viewport.transformBy(editor.viewport.canvasToScreenTransform.inverse()), addToHistory);\n    };\n    helpDisplay?.registerTextHelpForElement(increaseButton, localizationTable.handDropdown__zoomInHelpText);\n    helpDisplay?.registerTextHelpForElement(decreaseButton, localizationTable.handDropdown__zoomOutHelpText);\n    helpDisplay?.registerTextHelpForElement(resetViewButton, localizationTable.handDropdown__resetViewHelpText);\n    helpDisplay?.registerTextHelpForElement(zoomLevelDisplay, localizationTable.handDropdown__zoomDisplayHelpText);\n    return zoomLevelRow;\n};\nclass HandModeWidget extends BaseWidget {\n    constructor(editor, tool, flag, makeIcon, title, helpText, localizationTable) {\n        super(editor, `pan-mode-${flag}`, localizationTable);\n        this.tool = tool;\n        this.flag = flag;\n        this.makeIcon = makeIcon;\n        this.title = title;\n        this.helpText = helpText;\n        editor.notifier.on(EditorEventType.ToolUpdated, (toolEvt) => {\n            if (toolEvt.kind === EditorEventType.ToolUpdated && toolEvt.tool === tool) {\n                const allEnabled = !!(tool.getMode() & PanZoomMode.SinglePointerGestures);\n                this.setSelected(!!(tool.getMode() & flag) || allEnabled);\n                // Unless this widget toggles all single pointer gestures, toggling while\n                // single pointer gestures are enabled should have no effect\n                this.setDisabled(allEnabled && flag !== PanZoomMode.SinglePointerGestures);\n            }\n        });\n        this.setSelected(false);\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return false;\n    }\n    setModeFlag(enabled) {\n        this.tool.setModeEnabled(this.flag, enabled);\n    }\n    handleClick() {\n        this.setModeFlag(!this.isSelected());\n    }\n    getTitle() {\n        return this.title;\n    }\n    createIcon() {\n        return this.makeIcon();\n    }\n    fillDropdown(_dropdown) {\n        return false;\n    }\n    getHelpText() {\n        return this.helpText;\n    }\n}\n/** This toolbar widget allows controlling the editor's {@link PanZoom} tool(s). */\nexport default class HandToolWidget extends BaseToolWidget {\n    constructor(editor, \n    // Can either be the primary pan/zoom tool (in the primary tools list) or\n    // the override pan/zoom tool.\n    // If the override pan/zoom tool, the primary will be gotten from the editor's\n    // tool controller.\n    // If the primary, the override will be gotten from the editor's tool controller.\n    tool, localizationTable) {\n        const isGivenToolPrimary = editor.toolController.getPrimaryTools().includes(tool);\n        const primaryTool = (isGivenToolPrimary ? tool : HandToolWidget.getPrimaryHandTool(editor.toolController)) ??\n            tool;\n        super(editor, primaryTool, 'hand-tool-widget', localizationTable);\n        this.overridePanZoomTool =\n            (isGivenToolPrimary ? HandToolWidget.getOverrideHandTool(editor.toolController) : tool) ??\n                tool;\n        // Only allow toggling a hand tool if we're using the primary hand tool and not the override\n        // hand tool for this button.\n        this.allowTogglingBaseTool = primaryTool !== null;\n        // Allow showing/hiding the dropdown, even if `overridePanZoomTool` isn't enabled.\n        if (!this.allowTogglingBaseTool) {\n            this.container.classList.add('dropdownShowable');\n        }\n        // Controls for the overriding hand tool.\n        const touchPanningWidget = new HandModeWidget(editor, this.overridePanZoomTool, PanZoomMode.OneFingerTouchGestures, () => this.editor.icons.makeTouchPanningIcon(), localizationTable.touchPanning, localizationTable.handDropdown__touchPanningHelpText, localizationTable);\n        const rotationLockWidget = new HandModeWidget(editor, this.overridePanZoomTool, PanZoomMode.RotationLocked, () => this.editor.icons.makeRotationLockIcon(), localizationTable.lockRotation, localizationTable.handDropdown__lockRotationHelpText, localizationTable);\n        this.addSubWidget(touchPanningWidget);\n        this.addSubWidget(rotationLockWidget);\n    }\n    static getPrimaryHandTool(toolController) {\n        const primaryPanZoomToolList = toolController\n            .getPrimaryTools()\n            .filter((tool) => tool instanceof PanZoom);\n        const primaryPanZoomTool = primaryPanZoomToolList[0];\n        return primaryPanZoomTool;\n    }\n    static getOverrideHandTool(toolController) {\n        const panZoomToolList = toolController.getMatchingTools(PanZoom);\n        const panZoomTool = panZoomToolList[0];\n        return panZoomTool;\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return false;\n    }\n    getTitle() {\n        return this.localizationTable.handTool;\n    }\n    createIcon() {\n        return this.editor.icons.makeHandToolIcon();\n    }\n    handleClick() {\n        if (this.allowTogglingBaseTool) {\n            super.handleClick();\n        }\n        else {\n            this.setDropdownVisible(!this.isDropdownVisible());\n        }\n    }\n    getHelpText() {\n        return this.localizationTable.handDropdown__baseHelpText;\n    }\n    fillDropdown(dropdown, helpDisplay) {\n        super.fillDropdown(dropdown, helpDisplay);\n        // The container for all actions that come after the toolbar buttons.\n        const nonbuttonActionContainer = document.createElement('div');\n        nonbuttonActionContainer.classList.add(`${toolbarCSSPrefix}nonbutton-controls-main-list`);\n        makeSeparator().addTo(nonbuttonActionContainer);\n        const zoomControl = makeZoomControl(this.localizationTable, this.editor, helpDisplay);\n        nonbuttonActionContainer.appendChild(zoomControl);\n        dropdown.appendChild(nonbuttonActionContainer);\n        return true;\n    }\n    setSelected(selected) {\n        if (this.allowTogglingBaseTool) {\n            super.setSelected(selected);\n        }\n    }\n    serializeState() {\n        const toolMode = this.overridePanZoomTool.getMode();\n        return {\n            ...super.serializeState(),\n            touchPanning: toolMode & PanZoomMode.OneFingerTouchGestures,\n            rotationLocked: toolMode & PanZoomMode.RotationLocked,\n        };\n    }\n    deserializeFrom(state) {\n        if (state.touchPanning !== undefined) {\n            this.overridePanZoomTool.setModeEnabled(PanZoomMode.OneFingerTouchGestures, !!state.touchPanning);\n        }\n        if (state.rotationLocked !== undefined) {\n            this.overridePanZoomTool.setModeEnabled(PanZoomMode.RotationLocked, !!state.rotationLocked);\n        }\n        super.deserializeFrom(state);\n    }\n}\n", "var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ActionButtonWidget_autoDisableInReadOnlyEditors, _ActionButtonWidget_helpText;\nimport  BaseWidget  from './BaseWidget.mjs';\nclass ActionButtonWidget extends BaseWidget {\n    constructor(editor, id, makeIcon, title, clickAction, localizationTable, mustBeToplevel = false, autoDisableInReadOnlyEditors = true) {\n        super(editor, id, localizationTable);\n        this.makeIcon = makeIcon;\n        this.title = title;\n        this.clickAction = clickAction;\n        this.mustBeToplevel = mustBeToplevel;\n        _ActionButtonWidget_autoDisableInReadOnlyEditors.set(this, void 0);\n        _ActionButtonWidget_helpText.set(this, undefined);\n        __classPrivateFieldSet(this, _ActionButtonWidget_autoDisableInReadOnlyEditors, autoDisableInReadOnlyEditors, \"f\");\n    }\n    /**\n     * Sets the text shown in a help overlay for this button.\n     *\n     * See {@link getHelpText}.\n     */\n    setHelpText(helpText) {\n        __classPrivateFieldSet(this, _ActionButtonWidget_helpText, helpText, \"f\");\n    }\n    getHelpText() {\n        return __classPrivateFieldGet(this, _ActionButtonWidget_helpText, \"f\");\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return __classPrivateFieldGet(this, _ActionButtonWidget_autoDisableInReadOnlyEditors, \"f\");\n    }\n    handleClick() {\n        this.clickAction();\n    }\n    getTitle() {\n        return this.title;\n    }\n    createIcon() {\n        return this.makeIcon();\n    }\n    fillDropdown(_dropdown) {\n        return false;\n    }\n    mustBeInToplevelMenu() {\n        return this.mustBeToplevel;\n    }\n}\n_ActionButtonWidget_autoDisableInReadOnlyEditors = new WeakMap(), _ActionButtonWidget_helpText = new WeakMap();\nexport default ActionButtonWidget;\n", "import  ReactiveValue  from '../../../util/ReactiveValue.mjs';\nlet idCounter = 0;\n/**\n * Creates a stylized file input. This file input can either use the system file picker, or a custom\n * one specified by `customPickerAction`.\n */\nconst makeFileInput = (labelText, context, { accepts = '*', allowMultiSelect = false, customPickerAction } = {}) => {\n    const container = document.createElement('div');\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n    const descriptionBox = document.createElement('div');\n    descriptionBox.classList.add('toolbar--file-input-description');\n    const descriptionText = document.createElement('span');\n    container.classList.add('toolbar--file-input-container');\n    label.appendChild(document.createTextNode(labelText));\n    input.accept = accepts;\n    input.type = customPickerAction ? 'button' : 'file';\n    input.classList.add('file-input');\n    input.multiple = allowMultiSelect;\n    // Associate the label with the input\n    const inputId = `js-draw-file-input-${idCounter++}`;\n    input.setAttribute('id', inputId);\n    label.htmlFor = inputId;\n    const icon = context.icons.makeUploadFileIcon();\n    icon.classList.add('icon');\n    descriptionBox.replaceChildren(icon, descriptionText);\n    label.appendChild(descriptionBox);\n    container.replaceChildren(label, input);\n    const selectedFiles = ReactiveValue.fromInitialValue([]);\n    let loading = false;\n    let cancelLoading = null;\n    const updateStatusText = () => {\n        const files = selectedFiles.get();\n        if (loading) {\n            descriptionText.textContent = context.localization.fileInput__loading;\n            if (cancelLoading) {\n                const cancelText = document.createElement('b');\n                cancelText.textContent = context.localization.cancel;\n                cancelText.classList.add('cancel-button');\n                descriptionText.appendChild(cancelText);\n            }\n            icon.style.display = 'none';\n        }\n        else if (files.length > 0) {\n            const fileNames = files.map((file) => file.name);\n            const maxNames = 5;\n            if (fileNames.length <= maxNames) {\n                descriptionText.textContent = fileNames.join('\\n');\n            }\n            else {\n                const fileNamesToShow = fileNames.slice(0, maxNames - 1);\n                descriptionText.textContent = [\n                    ...fileNamesToShow,\n                    context.localization.fileInput__andNMoreFiles(fileNames.length - fileNamesToShow.length),\n                ].join('\\n');\n            }\n            // Only show the icon when there are files\n            icon.style.display = 'none';\n        }\n        else {\n            // Show the icon\n            icon.style.display = '';\n            const text = context.localization.dragAndDropHereOrBrowse;\n            // Split into regions surrounded by {{curly braces}} and regions that are\n            // not.\n            // When given a regular expression, `.split` outputs an array. For example,\n            //    \"a test __of__ split\".split(/__(.*)__/)\n            // results in\n            //    ['a test ', 'of', ' split'].\n            const segments = text.split(/[{]{2}(.*)[}]{2}/g);\n            descriptionText.replaceChildren();\n            for (let i = 0; i < segments.length; i++) {\n                // Inside a {{pair of curly braces}}?\n                if (i % 2 === 1) {\n                    const boldedText = document.createElement('b');\n                    boldedText.textContent = segments[i];\n                    descriptionText.appendChild(boldedText);\n                }\n                else {\n                    descriptionText.appendChild(document.createTextNode(segments[i]));\n                }\n            }\n        }\n    };\n    const addFileEventListeners = () => {\n        // Support dropping files\n        label.addEventListener('dragover', (event) => {\n            event.preventDefault();\n            label.classList.add('drag-target');\n        });\n        label.addEventListener('dragenter', (event) => {\n            event.preventDefault();\n            label.classList.add('drag-target');\n        });\n        label.addEventListener('dragleave', (event) => {\n            event.preventDefault();\n            // Ensure the event wasn't targeting a child.\n            // See https://stackoverflow.com/a/54271161 and\n            //     https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/relatedTarget\n            const enteringElement = event.relatedTarget;\n            if (!enteringElement || !label.contains(enteringElement)) {\n                label.classList.remove('drag-target');\n            }\n        });\n        // See https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop#process_the_drop\n        label.addEventListener('drop', (event) => {\n            event.preventDefault();\n            label.classList.remove('drag-target');\n            const fileList = [];\n            if (event.dataTransfer) {\n                fileList.push(...event.dataTransfer.files);\n            }\n            selectedFiles.set(fileList);\n        });\n        input.addEventListener('change', () => {\n            const fileList = input.files ?? [];\n            selectedFiles.set([...fileList]);\n        });\n    };\n    addFileEventListeners();\n    // Support for custom file pickers\n    if (customPickerAction) {\n        const promptForFiles = async () => {\n            if (loading) {\n                cancelLoading?.();\n                return;\n            }\n            container.classList.add('-loading');\n            loading = true;\n            updateStatusText();\n            try {\n                const data = await customPickerAction({\n                    setOnCancelCallback: (onCancel) => {\n                        if (!loading) {\n                            throw new Error(\"Task already completed. Can't register cancel handler.\");\n                        }\n                        cancelLoading = () => {\n                            cancelLoading = null;\n                            updateStatusText();\n                            onCancel();\n                        };\n                        updateStatusText();\n                    },\n                });\n                if (data) {\n                    selectedFiles.set(data);\n                }\n            }\n            finally {\n                container.classList.remove('-loading');\n                loading = false;\n                updateStatusText();\n            }\n        };\n        input.onclick = promptForFiles;\n    }\n    selectedFiles.onUpdate((files) => {\n        if (files.length === 0 && input.files && input.files.length > 0) {\n            input.value = '';\n        }\n        cancelLoading?.();\n    });\n    // Update the status text and hide/show the icon.\n    selectedFiles.onUpdateAndNow(updateStatusText);\n    return {\n        container,\n        input,\n        selectedFiles,\n        addTo: (parent) => {\n            parent.appendChild(container);\n        },\n    };\n};\nexport default makeFileInput;\n", "/**\n * Returns a size in bytes, KiB, or MiB with units suffix.\n */\nconst bytesToSizeString = (sizeBytes) => {\n    const sizeInKiB = sizeBytes / 1024;\n    const sizeInMiB = sizeInKiB / 1024;\n    const sizeInGiB = sizeInMiB / 1024;\n    let units = 'B';\n    let size = sizeBytes;\n    if (sizeInGiB >= 1) {\n        size = sizeInGiB;\n        units = 'GiB';\n    }\n    else if (sizeInMiB >= 1) {\n        size = sizeInMiB;\n        units = 'MiB';\n    }\n    else if (sizeInKiB >= 1) {\n        size = sizeInKiB;\n        units = 'KiB';\n    }\n    return { size, units };\n};\nexport default bytesToSizeString;\n", "/** Handles filtering and other operations on an image. */\nexport class ImageWrapper {\n    constructor(imageBase64Url, preview, onUrlUpdate) {\n        this.imageBase64Url = imageBase64Url;\n        this.preview = preview;\n        this.onUrlUpdate = onUrlUpdate;\n        this.originalSrc = imageBase64Url;\n        preview.src = imageBase64Url;\n    }\n    updateImageData(base64DataUrl) {\n        this.preview.src = base64DataUrl;\n        this.imageBase64Url = base64DataUrl;\n        this.onUrlUpdate();\n    }\n    decreaseSize(resizeFactor = 3 / 4) {\n        const canvas = document.createElement('canvas');\n        canvas.width = this.preview.naturalWidth * resizeFactor;\n        canvas.height = this.preview.naturalHeight * resizeFactor;\n        const ctx = canvas.getContext('2d');\n        ctx?.drawImage(this.preview, 0, 0, canvas.width, canvas.height);\n        // JPEG can be much smaller than PNG for the same image size. Prefer it if\n        // the image is already a JPEG.\n        const format = this.originalSrc?.startsWith('data:image/jpeg;') ? 'image/jpeg' : 'image/png';\n        this.updateImageData(canvas.toDataURL(format));\n    }\n    reset() {\n        this.updateImageData(this.originalSrc);\n    }\n    isChanged() {\n        return this.imageBase64Url !== this.originalSrc;\n    }\n    // Returns true if the current image is large enough to display a \"decrease size\"\n    // option.\n    isLarge() {\n        const largeImageThreshold = 0.12 * 1024 * 1024; // 0.12 MiB\n        return this.getBase64Url().length > largeImageThreshold;\n    }\n    getBase64Url() {\n        return this.imageBase64Url;\n    }\n    getAltText() {\n        return this.altText;\n    }\n    setAltText(text) {\n        this.altText = text;\n        this.preview.alt = text;\n    }\n    static fromSrcAndPreview(initialBase64Src, preview, onUrlUpdate) {\n        return new ImageWrapper(initialBase64Src, preview, onUrlUpdate);\n    }\n    static fromRenderable(renderable, onUrlUpdate) {\n        const preview = new Image();\n        preview.src = renderable.base64Url;\n        const result = new ImageWrapper(renderable.base64Url, preview, onUrlUpdate);\n        const altText = renderable.label ?? renderable.image.getAttribute('alt');\n        if (altText) {\n            result.setAltText(altText);\n        }\n        return { wrapper: result, preview };\n    }\n}\n", "import  stopPropagationOfScrollingWheelEvents  from '../../../util/stopPropagationOfScrollingWheelEvents.mjs';\nimport  { MutableReactiveValue, ReactiveValue }  from '../../../util/ReactiveValue.mjs';\n/**\n * Creates a list that snaps to each item and reports the selected item.\n */\nconst makeSnappedList = (itemsValue) => {\n    const container = document.createElement('div');\n    container.classList.add('toolbar-snapped-scroll-list');\n    const scroller = document.createElement('div');\n    scroller.classList.add('scroller');\n    const visibleIndex = MutableReactiveValue.fromInitialValue(0);\n    let observer = null;\n    const makePageMarkers = () => {\n        const markerContainer = document.createElement('div');\n        markerContainer.classList.add('page-markers');\n        // Keyboard focus should go to the main scrolling list.\n        // TODO: Does it make sense for the page marker list to be focusable?\n        markerContainer.setAttribute('tabindex', '-1');\n        const markers = [];\n        const pairedItems = ReactiveValue.union([\n            visibleIndex,\n            itemsValue,\n        ]);\n        pairedItems.onUpdateAndNow(([currentVisibleIndex, items]) => {\n            let addedOrRemovedMarkers = false;\n            // Items may have been removed from the list of pages. Make the markers reflect that.\n            while (items.length < markers.length) {\n                markers.pop();\n                addedOrRemovedMarkers = true;\n            }\n            let activeMarker;\n            for (let i = 0; i < items.length; i++) {\n                let marker;\n                if (i >= markers.length) {\n                    marker = document.createElement('div');\n                    // Use a separate content element to increase the clickable size of\n                    // the marker.\n                    const content = document.createElement('div');\n                    content.classList.add('content');\n                    marker.replaceChildren(content);\n                    markers.push(marker);\n                    addedOrRemovedMarkers = true;\n                }\n                else {\n                    marker = markers[i];\n                }\n                marker.classList.add('marker');\n                if (i === currentVisibleIndex) {\n                    marker.classList.add('-active');\n                    activeMarker = marker;\n                }\n                else {\n                    marker.classList.remove('-active');\n                }\n                const markerIndex = i;\n                marker.onclick = () => {\n                    wrappedItems\n                        .get()[markerIndex]?.element?.scrollIntoView({ block: 'nearest', behavior: 'smooth' });\n                };\n            }\n            // Only call .replaceChildren when necessary -- doing so on every change would\n            // break transitions.\n            if (addedOrRemovedMarkers) {\n                markerContainer.replaceChildren(...markers);\n            }\n            // Handles the case where there are many markers and the current is offscreen\n            if (activeMarker && markerContainer.scrollHeight > container.clientHeight) {\n                activeMarker.scrollIntoView({ block: 'nearest' });\n            }\n            if (markers.length === 1) {\n                markerContainer.classList.add('-one-element');\n            }\n            else {\n                markerContainer.classList.remove('-one-element');\n            }\n        });\n        return markerContainer;\n    };\n    const createObserver = () => {\n        observer = new IntersectionObserver((entries) => {\n            for (const entry of entries) {\n                if (entry.isIntersecting && entry.intersectionRatio > 0.7) {\n                    const indexString = entry.target.getAttribute('data-item-index');\n                    if (indexString === null)\n                        throw new Error('Could not find attribute data-item-index');\n                    const index = Number(indexString);\n                    visibleIndex.set(index);\n                    break;\n                }\n            }\n        }, {\n            // Element to use as the boudning box with which to intersect.\n            // See https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n            root: scroller,\n            // Fraction of an element that must be visible to trigger the callback:\n            threshold: 0.9,\n        });\n    };\n    const destroyObserver = () => {\n        if (observer) {\n            observer.disconnect();\n            visibleIndex.set(0);\n            observer = null;\n        }\n    };\n    const wrappedItems = ReactiveValue.map(itemsValue, (items) => {\n        return items.map((item, index) => {\n            const wrapper = document.createElement('div');\n            if (item.element.parentElement)\n                item.element.remove();\n            wrapper.appendChild(item.element);\n            wrapper.classList.add('item');\n            wrapper.setAttribute('data-item-index', `${index}`);\n            return {\n                element: wrapper,\n                data: item.data,\n            };\n        });\n    });\n    const lastItems = [];\n    wrappedItems.onUpdateAndNow((items) => {\n        visibleIndex.set(-1);\n        for (const item of lastItems) {\n            observer?.unobserve(item.element);\n        }\n        scroller.replaceChildren();\n        // An observer is only necessary if there are multiple items to scroll through.\n        if (items.length > 1) {\n            createObserver();\n        }\n        else {\n            destroyObserver();\n        }\n        // Different styling is applied when empty\n        if (items.length === 0) {\n            container.classList.add('-empty');\n        }\n        else {\n            container.classList.remove('-empty');\n        }\n        for (const item of items) {\n            scroller.appendChild(item.element);\n        }\n        visibleIndex.set(0);\n        if (observer) {\n            for (const item of items) {\n                observer.observe(item.element);\n            }\n        }\n    });\n    const visibleItem = ReactiveValue.map(visibleIndex, (index) => {\n        const values = itemsValue.get();\n        if (0 <= index && index < values.length) {\n            return values[index].data;\n        }\n        return null;\n    });\n    // makeSnappedList is generally shown within the toolbar. This allows users to\n    // scroll it with a touchpad.\n    stopPropagationOfScrollingWheelEvents(scroller);\n    container.replaceChildren(makePageMarkers(), scroller);\n    return {\n        container,\n        visibleItem,\n    };\n};\nexport default makeSnappedList;\n", "import  fileToBase64Url  from '../../../util/fileToBase64Url.mjs';\nimport { Mat33 } from '@js-draw/math';\nconst fileToImages = async (imageFile) => {\n    const result = [];\n    const imageElement = new Image();\n    const base64Url = await fileToBase64Url(imageFile);\n    if (base64Url) {\n        result.push({\n            image: imageElement,\n            base64Url: base64Url,\n            transform: Mat33.identity,\n        });\n    }\n    return result;\n};\nexport default fileToImages;\n", "import  ImageComponent  from '../../../components/ImageComponent.mjs';\nimport  Erase  from '../../../commands/Erase.mjs';\nimport  EditorImage  from '../../../image/EditorImage.mjs';\nimport  uniteCommands  from '../../../commands/uniteCommands.mjs';\nimport  SelectionTool  from '../../../tools/SelectionTool/SelectionTool.mjs';\nimport { Mat33, Vec2 } from '@js-draw/math';\nimport  BaseWidget  from '../BaseWidget.mjs';\nimport  { EditorEventType }  from '../../../types.mjs';\nimport  { toolbarCSSPrefix }  from '../../constants.mjs';\nimport  makeFileInput  from '../components/makeFileInput.mjs';\nimport  { MutableReactiveValue }  from '../../../util/ReactiveValue.mjs';\nimport  bytesToSizeString  from '../../../util/bytesToSizeString.mjs';\nimport  { ImageWrapper }  from './ImageWrapper.mjs';\nimport  makeSnappedList  from '../components/makeSnappedList.mjs';\nimport  fileToImages  from './fileToImages.mjs';\n/**\n * Provides a widget that allows inserting or modifying raster images.\n *\n * It's possible to customize the file picker used by this widget through {@link EditorSettings.image}.\n *\n * @example\n * ```ts,runnable\n * import { Editor, makeEdgeToolbar, InsertImageWidget } from 'js-draw';\n *\n * const editor = new Editor(document.body);\n * const toolbar = makeEdgeToolbar(editor);\n *\n * toolbar.addWidget(new InsertImageWidget(editor));\n * ```\n */\nclass InsertImageWidget extends BaseWidget {\n    constructor(editor, localization) {\n        localization ??= editor.localization;\n        super(editor, 'insert-image-widget', localization);\n        // Make the dropdown showable\n        this.container.classList.add('dropdownShowable');\n        editor.notifier.on(EditorEventType.SelectionUpdated, (event) => {\n            if (event.kind === EditorEventType.SelectionUpdated && this.isDropdownVisible()) {\n                this.updateInputs();\n            }\n        });\n        this.images = MutableReactiveValue.fromInitialValue([]);\n        this.images.onUpdateAndNow(() => {\n            this.onImageDataUpdate();\n        });\n    }\n    getTitle() {\n        return this.localizationTable.image;\n    }\n    createIcon() {\n        return this.editor.icons.makeInsertImageIcon();\n    }\n    setDropdownVisible(visible) {\n        super.setDropdownVisible(visible);\n        // Update the dropdown just before showing.\n        if (this.isDropdownVisible()) {\n            this.updateInputs();\n        }\n        else {\n            // Allow any previously-selected files to be freed.\n            this.selectedFiles?.set([]);\n        }\n    }\n    handleClick() {\n        this.setDropdownVisible(!this.isDropdownVisible());\n    }\n    fillDropdown(dropdown) {\n        const container = document.createElement('div');\n        container.classList.add('insert-image-widget-dropdown-content', `${toolbarCSSPrefix}spacedList`, `${toolbarCSSPrefix}nonbutton-controls-main-list`);\n        const { container: chooseImageRow, selectedFiles } = makeFileInput(this.localizationTable.chooseFile, this.editor, {\n            accepts: 'image/*',\n            allowMultiSelect: true,\n            customPickerAction: this.editor.getCurrentSettings().image?.showImagePicker,\n        });\n        const altTextRow = document.createElement('div');\n        this.imagesPreview = makeSnappedList(this.images);\n        this.statusView = document.createElement('div');\n        const actionButtonRow = document.createElement('div');\n        actionButtonRow.classList.add('action-button-row');\n        this.statusView.classList.add('insert-image-image-status-view');\n        this.submitButton = document.createElement('button');\n        this.selectedFiles = selectedFiles;\n        this.imageAltTextInput = document.createElement('input');\n        // Label the alt text input\n        const imageAltTextLabel = document.createElement('label');\n        const altTextInputId = `insert-image-alt-text-input-${InsertImageWidget.nextInputId++}`;\n        this.imageAltTextInput.setAttribute('id', altTextInputId);\n        imageAltTextLabel.htmlFor = altTextInputId;\n        imageAltTextLabel.innerText = this.localizationTable.inputAltText;\n        this.imageAltTextInput.type = 'text';\n        this.imageAltTextInput.placeholder = this.localizationTable.describeTheImage;\n        this.statusView.setAttribute('aria-live', 'polite');\n        this.submitButton.innerText = this.localizationTable.submit;\n        this.imagesPreview.visibleItem.onUpdateAndNow(() => this.onImageDataUpdate());\n        this.imageAltTextInput.oninput = () => {\n            const currentImage = this.imagesPreview.visibleItem.get();\n            if (currentImage) {\n                currentImage.setAltText(this.imageAltTextInput.value);\n                this.submitButton.style.display = '';\n            }\n        };\n        this.selectedFiles.onUpdateAndNow(async (files) => {\n            if (files.length === 0) {\n                this.images.set([]);\n                return;\n            }\n            const previews = (await Promise.all(files.map(async (imageFile) => {\n                let renderableImages;\n                try {\n                    renderableImages = await fileToImages(imageFile);\n                }\n                catch (error) {\n                    console.error('Image load error', error);\n                    const errorMessage = this.localizationTable.imageLoadError(error);\n                    this.statusView.innerText = errorMessage;\n                    return [];\n                }\n                return renderableImages.map((image) => {\n                    const { wrapper, preview } = ImageWrapper.fromRenderable(image, () => this.onImageDataUpdate());\n                    return {\n                        data: wrapper,\n                        element: preview,\n                    };\n                });\n            }))).flat();\n            this.images.set(previews);\n        });\n        altTextRow.replaceChildren(imageAltTextLabel, this.imageAltTextInput);\n        actionButtonRow.replaceChildren(this.submitButton);\n        container.replaceChildren(chooseImageRow, altTextRow, this.imagesPreview.container, this.statusView, actionButtonRow);\n        dropdown.replaceChildren(container);\n        return true;\n    }\n    onImageDataUpdate() {\n        if (!this.imagesPreview)\n            return;\n        const currentImage = this.imagesPreview.visibleItem.get();\n        const base64Data = currentImage?.getBase64Url();\n        this.imageAltTextInput.value = currentImage?.getAltText() ?? '';\n        if (base64Data) {\n            this.submitButton.disabled = false;\n            this.submitButton.style.display = '';\n            this.updateImageSizeDisplay();\n        }\n        else {\n            this.submitButton.disabled = true;\n            this.submitButton.style.display = 'none';\n            this.statusView.innerText = '';\n            this.submitButton.disabled = true;\n        }\n        if (this.images.get().length <= 1) {\n            this.submitButton.innerText = this.localizationTable.submit;\n        }\n        else {\n            this.submitButton.innerText = this.localizationTable.addAll;\n        }\n    }\n    hideDialog() {\n        this.setDropdownVisible(false);\n    }\n    updateImageSizeDisplay() {\n        const currentImage = this.imagesPreview.visibleItem.get();\n        const imageData = currentImage?.getBase64Url() ?? '';\n        const { size, units } = bytesToSizeString(imageData.length);\n        const sizeText = document.createElement('span');\n        sizeText.innerText = this.localizationTable.imageSize(Math.round(size), units);\n        // Add a button to allow decreasing the size of large images.\n        const decreaseSizeButton = document.createElement('button');\n        decreaseSizeButton.innerText = this.localizationTable.decreaseImageSize;\n        decreaseSizeButton.onclick = () => {\n            currentImage?.decreaseSize();\n        };\n        const resetSizeButton = document.createElement('button');\n        resetSizeButton.innerText = this.localizationTable.resetImage;\n        resetSizeButton.onclick = () => {\n            currentImage?.reset();\n        };\n        this.statusView.replaceChildren(sizeText);\n        if (currentImage?.isLarge()) {\n            this.statusView.appendChild(decreaseSizeButton);\n        }\n        else if (currentImage?.isChanged()) {\n            this.statusView.appendChild(resetSizeButton);\n        }\n        else {\n            const hasLargeOrChangedImages = this.images\n                .get()\n                .some((image) => image.data?.isChanged() || image.data?.isLarge());\n            if (hasLargeOrChangedImages) {\n                // Still show the button -- prevents the layout from readjusting while\n                // scrolling through the image list\n                decreaseSizeButton.disabled = true;\n                this.statusView.appendChild(decreaseSizeButton);\n            }\n        }\n    }\n    updateInputs() {\n        const resetInputs = () => {\n            this.selectedFiles?.set([]);\n            this.imageAltTextInput.value = '';\n            this.submitButton.disabled = true;\n            this.statusView.innerText = '';\n            this.submitButton.style.display = '';\n        };\n        resetInputs();\n        const selectionTools = this.editor.toolController.getMatchingTools(SelectionTool);\n        const selectedObjects = selectionTools.map((tool) => tool.getSelectedObjects()).flat();\n        // Check: Is there a selected image that can be edited?\n        let editingImage = null;\n        if (selectedObjects.length === 1 && selectedObjects[0] instanceof ImageComponent) {\n            editingImage = selectedObjects[0];\n            const image = new Image();\n            const imageWrapper = ImageWrapper.fromSrcAndPreview(editingImage.getURL(), image, () => this.onImageDataUpdate());\n            imageWrapper.setAltText(editingImage.getAltText() ?? '');\n            this.images.set([{ data: imageWrapper, element: image }]);\n        }\n        else if (selectedObjects.length > 0) {\n            // If not, clear the selection.\n            selectionTools.forEach((tool) => tool.clearSelection());\n        }\n        // Show the submit button only when there is data to submit.\n        this.submitButton.style.display = 'none';\n        this.submitButton.onclick = async () => {\n            const newComponents = [];\n            let transform = Mat33.identity;\n            let fullBBox = null;\n            for (const { data: imageWrapper } of this.images.get()) {\n                if (!imageWrapper) {\n                    continue;\n                }\n                const image = new Image();\n                image.src = imageWrapper.getBase64Url();\n                const altText = imageWrapper.getAltText();\n                if (altText) {\n                    image.setAttribute('alt', altText);\n                }\n                let component;\n                try {\n                    component = await ImageComponent.fromImage(image, transform);\n                }\n                catch (error) {\n                    console.error('Error loading image', error);\n                    this.statusView.innerText = this.localizationTable.imageLoadError(error);\n                    return;\n                }\n                const componentBBox = component.getBBox();\n                if (componentBBox.area === 0) {\n                    this.statusView.innerText = this.localizationTable.errorImageHasZeroSize;\n                    return;\n                }\n                newComponents.push(component);\n                fullBBox ??= componentBBox;\n                fullBBox.union(componentBBox);\n                // Update the transform for the next item.\n                const shift = Vec2.of(0, componentBBox.height);\n                transform = transform.rightMul(Mat33.translation(shift));\n            }\n            if (newComponents.length) {\n                if (!fullBBox) {\n                    throw new Error('Logic error: Full bounding box must be calculated when components are to be added.');\n                }\n                this.hideDialog();\n                if (editingImage) {\n                    const eraseCommand = new Erase([editingImage]);\n                    // Try to preserve the original width\n                    const originalTransform = editingImage.getTransformation();\n                    // || 1: Prevent division by zero\n                    const originalWidth = editingImage.getBBox().width || 1;\n                    const newWidth = fullBBox.transformedBoundingBox(originalTransform).width || 1;\n                    const widthAdjustTransform = Mat33.scaling2D(originalWidth / newWidth);\n                    const commands = [];\n                    for (const component of newComponents) {\n                        commands.push(EditorImage.addComponent(component), component.transformBy(originalTransform.rightMul(widthAdjustTransform)), component.setZIndex(editingImage.getZIndex()));\n                    }\n                    this.editor.dispatch(uniteCommands([...commands, eraseCommand]));\n                    selectionTools[0]?.setSelection(newComponents);\n                }\n                else {\n                    await this.editor.addAndCenterComponents(newComponents);\n                }\n            }\n        };\n    }\n}\nInsertImageWidget.nextInputId = 0;\nexport default InsertImageWidget;\n", "import  Erase  from '../../commands/Erase.mjs';\nimport  uniteCommands  from '../../commands/uniteCommands.mjs';\nimport  BackgroundComponent, { BackgroundType }  from '../../components/BackgroundComponent.mjs';\nimport  { EditorImageEventType }  from '../../image/EditorImage.mjs';\nimport { Rect2 } from '@js-draw/math';\nimport  { EditorEventType }  from '../../types.mjs';\nimport  { toolbarCSSPrefix }  from '../constants.mjs';\nimport  makeColorInput  from './components/makeColorInput.mjs';\nimport  BaseWidget  from './BaseWidget.mjs';\nclass DocumentPropertiesWidget extends BaseWidget {\n    constructor(editor, localizationTable) {\n        super(editor, 'document-properties-widget', localizationTable);\n        this.updateDropdownContent = () => { };\n        this.dropdownUpdateQueued = false;\n        // Make it possible to open the dropdown, even if this widget isn't selected.\n        this.container.classList.add('dropdownShowable');\n        this.editor.notifier.on(EditorEventType.UndoRedoStackUpdated, () => {\n            this.queueDropdownUpdate();\n        });\n        this.editor.image.notifier.on(EditorImageEventType.ExportViewportChanged, () => {\n            this.queueDropdownUpdate();\n        });\n    }\n    getTitle() {\n        return this.localizationTable.documentProperties;\n    }\n    createIcon() {\n        return this.editor.icons.makeConfigureDocumentIcon();\n    }\n    handleClick() {\n        this.setDropdownVisible(!this.isDropdownVisible());\n        this.queueDropdownUpdate();\n    }\n    queueDropdownUpdate() {\n        if (!this.dropdownUpdateQueued) {\n            requestAnimationFrame(() => this.updateDropdown());\n            this.dropdownUpdateQueued = true;\n        }\n    }\n    updateDropdown() {\n        this.dropdownUpdateQueued = false;\n        if (this.isDropdownVisible()) {\n            this.updateDropdownContent();\n        }\n    }\n    setBackgroundColor(color) {\n        this.editor.dispatch(this.editor.setBackgroundColor(color));\n    }\n    getBackgroundColor() {\n        return this.editor.estimateBackgroundColor();\n    }\n    removeBackgroundComponents() {\n        const previousBackgrounds = [];\n        for (const component of this.editor.image.getBackgroundComponents()) {\n            if (component instanceof BackgroundComponent) {\n                previousBackgrounds.push(component);\n            }\n        }\n        return new Erase(previousBackgrounds);\n    }\n    /** Replace existing background components with a background of the given type. */\n    setBackgroundType(backgroundType) {\n        const prevBackgroundColor = this.editor.estimateBackgroundColor();\n        const newBackground = new BackgroundComponent(backgroundType, prevBackgroundColor);\n        const addBackgroundCommand = this.editor.image.addComponent(newBackground);\n        return uniteCommands([this.removeBackgroundComponents(), addBackgroundCommand]);\n    }\n    /** Returns the type of the topmost background component */\n    getBackgroundType() {\n        const backgroundComponents = this.editor.image.getBackgroundComponents();\n        for (let i = backgroundComponents.length - 1; i >= 0; i--) {\n            const component = backgroundComponents[i];\n            if (component instanceof BackgroundComponent) {\n                return component.getBackgroundType();\n            }\n        }\n        return BackgroundType.None;\n    }\n    updateImportExportRectSize(size) {\n        const filterDimension = (dim) => {\n            if (dim !== undefined && (!isFinite(dim) || dim <= 0)) {\n                dim = 100;\n            }\n            return dim;\n        };\n        const width = filterDimension(size.width);\n        const height = filterDimension(size.height);\n        const currentRect = this.editor.getImportExportRect();\n        const newRect = new Rect2(currentRect.x, currentRect.y, width ?? currentRect.w, height ?? currentRect.h);\n        this.editor.dispatch(this.editor.image.setImportExportRect(newRect));\n        this.editor.queueRerender();\n    }\n    getHelpText() {\n        return this.localizationTable.pageDropdown__baseHelpText;\n    }\n    fillDropdown(dropdown, helpDisplay) {\n        const container = document.createElement('div');\n        container.classList.add(`${toolbarCSSPrefix}spacedList`, `${toolbarCSSPrefix}nonbutton-controls-main-list`, `${toolbarCSSPrefix}document-properties-widget`);\n        // Background color input\n        const makeBackgroundColorInput = () => {\n            const backgroundColorRow = document.createElement('div');\n            const backgroundColorLabel = document.createElement('label');\n            backgroundColorLabel.innerText = this.localizationTable.backgroundColor;\n            const { input: colorInput, container: backgroundColorInputContainer, setValue: setBgColorInputValue, registerWithHelpTextDisplay: registerHelpForInputs, } = makeColorInput(this.editor, (color) => {\n                if (!color.eq(this.getBackgroundColor())) {\n                    this.setBackgroundColor(color);\n                }\n            });\n            colorInput.id = `${toolbarCSSPrefix}docPropertiesColorInput-${DocumentPropertiesWidget.idCounter++}`;\n            backgroundColorLabel.htmlFor = colorInput.id;\n            backgroundColorRow.replaceChildren(backgroundColorLabel, backgroundColorInputContainer);\n            const registerWithHelp = (helpDisplay) => {\n                if (!helpDisplay) {\n                    return;\n                }\n                helpDisplay?.registerTextHelpForElement(backgroundColorRow, this.localizationTable.pageDropdown__backgroundColorHelpText);\n                registerHelpForInputs(helpDisplay);\n            };\n            return { setBgColorInputValue, backgroundColorRow, registerWithHelp };\n        };\n        const { backgroundColorRow, setBgColorInputValue, registerWithHelp: registerBackgroundRowWithHelp, } = makeBackgroundColorInput();\n        const makeCheckboxRow = (labelText, onChange) => {\n            const rowContainer = document.createElement('div');\n            const labelElement = document.createElement('label');\n            const checkboxElement = document.createElement('input');\n            checkboxElement.id = `${toolbarCSSPrefix}docPropertiesCheckbox-${DocumentPropertiesWidget.idCounter++}`;\n            labelElement.htmlFor = checkboxElement.id;\n            checkboxElement.type = 'checkbox';\n            labelElement.innerText = labelText;\n            checkboxElement.oninput = () => {\n                onChange(checkboxElement.checked);\n            };\n            rowContainer.replaceChildren(labelElement, checkboxElement);\n            return { container: rowContainer, checkbox: checkboxElement };\n        };\n        // Background style selector\n        const { container: useGridRow, checkbox: useGridCheckbox } = makeCheckboxRow(this.localizationTable.useGridOption, (checked) => {\n            const prevBackgroundType = this.getBackgroundType();\n            const wasGrid = prevBackgroundType === BackgroundType.Grid;\n            if (wasGrid === checked) {\n                // Already the requested background type.\n                return;\n            }\n            let newBackgroundType = BackgroundType.SolidColor;\n            if (checked) {\n                newBackgroundType = BackgroundType.Grid;\n            }\n            this.editor.dispatch(this.setBackgroundType(newBackgroundType));\n        });\n        // Adds a width/height input\n        const addDimensionRow = (labelContent, onChange) => {\n            const row = document.createElement('div');\n            const label = document.createElement('label');\n            const input = document.createElement('input');\n            label.innerText = labelContent;\n            input.type = 'number';\n            input.min = '0';\n            input.id = `${toolbarCSSPrefix}docPropertiesDimensionRow-${DocumentPropertiesWidget.idCounter++}`;\n            label.htmlFor = input.id;\n            input.style.flexGrow = '2';\n            input.style.width = '25px';\n            input.oninput = () => {\n                onChange(parseFloat(input.value));\n            };\n            row.classList.add('js-draw-size-input-row');\n            row.replaceChildren(label, input);\n            return {\n                setValue: (value) => {\n                    // Slightly improve the case where the user tries to change the\n                    // first digit of a dimension like 600.\n                    //\n                    // As changing the value also gives the image zero size (which is unsupported,\n                    // .setValue is called immediately). We work around this by trying to select\n                    // the added/changed digits.\n                    //\n                    // See https://github.com/personalizedrefrigerator/js-draw/issues/58.\n                    if (document.activeElement === input && input.value.match(/^0*$/)) {\n                        // We need to switch to type=\"text\" and back to type=\"number\" because\n                        // number inputs don't support selection.\n                        //\n                        // See https://stackoverflow.com/q/22381837\n                        const originalValue = input.value;\n                        input.type = 'text';\n                        input.value = value.toString();\n                        // Select the added digits\n                        const lengthToSelect = Math.max(1, input.value.length - originalValue.length);\n                        input.setSelectionRange(0, lengthToSelect);\n                        input.type = 'number';\n                    }\n                    else {\n                        input.value = value.toString();\n                    }\n                },\n                setIsAutomaticSize: (automatic) => {\n                    input.disabled = automatic;\n                    const automaticSizeClass = 'size-input-row--automatic-size';\n                    if (automatic) {\n                        row.classList.add(automaticSizeClass);\n                    }\n                    else {\n                        row.classList.remove(automaticSizeClass);\n                    }\n                },\n                element: row,\n            };\n        };\n        const imageWidthRow = addDimensionRow(this.localizationTable.imageWidthOption, (value) => {\n            this.updateImportExportRectSize({ width: value });\n        });\n        const imageHeightRow = addDimensionRow(this.localizationTable.imageHeightOption, (value) => {\n            this.updateImportExportRectSize({ height: value });\n        });\n        // The autoresize checkbox\n        const { container: auroresizeRow, checkbox: autoresizeCheckbox } = makeCheckboxRow(this.localizationTable.enableAutoresizeOption, (checked) => {\n            const image = this.editor.image;\n            this.editor.dispatch(image.setAutoresizeEnabled(checked));\n        });\n        // The \"About...\" button\n        const aboutButton = document.createElement('button');\n        aboutButton.classList.add('about-button');\n        aboutButton.innerText = this.localizationTable.about;\n        aboutButton.onclick = () => {\n            this.editor.showAboutDialog();\n        };\n        // Add help text\n        registerBackgroundRowWithHelp(helpDisplay);\n        helpDisplay?.registerTextHelpForElement(useGridRow, this.localizationTable.pageDropdown__gridCheckboxHelpText);\n        helpDisplay?.registerTextHelpForElement(auroresizeRow, this.localizationTable.pageDropdown__autoresizeCheckboxHelpText);\n        helpDisplay?.registerTextHelpForElement(aboutButton, this.localizationTable.pageDropdown__aboutButtonHelpText);\n        this.updateDropdownContent = () => {\n            setBgColorInputValue(this.getBackgroundColor());\n            const autoresize = this.editor.image.getAutoresizeEnabled();\n            const importExportRect = this.editor.getImportExportRect();\n            imageWidthRow.setValue(importExportRect.width);\n            imageHeightRow.setValue(importExportRect.height);\n            autoresizeCheckbox.checked = autoresize;\n            imageWidthRow.setIsAutomaticSize(autoresize);\n            imageHeightRow.setIsAutomaticSize(autoresize);\n            useGridCheckbox.checked = this.getBackgroundType() === BackgroundType.Grid;\n        };\n        this.updateDropdownContent();\n        container.replaceChildren(backgroundColorRow, useGridRow, imageWidthRow.element, imageHeightRow.element, auroresizeRow, aboutButton);\n        dropdown.replaceChildren(container);\n        return true;\n    }\n}\nDocumentPropertiesWidget.idCounter = 0;\nexport default DocumentPropertiesWidget;\n", "import  ActionButtonWidget  from './ActionButtonWidget.mjs';\nimport  { ToolbarWidgetTag }  from './BaseWidget.mjs';\nimport  { saveKeyboardShortcut }  from './keybindings.mjs';\nclass SaveActionWidget extends ActionButtonWidget {\n    constructor(editor, localization, saveCallback, labelOverride = {}) {\n        super(editor, 'save-button', \n        // Creates an icon\n        () => {\n            return labelOverride.icon ?? editor.icons.makeSaveIcon();\n        }, labelOverride.label ?? localization.save, saveCallback);\n        this.setTags([ToolbarWidgetTag.Save]);\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return false;\n    }\n    onKeyPress(event) {\n        if (this.editor.shortcuts.matchesShortcut(saveKeyboardShortcut, event)) {\n            this.clickAction();\n            return true;\n        }\n        // Run any default actions registered by the parent class.\n        return super.onKeyPress(event);\n    }\n    mustBeInToplevelMenu() {\n        return true;\n    }\n}\nexport default SaveActionWidget;\n", "import  ActionButtonWidget  from './ActionButtonWidget.mjs';\nimport  { ToolbarWidgetTag }  from './BaseWidget.mjs';\nimport  { exitKeyboardShortcut }  from './keybindings.mjs';\nclass ExitActionWidget extends ActionButtonWidget {\n    constructor(editor, localization, saveCallback, labelOverride = {}) {\n        super(editor, 'exit-button', \n        // Creates an icon\n        () => {\n            return labelOverride.icon ?? editor.icons.makeCloseIcon();\n        }, labelOverride.label ?? localization.exit, saveCallback);\n        this.setTags([ToolbarWidgetTag.Exit]);\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return false;\n    }\n    onKeyPress(event) {\n        if (this.editor.shortcuts.matchesShortcut(exitKeyboardShortcut, event)) {\n            this.clickAction();\n            return true;\n        }\n        return super.onKeyPress(event);\n    }\n    mustBeInToplevelMenu() {\n        return true;\n    }\n}\nexport default ExitActionWidget;\n", "var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AbstractToolbar_listeners, _AbstractToolbar_widgetsById, _AbstractToolbar_widgetList, _AbstractToolbar_updateColoris;\nimport  { EditorEventType }  from '../types.mjs';\nimport { coloris, close as closeColoris, init as colorisInit } from '@melloware/coloris';\nimport  SelectionTool  from '../tools/SelectionTool/SelectionTool.mjs';\nimport  PanZoomTool  from '../tools/PanZoom.mjs';\nimport  TextTool  from '../tools/TextTool.mjs';\nimport  EraserTool  from '../tools/Eraser.mjs';\nimport  PenTool  from '../tools/Pen.mjs';\nimport  PenToolWidget  from './widgets/PenToolWidget.mjs';\nimport  EraserWidget  from './widgets/EraserToolWidget.mjs';\nimport  SelectionToolWidget  from './widgets/SelectionToolWidget.mjs';\nimport  TextToolWidget  from './widgets/TextToolWidget.mjs';\nimport  HandToolWidget  from './widgets/HandToolWidget.mjs';\nimport  { ToolbarWidgetTag }  from './widgets/BaseWidget.mjs';\nimport  ActionButtonWidget  from './widgets/ActionButtonWidget.mjs';\nimport  InsertImageWidget  from './widgets/InsertImageWidget/InsertImageWidget.mjs';\nimport  DocumentPropertiesWidget  from './widgets/DocumentPropertiesWidget.mjs';\nimport { Color4 } from '@js-draw/math';\nimport  { toolbarCSSPrefix }  from './constants.mjs';\nimport  SaveActionWidget  from './widgets/SaveActionWidget.mjs';\nimport  ExitActionWidget  from './widgets/ExitActionWidget.mjs';\nimport  { assertIsObject, assertTruthy }  from '../util/assertions.mjs';\n/**\n * Abstract base class for js-draw editor toolbars.\n *\n * See {@link Editor.addToolbar}, {@link makeDropdownToolbar}, and {@link makeEdgeToolbar}.\n */\nclass AbstractToolbar {\n    /** @internal */\n    constructor(editor, localizationTable) {\n        this.editor = editor;\n        _AbstractToolbar_listeners.set(this, []);\n        _AbstractToolbar_widgetsById.set(this, {});\n        _AbstractToolbar_widgetList.set(this, []);\n        _AbstractToolbar_updateColoris.set(this, null);\n        this.closeColorPickerOverlay = null;\n        this.localizationTable = localizationTable ?? editor.localization;\n        if (!AbstractToolbar.colorisStarted) {\n            colorisInit();\n            AbstractToolbar.colorisStarted = true;\n        }\n        this.setupColorPickers();\n    }\n    setupCloseColorPickerOverlay() {\n        if (this.closeColorPickerOverlay)\n            return;\n        this.closeColorPickerOverlay = document.createElement('div');\n        this.closeColorPickerOverlay.className = `${toolbarCSSPrefix}closeColorPickerOverlay`;\n        this.editor.createHTMLOverlay(this.closeColorPickerOverlay);\n        // Hide the color picker when attempting to draw on the overlay.\n        __classPrivateFieldGet(this, _AbstractToolbar_listeners, \"f\").push(this.editor.handlePointerEventsExceptClicksFrom(this.closeColorPickerOverlay, (eventName) => {\n            if (eventName === 'pointerdown') {\n                closeColoris();\n            }\n            // Transfer focus to the editor to allow keyboard events to be handled.\n            if (eventName === 'pointerup') {\n                this.editor.focus();\n            }\n            // Send the event to the editor\n            return true;\n        }));\n    }\n    // @internal\n    setupColorPickers() {\n        // Much of the setup only needs to be done once.\n        if (__classPrivateFieldGet(this, _AbstractToolbar_updateColoris, \"f\")) {\n            __classPrivateFieldGet(this, _AbstractToolbar_updateColoris, \"f\").call(this);\n            return;\n        }\n        this.setupCloseColorPickerOverlay();\n        const maxSwatchLen = 12;\n        const swatches = [\n            Color4.red.toHexString(),\n            Color4.purple.toHexString(),\n            Color4.blue.toHexString(),\n            Color4.clay.toHexString(),\n            Color4.black.toHexString(),\n            Color4.white.toHexString(),\n        ];\n        const presetColorEnd = swatches.length;\n        // Keeps track of whether a Coloris initialization is scheduled.\n        let colorisInitScheduled = false;\n        // (Re)init Coloris -- update the swatches list.\n        const initColoris = () => {\n            try {\n                coloris({\n                    el: '.coloris_input',\n                    format: 'hex',\n                    selectInput: false,\n                    focusInput: false,\n                    themeMode: 'auto',\n                    swatches,\n                });\n            }\n            catch (err) {\n                console.warn('Failed to initialize Coloris. Error: ', err);\n                // Try again --- a known issue is that Coloris fails to load if the document\n                // isn't ready.\n                if (!colorisInitScheduled) {\n                    colorisInitScheduled = true;\n                    // Wait to initialize after the document has loaded\n                    document.addEventListener('load', () => {\n                        initColoris();\n                    }, { once: true });\n                }\n            }\n        };\n        initColoris();\n        __classPrivateFieldSet(this, _AbstractToolbar_updateColoris, initColoris, \"f\");\n        const addColorToSwatch = (newColor) => {\n            let alreadyPresent = false;\n            for (const color of swatches) {\n                if (color === newColor) {\n                    alreadyPresent = true;\n                }\n            }\n            if (!alreadyPresent) {\n                swatches.push(newColor);\n                if (swatches.length > maxSwatchLen) {\n                    swatches.splice(presetColorEnd, 1);\n                }\n                initColoris();\n            }\n        };\n        __classPrivateFieldGet(this, _AbstractToolbar_listeners, \"f\").push(this.editor.notifier.on(EditorEventType.ColorPickerToggled, (event) => {\n            if (event.kind !== EditorEventType.ColorPickerToggled) {\n                return;\n            }\n            // Show/hide the overlay. Making the overlay visible gives users a surface to click\n            // on that shows/hides the color picker.\n            if (this.closeColorPickerOverlay) {\n                this.closeColorPickerOverlay.style.display = event.open ? 'block' : 'none';\n            }\n        }));\n        // Add newly-selected colors to the swatch.\n        __classPrivateFieldGet(this, _AbstractToolbar_listeners, \"f\").push(this.editor.notifier.on(EditorEventType.ColorPickerColorSelected, (event) => {\n            if (event.kind === EditorEventType.ColorPickerColorSelected) {\n                addColorToSwatch(event.color.toHexString());\n            }\n        }));\n    }\n    closeColorPickers() {\n        closeColoris?.();\n    }\n    getWidgetUniqueId(widget) {\n        return widget.getUniqueIdIn(__classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\"));\n    }\n    getWidgetFromId(id) {\n        return __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\")[id];\n    }\n    /** Do **not** modify the return value. */\n    getAllWidgets() {\n        return __classPrivateFieldGet(this, _AbstractToolbar_widgetList, \"f\");\n    }\n    /**\n     * Adds an `ActionButtonWidget` or `BaseToolWidget`. The widget should not have already have a parent\n     * (i.e. its `addTo` method should not have been called).\n     *\n     * @example\n     * ```ts\n     * const toolbar = editor.addToolbar();\n     * const insertImageWidget = new InsertImageWidget(editor);\n     * toolbar.addWidget(insertImageWidget);\n     * ```\n     */\n    addWidget(widget) {\n        // Prevent name collisions\n        const id = widget.getUniqueIdIn(__classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\"));\n        // Add the widget\n        __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\")[id] = widget;\n        __classPrivateFieldGet(this, _AbstractToolbar_widgetList, \"f\").push(widget);\n        this.addWidgetInternal(widget);\n        this.setupColorPickers();\n    }\n    /** Removes the given `widget` from this toolbar. */\n    removeWidget(widget) {\n        const id = widget.getUniqueIdIn(__classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\"));\n        this.removeWidgetInternal(widget);\n        delete __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\")[id];\n        __classPrivateFieldSet(this, _AbstractToolbar_widgetList, __classPrivateFieldGet(this, _AbstractToolbar_widgetList, \"f\").filter((otherWidget) => otherWidget !== widget), \"f\");\n    }\n    /** Returns a snapshot of the state of widgets in the toolbar. */\n    serializeState() {\n        const result = {};\n        for (const widgetId in __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\")) {\n            result[widgetId] = __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\")[widgetId].serializeState();\n        }\n        result[AbstractToolbar.rootToolbarId] = this.serializeInternal();\n        return JSON.stringify(result);\n    }\n    /**\n     * Deserialize toolbar widgets from the given state.\n     * Assumes that toolbar widgets are in the same order as when state was serialized.\n     */\n    deserializeState(state) {\n        const data = JSON.parse(state);\n        assertIsObject(data);\n        assertTruthy(data);\n        const rootId = AbstractToolbar.rootToolbarId;\n        if (rootId in data && typeof data[rootId] !== 'undefined') {\n            this.deserializeInternal(data[rootId]);\n        }\n        for (const widgetId in data) {\n            if (widgetId === rootId) {\n                continue;\n            }\n            if (!(widgetId in __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\"))) {\n                console.warn(`Unable to deserialize widget ${widgetId} ­— no such widget.`);\n                continue;\n            }\n            if (typeof data[widgetId] === 'object' && data[widgetId]) {\n                __classPrivateFieldGet(this, _AbstractToolbar_widgetsById, \"f\")[widgetId].deserializeFrom(data[widgetId]);\n            }\n        }\n    }\n    /**\n     * Called by `serializeState` to attach any additional JSONifyable data\n     * to the serialized result.\n     *\n     * @returns an object that can be converted to JSON with `JSON.stringify`.\n     */\n    serializeInternal() { }\n    /**\n     * Called by `deserializeState` with a version of the JSON outputted\n     * previously by `serializeInternal`.\n     */\n    deserializeInternal(_json) { }\n    /**\n     * Creates, but does not add, an action button to this container.\n     *\n     * @see\n     * {@link addActionButton}\n     */\n    makeActionButton(title, command, options = true) {\n        // Parse options\n        if (typeof options === 'boolean') {\n            options = {\n                mustBeToplevel: options,\n            };\n        }\n        const mustBeToplevel = options.mustBeToplevel ?? true;\n        const autoDisableInReadOnlyEditors = options.autoDisableInReadOnlyEditors ?? true;\n        const titleString = typeof title === 'string' ? title : title.label;\n        const widgetId = 'action-button';\n        const makeIcon = () => {\n            if (typeof title === 'string') {\n                return null;\n            }\n            return title.icon;\n        };\n        const widget = new ActionButtonWidget(this.editor, widgetId, makeIcon, titleString, command, this.editor.localization, mustBeToplevel, autoDisableInReadOnlyEditors);\n        return widget;\n    }\n    /**\n     * Adds an action button with `title` to this toolbar (or to the given `parent` element).\n     *\n     * `options` can either be an object with properties `mustBeToplevel` and/or\n     * `autoDisableInReadOnlyEditors` or a boolean value. If a boolean, it is interpreted\n     * as being the value of `mustBeToplevel`.\n     *\n     * @return The added button.\n     *\n     * **Example**:\n     * ```ts,runnable\n     * import { Editor } from 'js-draw';\n     * const editor = new Editor(document.body);\n     * const toolbar = editor.addToolbar();\n     *\n     * function makeTrashIcon() {\n     *   const container = document.createElement('div');\n     *   container.textContent = '🗑️';\n     *   return container;\n     * }\n     *\n     * toolbar.addActionButton({\n     *   icon: makeTrashIcon(), // can be any Element not in the DOM\n     *   label: 'Delete all',\n     * }, () => {\n     *   alert('to-do!');\n     * });\n     */\n    addActionButton(title, command, options = true) {\n        const widget = this.makeActionButton(title, command, options);\n        this.addWidget(widget);\n        return widget;\n    }\n    /**\n     * Like {@link addActionButton}, except associates `tags` with the button that allow\n     * different toolbar styles to give the button tag-dependent styles.\n     */\n    addTaggedActionButton(tags, title, command, options = true) {\n        const widget = this.makeActionButton(title, command, options);\n        widget.setTags(tags);\n        this.addWidget(widget);\n        return widget;\n    }\n    /**\n     * Adds a save button that, when clicked, calls `saveCallback`.\n     *\n     * @example\n     * ```ts,runnable\n     * import { Editor, makeDropdownToolbar } from 'js-draw';\n     *\n     * const editor = new Editor(document.body);\n     * const toolbar = makeDropdownToolbar(editor);\n     *\n     * toolbar.addDefaults();\n     * toolbar.addSaveButton(() => alert('save clicked!'));\n     * ```\n     *\n     * `labelOverride` can optionally be used to change the `label` or `icon` of the button.\n     */\n    addSaveButton(saveCallback, labelOverride = {}) {\n        const widget = new SaveActionWidget(this.editor, this.localizationTable, saveCallback, labelOverride);\n        this.addWidget(widget);\n        return widget;\n    }\n    /**\n     * Adds an \"Exit\" button that, when clicked, calls `exitCallback`.\n     *\n     * **Note**: This is *roughly* equivalent to\n     * ```ts\n     * toolbar.addTaggedActionButton([ ToolbarWidgetTag.Exit ], {\n     *   label: this.editor.localization.exit,\n     *   icon: this.editor.icons.makeCloseIcon(),\n     *\n     *   // labelOverride can be used to override label or icon.\n     *   ...labelOverride,\n     * }, () => {\n     *   exitCallback();\n     * });\n     * ```\n     * with some additional configuration.\n     *\n     * @final\n     */\n    addExitButton(exitCallback, labelOverride = {}) {\n        const widget = new ExitActionWidget(this.editor, this.localizationTable, exitCallback, labelOverride);\n        this.addWidget(widget);\n        return widget;\n    }\n    /**\n     * Adds undo and redo buttons that trigger the editor's built-in undo and redo\n     * functionality.\n     */\n    addUndoRedoButtons(undoFirst = true) {\n        const makeUndo = () => {\n            return this.addTaggedActionButton([ToolbarWidgetTag.Undo], {\n                label: this.localizationTable.undo,\n                icon: this.editor.icons.makeUndoIcon(),\n            }, () => {\n                this.editor.history.undo();\n            });\n        };\n        const makeRedo = () => {\n            return this.addTaggedActionButton([ToolbarWidgetTag.Redo], {\n                label: this.localizationTable.redo,\n                icon: this.editor.icons.makeRedoIcon(),\n            }, () => {\n                this.editor.history.redo();\n            });\n        };\n        let undoButton;\n        let redoButton;\n        if (undoFirst) {\n            undoButton = makeUndo();\n            redoButton = makeRedo();\n        }\n        else {\n            redoButton = makeRedo();\n            undoButton = makeUndo();\n        }\n        undoButton.setDisabled(true);\n        redoButton.setDisabled(true);\n        this.editor.notifier.on(EditorEventType.UndoRedoStackUpdated, (event) => {\n            if (event.kind !== EditorEventType.UndoRedoStackUpdated) {\n                throw new Error('Wrong event type!');\n            }\n            undoButton.setDisabled(event.undoStackSize === 0);\n            redoButton.setDisabled(event.redoStackSize === 0);\n        });\n    }\n    /**\n     * Adds widgets for pen/eraser/selection/text/pan-zoom primary tools.\n     *\n     * If `filter` returns `false` for a tool, no widget is added for that tool.\n     * See {@link addDefaultToolWidgets}\n     */\n    addWidgetsForPrimaryTools(filter) {\n        for (const tool of this.editor.toolController.getPrimaryTools()) {\n            if (filter && !filter?.(tool)) {\n                continue;\n            }\n            if (tool instanceof PenTool) {\n                const widget = new PenToolWidget(this.editor, tool, this.localizationTable);\n                this.addWidget(widget);\n            }\n            else if (tool instanceof EraserTool) {\n                this.addWidget(new EraserWidget(this.editor, tool, this.localizationTable));\n            }\n            else if (tool instanceof SelectionTool) {\n                this.addWidget(new SelectionToolWidget(this.editor, tool, this.localizationTable));\n            }\n            else if (tool instanceof TextTool) {\n                this.addWidget(new TextToolWidget(this.editor, tool, this.localizationTable));\n            }\n            else if (tool instanceof PanZoomTool) {\n                this.addWidget(new HandToolWidget(this.editor, tool, this.localizationTable));\n            }\n        }\n    }\n    /**\n     * Adds toolbar widgets based on the enabled tools, and additional tool-like\n     * buttons (e.g. {@link DocumentPropertiesWidget} and {@link InsertImageWidget}).\n     */\n    addDefaultToolWidgets() {\n        this.addWidgetsForPrimaryTools();\n        this.addDefaultEditorControlWidgets();\n    }\n    /**\n     * Adds widgets that don't correspond to tools, but do allow the user to control\n     * the editor in some way.\n     *\n     * By default, this includes {@link DocumentPropertiesWidget} and {@link InsertImageWidget}.\n     */\n    addDefaultEditorControlWidgets() {\n        this.addWidget(new DocumentPropertiesWidget(this.editor, this.localizationTable));\n        this.addWidget(new InsertImageWidget(this.editor, this.localizationTable));\n    }\n    addDefaultActionButtons() {\n        this.addUndoRedoButtons();\n    }\n    /**\n     * Remove this toolbar from its container and clean up listeners.\n     * This should only be called **once** for a given toolbar.\n     */\n    remove() {\n        this.closeColorPickerOverlay?.remove();\n        for (const listener of __classPrivateFieldGet(this, _AbstractToolbar_listeners, \"f\")) {\n            listener.remove();\n        }\n        __classPrivateFieldSet(this, _AbstractToolbar_listeners, [], \"f\");\n        this.onRemove();\n        for (const widget of __classPrivateFieldGet(this, _AbstractToolbar_widgetList, \"f\")) {\n            widget.remove();\n        }\n    }\n    /**\n     * Removes `listener` when {@link remove} is called.\n     */\n    manageListener(listener) {\n        __classPrivateFieldGet(this, _AbstractToolbar_listeners, \"f\").push(listener);\n    }\n}\n_AbstractToolbar_listeners = new WeakMap(), _AbstractToolbar_widgetsById = new WeakMap(), _AbstractToolbar_widgetList = new WeakMap(), _AbstractToolbar_updateColoris = new WeakMap();\nAbstractToolbar.colorisStarted = false;\nAbstractToolbar.rootToolbarId = 'root-toolbar--';\nexport default AbstractToolbar;\n", "import  { ToolbarWidgetTag }  from './widgets/BaseWidget.mjs';\nimport  { toolbarCSSPrefix }  from './constants.mjs';\nimport  EdgeToolbarLayoutManager  from './widgets/layout/EdgeToolbarLayoutManager.mjs';\nimport  { MutableReactiveValue, ReactiveValue }  from '../util/ReactiveValue.mjs';\nimport  AbstractToolbar  from './AbstractToolbar.mjs';\nimport  stopPropagationOfScrollingWheelEvents  from '../util/stopPropagationOfScrollingWheelEvents.mjs';\nimport  makeDraggable  from './utils/makeDraggable.mjs';\n/**\n * Creates an `EdgeToolbar`.\n *\n * [Credit for the original design of this UI](https://www.figma.com/file/NA5F2AMWO3wUuaoDfUaAb8/Material-3-wireframes?type=design&node-id=54490%3A1103&mode=design&t=Ee0UwnPnQ2bNC2uM-1).\n *\n * @example\n *\n * ```ts,runnable\n * import { makeEdgeToolbar, Editor } from 'js-draw';\n *\n * const editor = new Editor(document.body);\n * const toolbar = makeEdgeToolbar(editor);\n * toolbar.addDefaults();\n *\n * toolbar.addSaveButton(editor => {\n *   // TODO\n * });\n *\n * toolbar.addExitButton(editor => {\n *   // TODO\n * });\n * ```\n *\n * @see\n * - {@link makeDropdownToolbar}\n * - {@link AbstractToolbar.addSaveButton}\n * - {@link AbstractToolbar.addExitButton}\n */\nexport const makeEdgeToolbar = (editor) => {\n    return new EdgeToolbar(editor, editor.getRootElement(), editor.localization);\n};\nexport default class EdgeToolbar extends AbstractToolbar {\n    /** @internal */\n    constructor(editor, parent, localizationTable) {\n        super(editor, localizationTable);\n        this.clearDragListeners = null;\n        this.toolbarContainer = document.createElement('div');\n        this.toolbarContainer.classList.add(`${toolbarCSSPrefix}root`);\n        this.toolbarContainer.classList.add(`${toolbarCSSPrefix}element`);\n        this.toolbarContainer.classList.add(`${toolbarCSSPrefix}edge-toolbar`);\n        this.toolbarContainer.setAttribute('role', 'toolbar');\n        this.toolbarActionRow = document.createElement('div');\n        this.toolbarActionRow.classList.add('toolbar-element', 'toolbar-action-row');\n        this.toolbarToolRow = document.createElement('div');\n        this.toolbarToolRow.classList.add('toolbar-element', 'toolbar-tool-row');\n        stopPropagationOfScrollingWheelEvents(this.toolbarToolRow);\n        if ('ResizeObserver' in window) {\n            this.toolRowResizeObserver = new ResizeObserver((_entries) => {\n                this.onToolbarRowResize();\n            });\n            this.toolRowResizeObserver.observe(this.toolbarToolRow);\n        }\n        else {\n            console.warn('ResizeObserver not supported. Toolbar will not resize.');\n        }\n        this.toolbarContainer.replaceChildren(this.toolbarActionRow, this.toolbarToolRow);\n        parent.appendChild(this.toolbarContainer);\n        this.sidebarVisible = ReactiveValue.fromInitialValue(false);\n        this.sidebarY = ReactiveValue.fromInitialValue(0);\n        // Create the container elements\n        this.menuContainer = document.createElement('div');\n        this.menuContainer.classList.add(`${toolbarCSSPrefix}edgemenu-container`);\n        this.sidebarContainer = document.createElement('div');\n        this.sidebarContainer.classList.add(`${toolbarCSSPrefix}edgemenu`, `${toolbarCSSPrefix}element`);\n        this.sidebarContainer.classList.add(`${toolbarCSSPrefix}tool-properties`);\n        this.sidebarContent = document.createElement('div');\n        // Setup resizing/dragging\n        this.sidebarY.onUpdateAndNow((y) => {\n            const belowEdgeClassName = 'dropdown-below-edge';\n            if (y > 0) {\n                this.sidebarContainer.style.transform = `translate(0, ${y}px)`;\n                this.sidebarContainer.style.paddingBottom = '';\n                this.menuContainer.classList.add(belowEdgeClassName);\n            }\n            else {\n                this.sidebarContainer.style.transform = '';\n                this.sidebarContainer.style.paddingBottom = `${-y}px`;\n                this.menuContainer.classList.remove(belowEdgeClassName);\n            }\n        });\n        this.closeButton = document.createElement('button');\n        this.closeButton.classList.add('drag-elem');\n        // The close button has default focus -- forward its events to the main editor so that keyboard\n        // shortcuts still work.\n        this.editor.handleKeyEventsFrom(this.closeButton, (event) => {\n            // Don't send\n            return event.code !== 'Space' && event.code !== 'Enter' && event.code !== 'Tab';\n        });\n        // Close the sidebar when pressing escape\n        this.sidebarContainer.addEventListener('keyup', (event) => {\n            if (!event.defaultPrevented && event.code === 'Escape') {\n                this.sidebarVisible.set(false);\n                event.preventDefault();\n            }\n        });\n        this.initDragListeners();\n        // Initialize the layout manager\n        const setSidebarContent = (...content) => {\n            this.sidebarContent.replaceChildren(...content);\n            this.setupColorPickers();\n        };\n        this.sidebarTitle = MutableReactiveValue.fromInitialValue('');\n        this.layoutManager = new EdgeToolbarLayoutManager(setSidebarContent, this.sidebarTitle, this.sidebarVisible, editor.announceForAccessibility.bind(editor), localizationTable);\n        this.sidebarTitle.onUpdateAndNow((title) => {\n            this.closeButton.setAttribute('aria-label', localizationTable.closeSidebar(title));\n        });\n        // Make things visible/keep hidden.\n        this.listenForVisibilityChanges();\n        this.sidebarContainer.replaceChildren(this.closeButton, this.sidebarContent);\n        this.menuContainer.replaceChildren(this.sidebarContainer);\n        parent.appendChild(this.menuContainer);\n    }\n    listenForVisibilityChanges() {\n        let animationTimeout = null;\n        const animationDuration = 170;\n        if (!this.sidebarVisible.get()) {\n            this.menuContainer.style.display = 'none';\n            // Set the initial opacity to 0 to allow the `transition` property\n            // to animate it to 1.\n            this.menuContainer.style.opacity = '0';\n        }\n        const prefersReduceMotion = window.matchMedia?.('(prefers-reduced-motion: reduce)') ?? '';\n        this.sidebarVisible.onUpdate((visible) => {\n            const animationProperties = `${animationDuration}ms ease`;\n            // We need to use different animations when reducing motion.\n            const reduceMotion = prefersReduceMotion.matches ? '-reduce-motion' : '';\n            if (visible) {\n                this.sidebarY.set(this.snappedSidebarY());\n                if (animationTimeout) {\n                    clearTimeout(animationTimeout);\n                    animationTimeout = null;\n                }\n                this.menuContainer.style.display = '';\n                this.sidebarContainer.style.animation = `${animationProperties} ${toolbarCSSPrefix}-edgemenu-transition-in${reduceMotion}`;\n                this.menuContainer.style.animation = `${animationProperties} ${toolbarCSSPrefix}-edgemenu-container-transition-in${reduceMotion}`;\n                this.menuContainer.style.opacity = '1';\n                // Focus the close button when first shown, but prevent scroll because the button\n                // is likely at the bottom of the screen (and we want the full sidebar to remain\n                // visible).\n                this.closeButton.focus({ preventScroll: true });\n            }\n            else {\n                this.closeColorPickers();\n                if (animationTimeout === null) {\n                    this.sidebarContainer.style.animation = `${animationProperties} ${toolbarCSSPrefix}-edgemenu-transition-out${reduceMotion}`;\n                    this.menuContainer.style.animation = `${animationProperties} ${toolbarCSSPrefix}-edgemenu-container-transition-out${reduceMotion}`;\n                    // Manually set the container's opacity to prevent flickering when closing\n                    // the toolbar.\n                    this.menuContainer.style.opacity = '0';\n                    // Hide overflow -- don't show the part of the edge toolbar that's outside of\n                    // the editor.\n                    //this.menuContainer.style.overflowY = 'hidden';\n                    this.editor.announceForAccessibility(this.localizationTable.dropdownHidden(this.sidebarTitle.get()));\n                    animationTimeout = setTimeout(() => {\n                        this.menuContainer.style.display = 'none';\n                        this.menuContainer.style.overflowY = '';\n                        animationTimeout = null;\n                    }, animationDuration);\n                }\n            }\n        });\n    }\n    onToolbarRowResize() {\n        const setExtraPadding = () => {\n            const visibleWidth = this.toolbarToolRow.clientWidth;\n            // Determine whether extra spacing needs to be added so that one button is cut\n            // in half. Ideally, when there is scroll, one button will be cut in half to show\n            // that scrolling is possible.\n            let currentWidth = 0;\n            let extraPadding = 0;\n            let numVisibleButtons = 0;\n            for (const child of this.toolbarToolRow.children) {\n                // Use the first child -- padding is applied around that child. Assumes\n                // that the button's width is its height plus some padding.\n                const buttonBaseSize = child.clientHeight;\n                currentWidth += buttonBaseSize;\n                numVisibleButtons++;\n                if (currentWidth > visibleWidth) {\n                    // We want extraPadding + (currentWidth - buttonWidth / 2) = visibleWidth.\n                    // Thus, extraPadding = visibleWidth - currentWidth + buttonWidth / 2;\n                    extraPadding = visibleWidth - currentWidth + buttonBaseSize / 2;\n                    // Ensure that the padding is positive\n                    if (extraPadding < 0) {\n                        extraPadding += buttonBaseSize;\n                    }\n                    break;\n                }\n            }\n            const perButtonPadding = Math.round((extraPadding / numVisibleButtons) * 10) / 10;\n            this.toolbarToolRow.style.setProperty('--extra-left-right-padding', `${perButtonPadding}px`);\n        };\n        const actionRowBBox = this.toolbarActionRow.getBoundingClientRect();\n        const toolbarRowBBox = this.toolbarToolRow.getBoundingClientRect();\n        const onDifferentRows = actionRowBBox.y + actionRowBBox.height <= toolbarRowBBox.y;\n        if (onDifferentRows) {\n            this.toolbarContainer.classList.remove('one-row');\n        }\n        else {\n            this.toolbarContainer.classList.add('one-row');\n        }\n        if (this.toolbarToolRow.clientWidth < this.toolbarToolRow.scrollWidth) {\n            this.toolbarToolRow.classList.add('has-scroll');\n            // Note: This can potentially change the size of the tool row.\n            // Because this is run inside of a ResizeObserver callback, special\n            // care must be taken to ensure that this change doesn't re-trigger\n            // the resize observer.\n            setExtraPadding();\n        }\n        else {\n            this.toolbarToolRow.classList.remove('has-scroll', 'extra-padding');\n        }\n    }\n    addSpacer(_options) {\n        //throw new Error('Method not implemented.');\n        // Unused for this toolbar.\n    }\n    addUndoRedoButtons() {\n        super.addUndoRedoButtons(false);\n    }\n    addDefaults() {\n        this.addDefaultActionButtons();\n        this.addDefaultToolWidgets();\n    }\n    updateWidgetCSSClasses(widget) {\n        const tags = widget.getTags();\n        widget.removeCSSClassFromContainer('label-inline');\n        widget.removeCSSClassFromContainer('label-left');\n        widget.removeCSSClassFromContainer('label-right');\n        if (tags.includes(ToolbarWidgetTag.Save)) {\n            widget.addCSSClassToContainer('label-inline');\n            widget.addCSSClassToContainer('label-left');\n        }\n        if (tags.includes(ToolbarWidgetTag.Exit)) {\n            widget.addCSSClassToContainer('label-inline');\n            widget.addCSSClassToContainer('label-right');\n        }\n    }\n    addWidgetInternal(widget) {\n        this.updateWidgetCSSClasses(widget);\n        widget.setLayoutManager(this.layoutManager);\n        if (widget.mustBeInToplevelMenu()) {\n            widget.addTo(this.toolbarActionRow);\n        }\n        else {\n            widget.addTo(this.toolbarToolRow);\n        }\n    }\n    removeWidgetInternal(widget) {\n        widget.remove();\n    }\n    onRemove() {\n        this.toolbarContainer.remove();\n        this.menuContainer.remove();\n        this.toolRowResizeObserver.disconnect();\n        this.clearDragListeners?.();\n    }\n    initDragListeners() {\n        const dragElements = [this.closeButton, this.sidebarContainer, this.sidebarContent];\n        // Forward longer touch events from the menu background to the\n        // editor (and close the sidebar).\n        this.manageListener(this.editor.handlePointerEventsExceptClicksFrom(this.menuContainer, (eventName, event) => {\n            if (event.target === this.menuContainer) {\n                if (eventName === 'pointerdown') {\n                    this.sidebarVisible.set(false);\n                    // A delay seems necessary for the editor\n                    setTimeout(() => this.editor.focus(), 0);\n                }\n                return true;\n            }\n            if (!this.sidebarVisible.get()) {\n                return true;\n            }\n            // Don't send pointer events that don't directly target mainContainer\n            // to the editor\n            return false;\n        }, (_eventName, event) => {\n            return event.target === this.menuContainer;\n        }));\n        // Set lastGestureWasRoughlyClick to `true` initially because on page load\n        // performance.now() is zero.\n        let lastGestureWasRoughlyClick = true;\n        let gestureEndTimestamp = 0;\n        const dragController = makeDraggable(this.sidebarContainer, {\n            draggableChildElements: dragElements,\n            onDrag: (deltaX, deltaY) => this.handleDrag(deltaX, deltaY),\n            onDragEnd: (dragStatistics) => {\n                gestureEndTimestamp = dragStatistics.endTimestamp;\n                lastGestureWasRoughlyClick = dragStatistics.roughlyClick;\n                this.finalizeDrag();\n            },\n        });\n        this.clearDragListeners = () => dragController.removeListeners();\n        this.closeButton.onclick = () => {\n            const wasJustDragging = performance.now() - gestureEndTimestamp < 100;\n            // Ignore the click event if it was caused by dragging the button.\n            if ((wasJustDragging && lastGestureWasRoughlyClick) || !wasJustDragging) {\n                this.sidebarVisible.set(false);\n            }\n        };\n    }\n    /**\n     * Updates the position of this menu **during** a drag. After a drag ends,\n     * {@link finalizeDrag} should be called.\n     */\n    handleDrag(_deltaX, deltaY) {\n        this.sidebarContainer.style.transition = 'none';\n        this.sidebarY.set(this.sidebarY.get() + deltaY);\n    }\n    /** Returns `this.sidebarY` rounded to a valid value. */\n    snappedSidebarY(sidebarY) {\n        const y = sidebarY ?? this.sidebarY.get();\n        const snapYs = [-100, 0];\n        // Allow some amount of scrolling if the sidebar is too tall to fit entirely\n        // in the window.\n        if (this.sidebarContainer.clientHeight > window.innerHeight) {\n            snapYs.push(100);\n        }\n        let closestSnap = snapYs[0];\n        for (const snapY of snapYs) {\n            if (Math.abs(snapY - y) < Math.abs(closestSnap - y)) {\n                closestSnap = snapY;\n            }\n        }\n        return closestSnap;\n    }\n    /**\n     * Moves the menu to a valid location or closes it, depending on\n     * the position set by the drag.\n     */\n    finalizeDrag() {\n        this.sidebarContainer.style.transition = '';\n        if (this.sidebarY.get() > this.sidebarContainer.clientHeight / 2) {\n            this.sidebarVisible.set(false);\n        }\n        else {\n            // Snap to the closest valid Y.\n            this.sidebarY.set(this.snappedSidebarY());\n        }\n    }\n    serializeInternal() {\n        return {\n            menuSizeY: this.snappedSidebarY(),\n        };\n    }\n    deserializeInternal(json) {\n        if (typeof json === 'object' && typeof json['menuSizeY'] === 'number') {\n            // Load the y-position of the sidebar  -- call snappedSidebarY to ensure validity.\n            this.sidebarY.set(this.snappedSidebarY(json['menuSizeY']));\n        }\n    }\n}\n", "import  { InputEvtType }  from '../../inputEvents.mjs';\nimport  InputMapper  from './InputMapper.mjs';\nimport  { lineLockKeyboardShortcutId, snapToGridKeyboardShortcutId }  from '../keybindings.mjs';\n/**\n * Provides keyboard shortcuts that provide some amount of control over\n * drawing (e.g. snap to grid, plane lock).\n */\nexport default class StrokeKeyboardControl extends InputMapper {\n    constructor(shortcuts, viewport) {\n        super();\n        this.shortcuts = shortcuts;\n        this.viewport = viewport;\n        this.snapToGridEnabled = false;\n        this.angleLockEnabled = false;\n        // The point at which the last pointerDown event happened (or null if\n        // no such event has occurred).\n        this.startPointCanvas = null;\n    }\n    // Snap the given pointer to the nearer of the x/y axes.\n    xyAxesSnap(pointer) {\n        if (!this.startPointCanvas) {\n            return pointer;\n        }\n        // Convert this.startPointCanvas here because the viewport might change\n        // while drawing a stroke.\n        const screenPos = this.viewport.canvasToScreen(this.startPointCanvas);\n        return pointer.lockedToXYAxesScreen(screenPos, this.viewport);\n    }\n    mapPointerEvent(event) {\n        const mapPointer = (pointer) => {\n            // Only map if there's exactly one pointer.\n            if (event.allPointers.length > 1) {\n                return pointer;\n            }\n            if (this.snapToGridEnabled) {\n                return pointer.snappedToGrid(this.viewport);\n            }\n            if (this.angleLockEnabled && this.startPointCanvas) {\n                return this.xyAxesSnap(pointer);\n            }\n            return pointer;\n        };\n        return {\n            kind: event.kind,\n            current: mapPointer(event.current),\n            allPointers: event.allPointers.map(mapPointer),\n        };\n    }\n    onEvent(event) {\n        const shortcuts = this.shortcuts;\n        if (event.kind === InputEvtType.PointerDownEvt ||\n            event.kind === InputEvtType.PointerMoveEvt ||\n            event.kind === InputEvtType.PointerUpEvt) {\n            if (event.kind === InputEvtType.PointerDownEvt) {\n                this.startPointCanvas = event.current.canvasPos;\n            }\n            event = this.mapPointerEvent(event);\n        }\n        let handled = this.emit(event);\n        if (\n        // Always check keyUpEvents (in case we handled the corresponding keyDown event)\n        event.kind === InputEvtType.KeyUpEvent ||\n            // Only handle key press events if another tool isn't handling it. We don't want\n            // snap to grid/angle lock to conflict with selection/another tool's shortcuts.\n            (!handled && event.kind === InputEvtType.KeyPressEvent)) {\n            const isKeyPress = event.kind === InputEvtType.KeyPressEvent;\n            if (shortcuts.matchesShortcut(snapToGridKeyboardShortcutId, event)) {\n                this.snapToGridEnabled = isKeyPress;\n                handled = true;\n            }\n            if (shortcuts.matchesShortcut(lineLockKeyboardShortcutId, event)) {\n                this.angleLockEnabled = isKeyPress;\n                handled = true;\n            }\n        }\n        return handled;\n    }\n    static fromEditor(editor) {\n        return new StrokeKeyboardControl(editor.shortcuts, editor.viewport);\n    }\n}\n", "// See https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values for\n// more\nconst keyToKeyCode = {\n    Control: 'ControlLeft',\n    '=': 'Equal',\n    '-': 'Minus',\n    ';': 'Semicolon',\n    ' ': 'Space',\n};\n/**\n * Attempts to guess the .code value corresponding to the given key.\n *\n * Use this to facilitate testing.\n *\n * If no matching keycode is found, returns `key`.\n */\nconst guessKeyCodeFromKey = (key) => {\n    const upperKey = key.toUpperCase();\n    if ('A' <= upperKey && upperKey <= 'Z') {\n        return `Key${upperKey}`;\n    }\n    if ('0' <= key && key <= '9') {\n        return `Digit${key}`;\n    }\n    if (key in keyToKeyCode) {\n        return keyToKeyCode[key];\n    }\n    return key;\n};\nexport default guessKeyCodeFromKey;\n", "import  makeMessageDialog  from './makeMessageDialog.mjs';\nconst makeAboutDialog = (editor, entries) => {\n    const dialog = makeMessageDialog(editor, {\n        title: editor.localization.about,\n        contentClassNames: ['about-dialog-content'],\n    });\n    for (const entry of entries) {\n        const container = document.createElement(entry.minimized ? 'details' : 'div');\n        container.classList.add('about-entry');\n        const header = document.createElement(entry.minimized ? 'summary' : 'h2');\n        if (typeof entry.heading === 'string') {\n            header.innerText = entry.heading;\n        }\n        else {\n            const link = document.createElement('a');\n            link.href = entry.heading.href.replace(/^javascript:/i, '');\n            link.text = entry.heading.text;\n            header.appendChild(link);\n        }\n        container.appendChild(header);\n        if (entry.text) {\n            const bodyText = document.createElement('div');\n            bodyText.innerText = entry.text;\n            container.appendChild(bodyText);\n        }\n        dialog.appendChild(container);\n    }\n    return {\n        close: () => {\n            return dialog.close();\n        },\n    };\n};\nexport default makeAboutDialog;\n", "/**\n * Contains the current version of the library -- used\n * internaly (e.g. for documentation).\n * @internal\n */\nexport default {\n    // Note: Auto-updated by prebuild.js:\n    number: '1.29.0',\n};\n", "import { toRoundedString } from '@js-draw/math';\n// @internal\nconst adjustExportedSVGSize = (svg, exportRect, options) => {\n    // Adjust the width/height as necessary\n    let width = exportRect.w;\n    let height = exportRect.h;\n    if (options?.minDimension && width < options.minDimension) {\n        const newWidth = options.minDimension;\n        height *= newWidth / (width || 1);\n        width = newWidth;\n    }\n    if (options?.minDimension && height < options.minDimension) {\n        const newHeight = options.minDimension;\n        width *= newHeight / (height || 1);\n        height = newHeight;\n    }\n    svg.setAttribute('width', toRoundedString(width));\n    svg.setAttribute('height', toRoundedString(height));\n};\nexport default adjustExportedSVGSize;\n", "import { Rect2 } from '@js-draw/math';\nimport  SVGRenderer  from '../../rendering/renderers/SVGRenderer.mjs';\nimport  { svgLoaderAutoresizeClassName }  from '../../SVGLoader/SVGLoader.mjs';\nimport  adjustExportedSVGSize  from './adjustExportedSVGSize.mjs';\nconst toSVGInternal = (image, renderFunction, options) => {\n    const importExportViewport = image.getImportExportViewport().getTemporaryClone();\n    // If the rectangle has zero width or height, its size can't be increased\n    // -- set its size to the minimum.\n    if (options?.minDimension) {\n        const originalRect = importExportViewport.visibleRect;\n        let rect = originalRect;\n        if (rect.w <= 0) {\n            rect = new Rect2(rect.x, rect.y, options.minDimension, rect.h);\n        }\n        if (rect.h <= 0) {\n            rect = new Rect2(rect.x, rect.y, rect.w, options.minDimension);\n        }\n        if (!rect.eq(originalRect)) {\n            importExportViewport.updateScreenSize(rect.size);\n        }\n    }\n    const { element: result, renderer } = SVGRenderer.fromViewport(importExportViewport, {\n        sanitize: options.sanitize ?? false,\n        useViewBoxForPositioning: true,\n    });\n    // Use a callback rather than async/await to allow this function to create\n    // both sync and async render functions\n    renderFunction(renderer, () => {\n        if (image.getAutoresizeEnabled()) {\n            result.classList.add(svgLoaderAutoresizeClassName);\n        }\n        else {\n            result.classList.remove(svgLoaderAutoresizeClassName);\n        }\n        const exportRect = importExportViewport.visibleRect;\n        adjustExportedSVGSize(result, exportRect, options);\n        return result;\n    });\n    return result;\n};\nexport const editorImageToSVGSync = (image, options) => {\n    return toSVGInternal(image, (renderer, onComplete) => {\n        image.renderAll(renderer);\n        onComplete();\n    }, options);\n};\nexport const editorImageToSVGAsync = (image, preRenderComponent, options) => {\n    return new Promise((resolve) => {\n        toSVGInternal(image, async (renderer, onComplete) => {\n            await image.renderAllAsync(renderer, preRenderComponent);\n            const result = onComplete();\n            resolve(result);\n        }, options);\n    });\n};\n", "/**\n * Calls `callbacks` when different keys are known to be pressed.\n *\n * `filter` can be used to ignore events.\n *\n * This includes keys that didn't trigger a keydown or keyup event, but did cause\n * shiftKey/altKey/metaKey/etc. properties to change on other events (e.g. mousemove\n * events). Artifical events are created for these changes and sent to `callbacks`.\n */\nconst listenForKeyboardEventsFrom = (elem, callbacks) => {\n    // Track which keys are down so we can release them when the element\n    // loses focus. This is particularly important for keys like Control\n    // that can trigger shortcuts that cause the editor to lose focus before\n    // the keyup event is triggered.\n    let keysDown = [];\n    // Return whether two objects that are similar to keyboard events represent the\n    // same key.\n    const keyEventsMatch = (a, b) => {\n        return a.key === b.key && a.code === b.code;\n    };\n    const isKeyDown = (keyEvent) => {\n        return keysDown.some((other) => keyEventsMatch(other, keyEvent));\n    };\n    const keyEventToRecord = (event) => {\n        return {\n            code: event.code,\n            key: event.key,\n            ctrlKey: event.ctrlKey,\n            altKey: event.altKey,\n            shiftKey: event.shiftKey,\n            metaKey: event.metaKey,\n        };\n    };\n    const handleKeyEvent = (htmlEvent) => {\n        if (htmlEvent.type === 'keydown') {\n            // Add event to the list of keys that are down (so long as it\n            // isn't a duplicate).\n            if (!isKeyDown(htmlEvent)) {\n                // Destructructring, then pushing seems to cause\n                // data loss. Copy properties individually:\n                keysDown.push(keyEventToRecord(htmlEvent));\n            }\n            if (!callbacks.filter(htmlEvent)) {\n                return;\n            }\n            callbacks.handleKeyDown(htmlEvent);\n        }\n        else {\n            // keyup\n            console.assert(htmlEvent.type === 'keyup');\n            // Remove the key from keysDown -- it's no longer down.\n            keysDown = keysDown.filter((event) => {\n                const matches = keyEventsMatch(event, htmlEvent);\n                return !matches;\n            });\n            if (!callbacks.filter(htmlEvent)) {\n                return;\n            }\n            callbacks.handleKeyUp(htmlEvent);\n        }\n    };\n    elem.addEventListener('keydown', (htmlEvent) => {\n        handleKeyEvent(htmlEvent);\n    });\n    elem.addEventListener('keyup', (htmlEvent) => {\n        handleKeyEvent(htmlEvent);\n    });\n    elem.addEventListener('focusout', (focusEvent) => {\n        let stillHasFocus = false;\n        if (focusEvent.relatedTarget) {\n            const relatedTarget = focusEvent.relatedTarget;\n            stillHasFocus =\n                elem.contains(relatedTarget) || callbacks.getHandlesKeyEventsFrom(relatedTarget);\n        }\n        if (!stillHasFocus) {\n            for (const event of keysDown) {\n                callbacks.handleKeyUp(new KeyboardEvent('keyup', {\n                    ...event,\n                }));\n            }\n            keysDown = [];\n        }\n    });\n    const fireArtificalEventsBasedOn = (htmlEvent) => {\n        let wasShiftDown = false;\n        let wasCtrlDown = false;\n        let wasAltDown = false;\n        let wasMetaDown = false;\n        for (const otherEvent of keysDown) {\n            const code = otherEvent.code;\n            wasShiftDown ||= !!code.match(/^Shift(Left|Right)$/);\n            wasCtrlDown ||= !!code.match(/^Control(Left|Right)$/);\n            wasAltDown ||= !!code.match(/^Alt(Left|Right)$/);\n            wasMetaDown ||= !!code.match(/^Meta(Left|Right)$/);\n        }\n        const eventName = (isDown) => {\n            if (isDown) {\n                return 'keydown';\n            }\n            else {\n                return 'keyup';\n            }\n        };\n        const eventInitDefaults = {\n            shiftKey: htmlEvent.shiftKey,\n            altKey: htmlEvent.altKey,\n            metaKey: htmlEvent.metaKey,\n            ctrlKey: htmlEvent.ctrlKey,\n        };\n        if (htmlEvent.shiftKey !== wasShiftDown) {\n            handleKeyEvent(new KeyboardEvent(eventName(htmlEvent.shiftKey), {\n                ...eventInitDefaults,\n                key: 'Shift',\n                code: 'ShiftLeft',\n            }));\n        }\n        if (htmlEvent.altKey !== wasAltDown) {\n            handleKeyEvent(new KeyboardEvent(eventName(htmlEvent.altKey), {\n                ...eventInitDefaults,\n                key: 'Alt',\n                code: 'AltLeft',\n            }));\n        }\n        if (htmlEvent.ctrlKey !== wasCtrlDown) {\n            handleKeyEvent(new KeyboardEvent(eventName(htmlEvent.ctrlKey), {\n                ...eventInitDefaults,\n                key: 'Control',\n                code: 'ControlLeft',\n            }));\n        }\n        if (htmlEvent.metaKey !== wasMetaDown) {\n            handleKeyEvent(new KeyboardEvent(eventName(htmlEvent.metaKey), {\n                ...eventInitDefaults,\n                key: 'Meta',\n                code: 'MetaLeft',\n            }));\n        }\n    };\n    elem.addEventListener('mousedown', (htmlEvent) => {\n        fireArtificalEventsBasedOn(htmlEvent);\n    });\n    elem.addEventListener('mousemove', (htmlEvent) => {\n        fireArtificalEventsBasedOn(htmlEvent);\n    });\n};\nexport default listenForKeyboardEventsFrom;\n", "const mitLicenseAttribution = (copyright) => {\n    const removeSingleLineBreaks = (text) => text.replace(/([^\\n])[\\n]([^\\n])/g, '$1 $2');\n    return removeSingleLineBreaks(`\nMIT License\n\nCopyright (c) ${copyright}\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.`);\n};\nexport default mitLicenseAttribution;\n", "import  { InputEvtType, isPointerEvt }  from '../../inputEvents.mjs';\nimport  InputMapper  from './InputMapper.mjs';\nimport  StationaryPenDetector, { defaultStationaryDetectionConfig, }  from '../util/StationaryPenDetector.mjs';\nimport  { PointerDevice }  from '../../Pointer.mjs';\nexport default class ContextMenuRecognizer extends InputMapper {\n    constructor() {\n        super();\n        this.canShowContextMenu = false;\n        this.stationaryDetector = null;\n        this.clickTolerance = 12;\n    }\n    /**\n     * In general, only certain events (i.e. touchscreens) are expected to be able to\n     * create long-press menus. This method checks whether `event` was generated by\n     * one such device.\n     */\n    canMakeLongPressMenuEvent(event) {\n        const allowedDevices = [PointerDevice.Touch];\n        return event.allPointers.length === 1 && allowedDevices.includes(event.current.device);\n    }\n    onEvent(event) {\n        const sendContextMenuEvent = () => {\n            if (!isPointerEvt(event))\n                return false;\n            if (this.canShowContextMenu) {\n                const eventHandled = this.emit({\n                    kind: InputEvtType.ContextMenu,\n                    screenPos: event.current.screenPos,\n                    canvasPos: event.current.canvasPos,\n                });\n                if (eventHandled) {\n                    this.emit({\n                        kind: InputEvtType.GestureCancelEvt,\n                    });\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (event.kind === InputEvtType.PointerDownEvt) {\n            if (event.allPointers.length === 1) {\n                this.canShowContextMenu = true;\n                this.contextMenuTriggerPointer = event.current;\n                this.contextMenuStartPoint = event.current.screenPos;\n                if (this.canMakeLongPressMenuEvent(event)) {\n                    this.stationaryDetector = new StationaryPenDetector(event.current, defaultStationaryDetectionConfig, sendContextMenuEvent);\n                }\n            }\n            else {\n                this.canShowContextMenu = false;\n            }\n        }\n        else if (event.kind === InputEvtType.PointerMoveEvt) {\n            if (this.canShowContextMenu) {\n                this.stationaryDetector?.onPointerMove(event.current);\n                // Only clicks/stationary long presses can create context menu events.\n                const deltaPosition = event.current.screenPos.minus(this.contextMenuStartPoint);\n                const threshold = this.clickTolerance;\n                if (deltaPosition.length() > threshold) {\n                    this.canShowContextMenu = false;\n                }\n            }\n        }\n        else if (event.kind === InputEvtType.PointerUpEvt) {\n            this.stationaryDetector?.destroy();\n            if (this.contextMenuTriggerPointer?.id === event.current.id &&\n                this.contextMenuTriggerPointer.device === PointerDevice.RightButtonMouse &&\n                sendContextMenuEvent()) {\n                return true;\n            }\n        }\n        return this.emit(event);\n    }\n}\n", "import  EditorImage  from './image/EditorImage.mjs';\nimport  ToolController  from './tools/ToolController.mjs';\nimport  { EditorEventType }  from './types.mjs';\nimport  { InputEvtType, keyUpEventFromHTMLEvent, keyPressEventFromHTMLEvent, }  from './inputEvents.mjs';\nimport  UndoRedoHistory  from './UndoRedoHistory.mjs';\nimport  Viewport  from './Viewport.mjs';\nimport  EventDispatcher  from './EventDispatcher.mjs';\nimport { Vec2, Vec3, Color4, Mat33, Rect2 } from '@js-draw/math';\nimport  Display, { RenderingMode }  from './rendering/Display.mjs';\nimport  SVGLoader  from './SVGLoader/SVGLoader.mjs';\nimport  Pointer  from './Pointer.mjs';\nimport  getLocalizationTable  from './localizations/getLocalizationTable.mjs';\nimport  IconProvider  from './toolbar/IconProvider.mjs';\nimport  CanvasRenderer  from './rendering/renderers/CanvasRenderer.mjs';\nimport  untilNextAnimationFrame  from './util/untilNextAnimationFrame.mjs';\nimport  uniteCommands  from './commands/uniteCommands.mjs';\nimport  SelectionTool  from './tools/SelectionTool/SelectionTool.mjs';\nimport  Erase  from './commands/Erase.mjs';\nimport  BackgroundComponent, { BackgroundType }  from './components/BackgroundComponent.mjs';\nimport  sendPenEvent  from './testing/sendPenEvent.mjs';\nimport  KeyboardShortcutManager  from './shortcuts/KeyboardShortcutManager.mjs';\nimport  EdgeToolbar  from './toolbar/EdgeToolbar.mjs';\nimport  StrokeKeyboardControl  from './tools/InputFilter/StrokeKeyboardControl.mjs';\nimport  guessKeyCodeFromKey  from './util/guessKeyCodeFromKey.mjs';\nimport  makeAboutDialog  from './dialogs/makeAboutDialog.mjs';\nimport  version  from './version.mjs';\nimport  { editorImageToSVGSync, editorImageToSVGAsync }  from './image/export/editorImageToSVG.mjs';\nimport  ReactiveValue, { MutableReactiveValue }  from './util/ReactiveValue.mjs';\nimport  listenForKeyboardEventsFrom  from './util/listenForKeyboardEventsFrom.mjs';\nimport  mitLicenseAttribution  from './util/mitLicenseAttribution.mjs';\nimport  ClipboardHandler  from './util/ClipboardHandler.mjs';\nimport  ContextMenuRecognizer  from './tools/InputFilter/ContextMenuRecognizer.mjs';\n/**\n * The main entrypoint for the full editor.\n *\n * ## Example\n * To create an editor with a toolbar,\n * ```ts,runnable\n * import { Editor } from 'js-draw';\n *\n * const editor = new Editor(document.body);\n *\n * const toolbar = editor.addToolbar();\n * toolbar.addSaveButton(() => {\n *   const saveData = editor.toSVG().outerHTML;\n *   // Do something with saveData...\n * });\n * ```\n *\n * See also\n * * [`examples.md`](https://github.com/personalizedrefrigerator/js-draw/blob/main/docs/examples.md).\n */\nexport class Editor {\n    /**\n     * @example\n     * ```ts,runnable\n     * import { Editor } from 'js-draw';\n     *\n     * const container = document.body;\n     *\n     * // Create an editor\n     * const editor = new Editor(container, {\n     *   // 2e-10 and 1e12 are the default values for minimum/maximum zoom.\n     *   minZoom: 2e-10,\n     *   maxZoom: 1e12,\n     * });\n     *\n     * // Add the default toolbar\n     * const toolbar = editor.addToolbar();\n     *\n     * const createCustomIcon = () => {\n     *   // Create/return an icon here.\n     * };\n     *\n     * // Add a custom button\n     * toolbar.addActionButton({\n     *   label: 'Custom Button'\n     *   icon: createCustomIcon(),\n     * }, () => {\n     *   // Do something here\n     * });\n     * ```\n     */\n    constructor(parent, settings = {}) {\n        this.eventListenerTargets = [];\n        this.previousAccessibilityAnnouncement = '';\n        this.pointers = {};\n        this.announceUndoCallback = (command) => {\n            this.announceForAccessibility(this.localization.undoAnnouncement(command.description(this, this.localization)));\n        };\n        this.announceRedoCallback = (command) => {\n            this.announceForAccessibility(this.localization.redoAnnouncement(command.description(this, this.localization)));\n        };\n        // Listeners to be called once at the end of the next re-render.\n        this.nextRerenderListeners = [];\n        this.rerenderQueued = false;\n        this.closeAboutDialog = null;\n        this.localization = {\n            ...getLocalizationTable(),\n            ...settings.localization,\n        };\n        // Fill default settings.\n        this.settings = {\n            wheelEventsEnabled: settings.wheelEventsEnabled ?? true,\n            renderingMode: settings.renderingMode ?? RenderingMode.CanvasRenderer,\n            localization: this.localization,\n            minZoom: settings.minZoom ?? 2e-10,\n            maxZoom: settings.maxZoom ?? 1e12,\n            keyboardShortcutOverrides: settings.keyboardShortcutOverrides ?? {},\n            iconProvider: settings.iconProvider ?? new IconProvider(),\n            notices: settings.notices ?? [],\n            appInfo: settings.appInfo ? { ...settings.appInfo } : null,\n            pens: {\n                additionalPenTypes: settings.pens?.additionalPenTypes ?? [],\n                filterPenTypes: settings.pens?.filterPenTypes ?? (() => true),\n            },\n            text: {\n                fonts: settings.text?.fonts ?? ['sans-serif', 'serif', 'monospace'],\n            },\n            image: {\n                showImagePicker: settings.image?.showImagePicker ?? undefined,\n            },\n            svg: {\n                loaderPlugins: settings.svg?.loaderPlugins ?? [],\n            },\n            clipboardApi: settings.clipboardApi ?? null,\n        };\n        // Validate settings\n        if (this.settings.minZoom > this.settings.maxZoom) {\n            throw new Error('Minimum zoom must be lesser than maximum zoom!');\n        }\n        this.readOnly = MutableReactiveValue.fromInitialValue(false);\n        this.icons = this.settings.iconProvider;\n        this.shortcuts = new KeyboardShortcutManager(this.settings.keyboardShortcutOverrides);\n        this.container = document.createElement('div');\n        this.renderingRegion = document.createElement('div');\n        this.container.appendChild(this.renderingRegion);\n        this.container.classList.add('imageEditorContainer', 'js-draw');\n        this.loadingWarning = document.createElement('div');\n        this.loadingWarning.classList.add('loadingMessage');\n        this.loadingWarning.ariaLive = 'polite';\n        this.container.appendChild(this.loadingWarning);\n        this.accessibilityControlArea = document.createElement('textarea');\n        this.accessibilityControlArea.setAttribute('placeholder', this.localization.accessibilityInputInstructions);\n        this.accessibilityControlArea.style.opacity = '0';\n        this.accessibilityControlArea.style.width = '0';\n        this.accessibilityControlArea.style.height = '0';\n        this.accessibilityControlArea.style.position = 'absolute';\n        this.accessibilityAnnounceArea = document.createElement('div');\n        this.accessibilityAnnounceArea.setAttribute('aria-live', 'assertive');\n        this.accessibilityAnnounceArea.className = 'accessibilityAnnouncement';\n        this.container.appendChild(this.accessibilityAnnounceArea);\n        this.renderingRegion.style.touchAction = 'none';\n        this.renderingRegion.className = 'imageEditorRenderArea';\n        this.renderingRegion.appendChild(this.accessibilityControlArea);\n        this.renderingRegion.setAttribute('tabIndex', '0');\n        this.renderingRegion.setAttribute('alt', '');\n        this.notifier = new EventDispatcher();\n        this.viewport = new Viewport((oldTransform, newTransform) => {\n            this.notifier.dispatch(EditorEventType.ViewportChanged, {\n                kind: EditorEventType.ViewportChanged,\n                newTransform,\n                oldTransform,\n            });\n        });\n        this.display = new Display(this, this.settings.renderingMode, this.renderingRegion);\n        this.image = new EditorImage();\n        this.history = new UndoRedoHistory(this, this.announceRedoCallback, this.announceUndoCallback);\n        this.toolController = new ToolController(this, this.localization);\n        // TODO: Make this pipeline configurable (e.g. allow users to add global input stabilization)\n        this.toolController.addInputMapper(StrokeKeyboardControl.fromEditor(this));\n        this.toolController.addInputMapper(new ContextMenuRecognizer());\n        parent.appendChild(this.container);\n        this.viewport.updateScreenSize(Vec2.of(this.display.width, this.display.height));\n        this.registerListeners();\n        this.queueRerender();\n        this.hideLoadingWarning();\n        // Enforce zoom limits.\n        this.notifier.on(EditorEventType.ViewportChanged, (evt) => {\n            if (evt.kind !== EditorEventType.ViewportChanged)\n                return;\n            const getZoom = (mat) => mat.transformVec3(Vec2.unitX).length();\n            const zoom = getZoom(evt.newTransform);\n            if (zoom > this.settings.maxZoom || zoom < this.settings.minZoom) {\n                const oldZoom = getZoom(evt.oldTransform);\n                let resetTransform = Mat33.identity;\n                if (oldZoom <= this.settings.maxZoom && oldZoom >= this.settings.minZoom) {\n                    resetTransform = evt.oldTransform;\n                }\n                else {\n                    // If 1x zoom isn't acceptable, try a zoom between the minimum and maximum.\n                    resetTransform = Mat33.scaling2D((this.settings.minZoom + this.settings.maxZoom) / 2);\n                }\n                this.viewport.resetTransform(resetTransform);\n            }\n            else if (!isFinite(zoom)) {\n                // Recover from possible division-by-zero\n                console.warn(`Non-finite zoom (${zoom}) detected. Resetting the viewport. This was likely caused by division by zero.`);\n                if (isFinite(getZoom(evt.oldTransform))) {\n                    this.viewport.resetTransform(evt.oldTransform);\n                }\n                else {\n                    this.viewport.resetTransform();\n                }\n            }\n        });\n    }\n    /**\n     * @returns a shallow copy of the current settings of the editor.\n     *\n     * Do not modify.\n     */\n    getCurrentSettings() {\n        return {\n            ...this.settings,\n        };\n    }\n    /**\n     * @returns a reference to the editor's container.\n     *\n     * @example\n     * ```\n     *   // Set the editor's height to 500px\n     *   editor.getRootElement().style.height = '500px';\n     * ```\n     */\n    getRootElement() {\n        return this.container;\n    }\n    /**\n     * @returns the bounding box of the main rendering region of the editor in the HTML viewport.\n     *\n     * @internal\n     */\n    getOutputBBoxInDOM() {\n        return Rect2.of(this.renderingRegion.getBoundingClientRect());\n    }\n    /**\n     * Shows a \"Loading...\" message.\n     * @param fractionLoaded - should be a number from 0 to 1, where 1 represents completely loaded.\n     */\n    showLoadingWarning(fractionLoaded) {\n        const loadingPercent = Math.round(fractionLoaded * 100);\n        this.loadingWarning.innerText = this.localization.loading(loadingPercent);\n        this.loadingWarning.style.display = 'block';\n    }\n    /** @see {@link showLoadingWarning} */\n    hideLoadingWarning() {\n        this.loadingWarning.style.display = 'none';\n        this.announceForAccessibility(this.localization.doneLoading);\n    }\n    /**\n     * Announce `message` for screen readers. If `message` is the same as the previous\n     * message, it is re-announced.\n     */\n    announceForAccessibility(message) {\n        // Force re-announcing an announcement if announced again.\n        if (message === this.previousAccessibilityAnnouncement) {\n            message = message + '. ';\n        }\n        this.accessibilityAnnounceArea.innerText = message;\n        this.previousAccessibilityAnnouncement = message;\n    }\n    /**\n     * Creates a toolbar. If `defaultLayout` is true, default buttons are used.\n     * @returns a reference to the toolbar.\n     */\n    addToolbar(defaultLayout = true) {\n        const toolbar = new EdgeToolbar(this, this.container, this.localization);\n        if (defaultLayout) {\n            toolbar.addDefaults();\n        }\n        return toolbar;\n    }\n    registerListeners() {\n        this.handlePointerEventsFrom(this.renderingRegion);\n        this.handleKeyEventsFrom(this.renderingRegion);\n        this.handlePointerEventsFrom(this.accessibilityAnnounceArea);\n        // Prevent selected text from control areas from being dragged.\n        // See https://github.com/personalizedrefrigerator/joplin-plugin-freehand-drawing/issues/8\n        const preventSelectionOf = [\n            this.renderingRegion,\n            this.accessibilityAnnounceArea,\n            this.accessibilityControlArea,\n            this.loadingWarning,\n        ];\n        for (const element of preventSelectionOf) {\n            element.addEventListener('drag', (event) => {\n                event.preventDefault();\n                return false;\n            });\n            element.addEventListener('dragstart', (event) => {\n                event.preventDefault();\n                return false;\n            });\n        }\n        this.container.addEventListener('wheel', (evt) => {\n            this.handleHTMLWheelEvent(evt);\n        });\n        const handleResize = () => {\n            this.viewport.updateScreenSize(Vec2.of(this.display.width, this.display.height));\n            this.rerender();\n            this.updateEditorSizeVariables();\n        };\n        if ('ResizeObserver' in window) {\n            const resizeObserver = new ResizeObserver(handleResize);\n            resizeObserver.observe(this.renderingRegion);\n            resizeObserver.observe(this.container);\n        }\n        else {\n            addEventListener('resize', handleResize);\n        }\n        this.accessibilityControlArea.addEventListener('input', () => {\n            this.accessibilityControlArea.value = '';\n        });\n        const copyHandler = new ClipboardHandler(this);\n        document.addEventListener('copy', async (evt) => {\n            if (!this.isEventSink(document.querySelector(':focus'))) {\n                return;\n            }\n            copyHandler.copy(evt);\n        });\n        document.addEventListener('paste', (evt) => {\n            this.handlePaste(evt);\n        });\n    }\n    updateEditorSizeVariables() {\n        // Add CSS variables so that absolutely-positioned children of the editor can\n        // still fill the screen.\n        this.container.style.setProperty('--editor-current-width-px', `${this.container.clientWidth}px`);\n        this.container.style.setProperty('--editor-current-height-px', `${this.container.clientHeight}px`);\n        this.container.style.setProperty('--editor-current-display-width-px', `${this.renderingRegion.clientWidth}px`);\n        this.container.style.setProperty('--editor-current-display-height-px', `${this.renderingRegion.clientHeight}px`);\n    }\n    /** @internal */\n    handleHTMLWheelEvent(event) {\n        let delta = Vec3.of(event.deltaX, event.deltaY, event.deltaZ);\n        // Process wheel events if the ctrl key is down, even if disabled -- we do want to handle\n        // pinch-zooming.\n        if (!event.ctrlKey && !event.metaKey) {\n            if (!this.settings.wheelEventsEnabled) {\n                return;\n            }\n            else if (this.settings.wheelEventsEnabled === 'only-if-focused') {\n                const focusedChild = this.container.querySelector(':focus');\n                if (!focusedChild) {\n                    return;\n                }\n            }\n        }\n        if (event.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n            delta = delta.times(15);\n        }\n        else if (event.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n            delta = delta.times(100);\n        }\n        if (event.ctrlKey || event.metaKey) {\n            delta = Vec3.of(0, 0, event.deltaY);\n        }\n        // Ensure that `pos` is relative to `this.renderingRegion`\n        const bbox = this.getOutputBBoxInDOM();\n        const pos = Vec2.of(event.clientX, event.clientY).minus(bbox.topLeft);\n        if (this.toolController.dispatchInputEvent({\n            kind: InputEvtType.WheelEvt,\n            delta,\n            screenPos: pos,\n        })) {\n            event.preventDefault();\n            return true;\n        }\n        return false;\n    }\n    getPointerList() {\n        const nowTime = performance.now();\n        const res = [];\n        for (const id in this.pointers) {\n            const maxUnupdatedTime = 2000; // Maximum time without a pointer update (ms)\n            if (this.pointers[id] && nowTime - this.pointers[id].timeStamp < maxUnupdatedTime) {\n                res.push(this.pointers[id]);\n            }\n        }\n        return res;\n    }\n    /**\n     * A protected method that can override setPointerCapture in environments where it may fail\n     * (e.g. with synthetic events). @internal\n     */\n    setPointerCapture(target, pointerId) {\n        try {\n            target.setPointerCapture(pointerId);\n        }\n        catch (error) {\n            console.warn('Failed to setPointerCapture', error);\n        }\n    }\n    /** Can be overridden in a testing environment to handle synthetic events. @internal */\n    releasePointerCapture(target, pointerId) {\n        try {\n            target.releasePointerCapture(pointerId);\n        }\n        catch (error) {\n            console.warn('Failed to releasePointerCapture', error);\n        }\n    }\n    /**\n     * Dispatches a `PointerEvent` to the editor. The target element for `evt` must have the same top left\n     * as the content of the editor.\n     */\n    handleHTMLPointerEvent(eventType, evt) {\n        const eventsRelativeTo = this.renderingRegion;\n        const eventTarget = evt.target ?? this.renderingRegion;\n        if (eventType === 'pointerdown') {\n            const pointer = Pointer.ofEvent(evt, true, this.viewport, eventsRelativeTo);\n            this.pointers[pointer.id] = pointer;\n            this.setPointerCapture(eventTarget, pointer.id);\n            const event = {\n                kind: InputEvtType.PointerDownEvt,\n                current: pointer,\n                allPointers: this.getPointerList(),\n            };\n            this.toolController.dispatchInputEvent(event);\n            return true;\n        }\n        else if (eventType === 'pointermove') {\n            const pointer = Pointer.ofEvent(evt, this.pointers[evt.pointerId]?.down ?? false, this.viewport, eventsRelativeTo);\n            if (pointer.down) {\n                const prevData = this.pointers[pointer.id];\n                if (prevData) {\n                    const distanceMoved = pointer.screenPos.distanceTo(prevData.screenPos);\n                    // If the pointer moved less than two pixels, don't send a new event.\n                    if (distanceMoved < 2) {\n                        return false;\n                    }\n                }\n                this.pointers[pointer.id] = pointer;\n                if (this.toolController.dispatchInputEvent({\n                    kind: InputEvtType.PointerMoveEvt,\n                    current: pointer,\n                    allPointers: this.getPointerList(),\n                })) {\n                    evt.preventDefault();\n                }\n            }\n            return true;\n        }\n        else if (eventType === 'pointercancel' || eventType === 'pointerup') {\n            const pointer = Pointer.ofEvent(evt, false, this.viewport, eventsRelativeTo);\n            if (!this.pointers[pointer.id]) {\n                return false;\n            }\n            this.pointers[pointer.id] = pointer;\n            this.releasePointerCapture(eventTarget, pointer.id);\n            if (this.toolController.dispatchInputEvent({\n                kind: InputEvtType.PointerUpEvt,\n                current: pointer,\n                allPointers: this.getPointerList(),\n            })) {\n                evt.preventDefault();\n            }\n            delete this.pointers[pointer.id];\n            return true;\n        }\n        return eventType;\n    }\n    isEventSink(evtTarget) {\n        let currentElem = evtTarget;\n        while (currentElem !== null) {\n            for (const elem of this.eventListenerTargets) {\n                if (elem === currentElem) {\n                    return true;\n                }\n            }\n            currentElem = currentElem.parentElement;\n        }\n        return false;\n    }\n    /** @internal */\n    async handleDrop(evt) {\n        evt.preventDefault();\n        await this.handlePaste(evt);\n    }\n    /** @internal */\n    async handlePaste(evt) {\n        const target = document.querySelector(':focus') ?? evt.target;\n        if (!this.isEventSink(target)) {\n            return;\n        }\n        return await new ClipboardHandler(this).paste(evt);\n    }\n    /**\n     * Forward pointer events from `elem` to this editor. Such that right-click/right-click drag\n     * events are also forwarded, `elem`'s contextmenu is disabled.\n     *\n     * `filter` is called once per pointer event, before doing any other processing. If `filter` returns `true` the event is\n     * forwarded to the editor.\n     *\n     * **Note**: `otherEventsFilter` is like `filter`, but is called for other pointer-related\n     * events that could also be forwarded to the editor. To forward just pointer events,\n     * for example, `otherEventsFilter` could be given as `()=>false`.\n     *\n     * @example\n     * ```ts\n     * const overlay = document.createElement('div');\n     * editor.createHTMLOverlay(overlay);\n     *\n     * // Send all pointer events that don't have the control key pressed\n     * // to the editor.\n     * editor.handlePointerEventsFrom(overlay, (event) => {\n     *   if (event.ctrlKey) {\n     *     return false;\n     *   }\n     *   return true;\n     * });\n     * ```\n     */\n    handlePointerEventsFrom(elem, filter, otherEventsFilter) {\n        // May be required to prevent text selection on iOS/Safari:\n        // See https://stackoverflow.com/a/70992717/17055750\n        const touchstartListener = (evt) => {\n            if (otherEventsFilter && !otherEventsFilter('touchstart', evt)) {\n                return;\n            }\n            evt.preventDefault();\n        };\n        const contextmenuListener = (evt) => {\n            if (otherEventsFilter && !otherEventsFilter('contextmenu', evt)) {\n                return;\n            }\n            // Don't show a context menu\n            evt.preventDefault();\n        };\n        const listeners = {\n            touchstart: touchstartListener,\n            contextmenu: contextmenuListener,\n        };\n        const eventNames = [\n            'pointerdown',\n            'pointermove',\n            'pointerup',\n            'pointercancel',\n        ];\n        for (const eventName of eventNames) {\n            listeners[eventName] = (evt) => {\n                // This listener will only be called in the context of PointerEvents.\n                const event = evt;\n                if (filter && !filter(eventName, event)) {\n                    return undefined;\n                }\n                return this.handleHTMLPointerEvent(eventName, event);\n            };\n        }\n        // Add all listeners.\n        for (const eventName in listeners) {\n            elem.addEventListener(eventName, listeners[eventName]);\n        }\n        return {\n            /** Remove all event listeners registered by this function. */\n            remove: () => {\n                for (const eventName in listeners) {\n                    elem.removeEventListener(eventName, listeners[eventName]);\n                }\n            },\n        };\n    }\n    /**\n     * Like {@link handlePointerEventsFrom} except ignores short input gestures like clicks.\n     *\n     * `filter` is called once per event, before doing any other processing. If `filter` returns `true` the event is\n     * forwarded to the editor.\n     *\n     * `otherEventsFilter` is passed unmodified to `handlePointerEventsFrom`.\n     */\n    handlePointerEventsExceptClicksFrom(elem, filter, otherEventsFilter) {\n        // Maps pointer IDs to gesture start points\n        const gestureData = Object.create(null);\n        return this.handlePointerEventsFrom(elem, (eventName, event) => {\n            if (filter && !filter(eventName, event)) {\n                return false;\n            }\n            // Position of the current event.\n            // jsdom doesn't seem to support pageX/pageY -- use clientX/clientY if unavailable\n            const currentPos = Vec2.of(event.pageX ?? event.clientX, event.pageY ?? event.clientY);\n            const pointerId = event.pointerId ?? 0;\n            // Whether to send the current event to the editor\n            let sendToEditor = true;\n            if (eventName === 'pointerdown') {\n                // Buffer the event, but don't send it to the editor yet.\n                // We don't want to send single-click events, but we do want to send full strokes.\n                gestureData[pointerId] = {\n                    eventBuffer: [[eventName, event]],\n                    startPoint: currentPos,\n                    hasMovedSignificantly: false,\n                };\n                // Capture the pointer so we receive future events even if the overlay is hidden.\n                this.setPointerCapture(elem, event.pointerId);\n                // Don't send to the editor.\n                sendToEditor = false;\n            }\n            else if (eventName === 'pointermove' && gestureData[pointerId]) {\n                const gestureStartPos = gestureData[pointerId].startPoint;\n                const eventBuffer = gestureData[pointerId].eventBuffer;\n                // Skip if the pointer hasn't moved enough to not be a \"click\".\n                const strokeStartThreshold = 10;\n                const isWithinClickThreshold = gestureStartPos && currentPos.distanceTo(gestureStartPos) < strokeStartThreshold;\n                if (isWithinClickThreshold && !gestureData[pointerId].hasMovedSignificantly) {\n                    eventBuffer.push([eventName, event]);\n                    sendToEditor = false;\n                }\n                else {\n                    // Send all buffered events to the editor -- start the stroke.\n                    for (const [eventName, event] of eventBuffer) {\n                        this.handleHTMLPointerEvent(eventName, event);\n                    }\n                    gestureData[pointerId].eventBuffer = [];\n                    gestureData[pointerId].hasMovedSignificantly = true;\n                    sendToEditor = true;\n                }\n            }\n            // Pointers that aren't down -- send to the editor.\n            else if (eventName === 'pointermove') {\n                sendToEditor = true;\n            }\n            // Otherwise, if we received a pointerup/pointercancel without flushing all pointerevents from the\n            // buffer, the gesture wasn't recognised as a stroke. Thus, the editor isn't expecting a pointerup/\n            // pointercancel event.\n            else if ((eventName === 'pointerup' || eventName === 'pointercancel') &&\n                gestureData[pointerId] &&\n                gestureData[pointerId].eventBuffer.length > 0) {\n                this.releasePointerCapture(elem, event.pointerId);\n                // Don't send to the editor.\n                sendToEditor = false;\n                delete gestureData[pointerId];\n            }\n            // Forward all other events to the editor.\n            return sendToEditor;\n        }, otherEventsFilter);\n    }\n    /** @internal */\n    handleHTMLKeyDownEvent(htmlEvent) {\n        console.assert(htmlEvent.type === 'keydown', `handling a keydown event with type ${htmlEvent.type}`);\n        const event = keyPressEventFromHTMLEvent(htmlEvent);\n        if (this.toolController.dispatchInputEvent(event)) {\n            htmlEvent.preventDefault();\n            return true;\n        }\n        else if (event.key === 't' || event.key === 'T') {\n            htmlEvent.preventDefault();\n            this.display.rerenderAsText();\n            return true;\n        }\n        else if (event.key === 'Escape') {\n            this.renderingRegion.blur();\n            return true;\n        }\n        return false;\n    }\n    /** @internal */\n    handleHTMLKeyUpEvent(htmlEvent) {\n        console.assert(htmlEvent.type === 'keyup', `Handling a keyup event with type ${htmlEvent.type}`);\n        const event = keyUpEventFromHTMLEvent(htmlEvent);\n        if (this.toolController.dispatchInputEvent(event)) {\n            htmlEvent.preventDefault();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Adds event listners for keypresses (and drop events) on `elem` and forwards those\n     * events to the editor.\n     *\n     * If the given `filter` returns `false` for an event, the event is ignored and not\n     * passed to the editor.\n     */\n    handleKeyEventsFrom(elem, filter = () => true) {\n        listenForKeyboardEventsFrom(elem, {\n            filter,\n            handleKeyDown: (htmlEvent) => {\n                this.handleHTMLKeyDownEvent(htmlEvent);\n            },\n            handleKeyUp: (htmlEvent) => {\n                this.handleHTMLKeyUpEvent(htmlEvent);\n            },\n            getHandlesKeyEventsFrom: (element) => {\n                return this.eventListenerTargets.includes(element);\n            },\n        });\n        // Allow drop.\n        elem.ondragover = (evt) => {\n            evt.preventDefault();\n        };\n        elem.ondrop = (evt) => {\n            this.handleDrop(evt);\n        };\n        this.eventListenerTargets.push(elem);\n    }\n    /**\n     * Attempts to prevent **user-triggered** events from modifying\n     * the content of the image.\n     */\n    setReadOnly(readOnly) {\n        if (readOnly !== this.readOnly.get()) {\n            this.readOnly.set(readOnly);\n            this.notifier.dispatch(EditorEventType.ReadOnlyModeToggled, {\n                kind: EditorEventType.ReadOnlyModeToggled,\n                editorIsReadOnly: readOnly,\n            });\n        }\n    }\n    // @internal\n    isReadOnlyReactiveValue() {\n        return this.readOnly;\n    }\n    isReadOnly() {\n        return this.readOnly;\n    }\n    /**\n     * `apply` a command. `command` will be announced for accessibility.\n     *\n     * **Example**:\n     * [[include:doc-pages/inline-examples/adding-a-stroke.md]]\n     */\n    dispatch(command, addToHistory = true) {\n        const dispatchResult = this.dispatchNoAnnounce(command, addToHistory);\n        const commandDescription = command.description(this, this.localization);\n        this.announceForAccessibility(commandDescription);\n        return dispatchResult;\n    }\n    /**\n     * Dispatches a command without announcing it. By default, does not add to history.\n     * Use this to show finalized commands that don't need to have `announceForAccessibility`\n     * called.\n     *\n     * If `addToHistory` is `false`, this is equivalent to `command.apply(editor)`.\n     *\n     * @example\n     * ```\n     * const addToHistory = false;\n     * editor.dispatchNoAnnounce(editor.viewport.zoomTo(someRectangle), addToHistory);\n     * ```\n     */\n    dispatchNoAnnounce(command, addToHistory = false) {\n        const result = command.apply(this);\n        if (addToHistory) {\n            const apply = false; // Don't double-apply\n            this.history.push(command, apply);\n        }\n        return result;\n    }\n    /**\n     * Apply a large transformation in chunks.\n     * If `apply` is `false`, the commands are unapplied.\n     * Triggers a re-render after each `updateChunkSize`-sized group of commands\n     * has been applied.\n     */\n    async asyncApplyOrUnapplyCommands(commands, apply, updateChunkSize) {\n        console.assert(updateChunkSize > 0);\n        this.display.setDraftMode(true);\n        for (let i = 0; i < commands.length; i += updateChunkSize) {\n            this.showLoadingWarning(i / commands.length);\n            for (let j = i; j < commands.length && j < i + updateChunkSize; j++) {\n                const cmd = commands[j];\n                if (apply) {\n                    cmd.apply(this);\n                }\n                else {\n                    cmd.unapply(this);\n                }\n            }\n            // Re-render to show progress, but only if we're not done.\n            if (i + updateChunkSize < commands.length) {\n                await new Promise((resolve) => {\n                    this.rerender();\n                    requestAnimationFrame(resolve);\n                });\n            }\n        }\n        this.display.setDraftMode(false);\n        this.hideLoadingWarning();\n    }\n    /** @see {@link asyncApplyOrUnapplyCommands } */\n    asyncApplyCommands(commands, chunkSize) {\n        return this.asyncApplyOrUnapplyCommands(commands, true, chunkSize);\n    }\n    /**\n     * @see {@link asyncApplyOrUnapplyCommands}\n     *\n     * If `unapplyInReverseOrder`, commands are reversed before unapplying.\n     */\n    asyncUnapplyCommands(commands, chunkSize, unapplyInReverseOrder = false) {\n        if (unapplyInReverseOrder) {\n            commands = [...commands]; // copy\n            commands.reverse();\n        }\n        return this.asyncApplyOrUnapplyCommands(commands, false, chunkSize);\n    }\n    /**\n     * Schedule a re-render for some time in the near future. Does not schedule an additional\n     * re-render if a re-render is already queued.\n     *\n     * @returns a promise that resolves when re-rendering has completed.\n     */\n    queueRerender() {\n        if (!this.rerenderQueued) {\n            this.rerenderQueued = true;\n            requestAnimationFrame(() => {\n                // If .rerender was called manually, we might not need to\n                // re-render.\n                if (this.rerenderQueued) {\n                    this.rerender();\n                    this.rerenderQueued = false;\n                }\n            });\n        }\n        return new Promise((resolve) => {\n            this.nextRerenderListeners.push(() => resolve());\n        });\n    }\n    // @internal\n    isRerenderQueued() {\n        return this.rerenderQueued;\n    }\n    /**\n     * Re-renders the entire image.\n     *\n     * @see {@link Editor.queueRerender}\n     */\n    rerender(showImageBounds = true) {\n        this.display.startRerender();\n        // Don't render if the display has zero size.\n        if (this.display.width === 0 || this.display.height === 0) {\n            return;\n        }\n        const renderer = this.display.getDryInkRenderer();\n        this.image.renderWithCache(renderer, this.display.getCache(), this.viewport);\n        // Draw a rectangle around the region that will be visible on save\n        if (showImageBounds && !this.image.getAutoresizeEnabled()) {\n            const exportRectFill = { fill: Color4.fromHex('#44444455') };\n            const exportRectStrokeWidth = 5 * this.viewport.getSizeOfPixelOnCanvas();\n            renderer.drawRect(this.getImportExportRect(), exportRectStrokeWidth, exportRectFill);\n        }\n        this.rerenderQueued = false;\n        this.nextRerenderListeners.forEach((listener) => listener());\n        this.nextRerenderListeners = [];\n    }\n    /**\n     * Draws the given path onto the wet ink renderer. The given path will\n     * be displayed on top of the main image.\n     *\n     * @see {@link Display.getWetInkRenderer} {@link Display.flatten}\n     */\n    drawWetInk(...path) {\n        for (const part of path) {\n            this.display.getWetInkRenderer().drawPath(part);\n        }\n    }\n    /**\n     * Clears the wet ink display.\n     *\n     * The wet ink display can be used by the currently active tool to display a preview\n     * of an in-progress action.\n     *\n     * @see {@link Display.getWetInkRenderer}\n     */\n    clearWetInk() {\n        this.display.getWetInkRenderer().clear();\n    }\n    /**\n     * Focuses the region used for text input/key commands.\n     */\n    focus() {\n        this.renderingRegion.focus();\n    }\n    /**\n     * Creates an element that will be positioned on top of the dry/wet ink\n     * renderers.\n     *\n     * So as not to change the position of other overlays, `overlay` should either\n     * be styled to have 0 height or have `position: absolute`.\n     *\n     * This is useful for displaying content on top of the rendered content\n     * (e.g. a selection box).\n     */\n    createHTMLOverlay(overlay) {\n        // TODO(v2): Fix conflict with toolbars that have been added to the editor.\n        overlay.classList.add('overlay', 'js-draw-editor-overlay');\n        this.container.appendChild(overlay);\n        return {\n            remove: () => overlay.remove(),\n        };\n    }\n    /**\n     * Anchors the given `element` to the canvas with a given position/transformation in canvas space.\n     */\n    anchorElementToCanvas(element, canvasTransform) {\n        if (canvasTransform instanceof Mat33) {\n            canvasTransform = ReactiveValue.fromImmutable(canvasTransform);\n        }\n        // The element hierarchy looks like this:\n        //   overlay > contentWrapper > content\n        //\n        // Both contentWrapper and overlay are present to:\n        // 1. overlay: Positions the content at the top left of the viewport. The overlay\n        //    has `height: 0` to allow other overlays to also be aligned with the viewport's\n        //    top left.\n        // 2. contentWrapper: Has the same width/height as the editor's visible region and\n        //    has `overflow: hidden`. This prevents the anchored element from being visible\n        //    when not in the visible region of the canvas.\n        const overlay = document.createElement('div');\n        overlay.classList.add('anchored-element-overlay');\n        const contentWrapper = document.createElement('div');\n        contentWrapper.classList.add('content-wrapper');\n        element.classList.add('content');\n        // Updates CSS variables that specify the position/rotation/scale of the content.\n        const updateElementPositioning = () => {\n            const transform = canvasTransform.get();\n            const canvasRotation = transform.transformVec3(Vec2.unitX).angle();\n            const screenRotation = canvasRotation + this.viewport.getRotationAngle();\n            const screenTransform = this.viewport.canvasToScreenTransform.rightMul(canvasTransform.get());\n            overlay.style.setProperty('--full-transform', screenTransform.toCSSMatrix());\n            const translation = screenTransform.transformVec2(Vec2.zero);\n            overlay.style.setProperty('--position-x', `${translation.x}px`);\n            overlay.style.setProperty('--position-y', `${translation.y}px`);\n            overlay.style.setProperty('--rotation', `${(screenRotation * 180) / Math.PI}deg`);\n            overlay.style.setProperty('--scale', `${screenTransform.getScaleFactor()}`);\n        };\n        updateElementPositioning();\n        // The anchored element needs to be updated both when the user moves the canvas\n        // and when the anchored element's transform changes.\n        const updateListener = canvasTransform.onUpdate(updateElementPositioning);\n        const viewportListener = this.notifier.on(EditorEventType.ViewportChanged, updateElementPositioning);\n        contentWrapper.appendChild(element);\n        overlay.appendChild(contentWrapper);\n        overlay.classList.add('overlay', 'js-draw-editor-overlay');\n        this.renderingRegion.insertAdjacentElement('afterend', overlay);\n        return {\n            remove: () => {\n                overlay.remove();\n                updateListener.remove();\n                viewportListener.remove();\n            },\n        };\n    }\n    /**\n     * Creates a CSS stylesheet with `content` and applies it to the document\n     * (and thus, to this editor).\n     */\n    addStyleSheet(content) {\n        const styleSheet = document.createElement('style');\n        styleSheet.innerText = content;\n        this.container.appendChild(styleSheet);\n        return styleSheet;\n    }\n    /**\n     * Dispatch a keyboard event to the currently selected tool.\n     * Intended for unit testing.\n     *\n     * If `shiftKey` is undefined, it is guessed from `key`.\n     *\n     * At present, the **key code** dispatched is guessed from the given key and,\n     * while this works for ASCII alphanumeric characters, this does not work for\n     * most non-alphanumeric keys.\n     *\n     * Because guessing the key code from `key` is problematic, **only use this for testing**.\n     */\n    sendKeyboardEvent(eventType, key, ctrlKey = false, altKey = false, shiftKey = undefined) {\n        shiftKey ??= key.toUpperCase() === key && key.toLowerCase() !== key;\n        this.toolController.dispatchInputEvent({\n            kind: eventType,\n            key,\n            code: guessKeyCodeFromKey(key),\n            ctrlKey,\n            altKey,\n            shiftKey,\n        });\n    }\n    /**\n     * Dispatch a pen event to the currently selected tool.\n     * Intended primarially for unit tests.\n     *\n     * @deprecated\n     * @see {@link sendPenEvent} {@link sendTouchEvent}\n     */\n    sendPenEvent(eventType, point, \n    // @deprecated\n    allPointers) {\n        sendPenEvent(this, eventType, point, allPointers);\n    }\n    /**\n     * Adds all components in `components` such that they are in the center of the screen.\n     * This is a convenience method that creates **and applies** a single command.\n     *\n     * If `selectComponents` is true (the default), the components are selected.\n     *\n     * `actionDescription`, if given, should be a screenreader-friendly description of the\n     * reason components were added (e.g. \"pasted\").\n     */\n    async addAndCenterComponents(components, selectComponents = true, actionDescription) {\n        let bbox = null;\n        for (const component of components) {\n            if (bbox) {\n                bbox = bbox.union(component.getBBox());\n            }\n            else {\n                bbox = component.getBBox();\n            }\n        }\n        if (!bbox) {\n            return;\n        }\n        // Find a transform that scales/moves bbox onto the screen.\n        const visibleRect = this.viewport.visibleRect;\n        const scaleRatioX = visibleRect.width / bbox.width;\n        const scaleRatioY = visibleRect.height / bbox.height;\n        let scaleRatio = scaleRatioX;\n        if (bbox.width * scaleRatio > visibleRect.width ||\n            bbox.height * scaleRatio > visibleRect.height) {\n            scaleRatio = scaleRatioY;\n        }\n        scaleRatio *= 2 / 3;\n        scaleRatio = Viewport.roundScaleRatio(scaleRatio);\n        const transfm = Mat33.translation(visibleRect.center.minus(bbox.center)).rightMul(Mat33.scaling2D(scaleRatio, bbox.center));\n        const commands = [];\n        for (const component of components) {\n            // To allow deserialization, we need to add first, then transform.\n            commands.push(EditorImage.addComponent(component));\n            commands.push(component.transformBy(transfm));\n        }\n        const applyChunkSize = 100;\n        await this.dispatch(uniteCommands(commands, { applyChunkSize, description: actionDescription }), true);\n        if (selectComponents) {\n            for (const selectionTool of this.toolController.getMatchingTools(SelectionTool)) {\n                selectionTool.setEnabled(true);\n                selectionTool.setSelection(components);\n            }\n        }\n    }\n    /**\n     * Get a data URL (e.g. as produced by `HTMLCanvasElement::toDataURL`).\n     * If `format` is not `image/png`, a PNG image URL may still be returned (as in the\n     * case of `HTMLCanvasElement::toDataURL`).\n     *\n     * The export resolution is the same as the size of the drawing canvas, unless `outputSize`\n     * is given.\n     *\n     * **Example**:\n     * [[include:doc-pages/inline-examples/adding-an-image-and-data-urls.md]]\n     */\n    toDataURL(format = 'image/png', outputSize) {\n        const { element: canvas, renderer } = CanvasRenderer.fromViewport(this.image.getImportExportViewport(), { canvasSize: outputSize });\n        this.image.renderAll(renderer);\n        const dataURL = canvas.toDataURL(format);\n        return dataURL;\n    }\n    /**\n     * Converts the editor's content into an SVG image.\n     *\n     * If the output SVG has width or height less than `options.minDimension`, its size\n     * will be increased.\n     *\n     * @see\n     * {@link SVGRenderer}\n     */\n    toSVG(options) {\n        return editorImageToSVGSync(this.image, options ?? {});\n    }\n    /**\n     * Converts the editor's content into an SVG image in an asynchronous,\n     * but **potentially lossy** way.\n     *\n     * **Warning**: If the image is being edited during an async rendering, edited components\n     * may not be rendered.\n     *\n     * Like {@link toSVG}, but can be configured to briefly pause after processing every\n     * `pauseAfterCount` items. This can prevent the editor from becoming unresponsive\n     * when saving very large images.\n     */\n    async toSVGAsync(options = {}) {\n        const pauseAfterCount = options.pauseAfterCount ?? 100;\n        return await editorImageToSVGAsync(this.image, async (_component, processedCount, totalComponents) => {\n            if (options.onProgress) {\n                const shouldContinue = await options.onProgress(processedCount, totalComponents);\n                if (shouldContinue === false) {\n                    return false;\n                }\n            }\n            if (processedCount % pauseAfterCount === 0) {\n                await untilNextAnimationFrame();\n            }\n            return true;\n        }, {\n            minDimension: options.minDimension,\n        });\n    }\n    /**\n     * Load editor data from an `ImageLoader` (e.g. an {@link SVGLoader}).\n     *\n     * @see loadFromSVG\n     */\n    async loadFrom(loader) {\n        this.showLoadingWarning(0);\n        this.display.setDraftMode(true);\n        const originalBackgrounds = this.image.getBackgroundComponents();\n        const eraseBackgroundCommand = new Erase(originalBackgrounds);\n        await loader.start(async (component) => {\n            await this.dispatchNoAnnounce(EditorImage.addComponent(component));\n        }, (countProcessed, totalToProcess) => {\n            if (countProcessed % 500 === 0) {\n                this.showLoadingWarning(countProcessed / totalToProcess);\n                this.rerender();\n                return untilNextAnimationFrame();\n            }\n            return null;\n        }, (importExportRect, options) => {\n            this.dispatchNoAnnounce(this.setImportExportRect(importExportRect), false);\n            this.dispatchNoAnnounce(this.viewport.zoomTo(importExportRect), false);\n            if (options) {\n                this.dispatchNoAnnounce(this.image.setAutoresizeEnabled(options.autoresize), false);\n            }\n        });\n        // Ensure that we don't have multiple overlapping BackgroundComponents. Remove\n        // old BackgroundComponents.\n        // Overlapping BackgroundComponents may cause changing the background color to\n        // not work properly.\n        if (this.image.getBackgroundComponents().length !== originalBackgrounds.length) {\n            await this.dispatchNoAnnounce(eraseBackgroundCommand);\n        }\n        this.hideLoadingWarning();\n        this.display.setDraftMode(false);\n        this.queueRerender();\n    }\n    getTopmostBackgroundComponent() {\n        let background = null;\n        // Find a background component, if one exists.\n        // Use the last (topmost) background component if there are multiple.\n        for (const component of this.image.getBackgroundComponents()) {\n            if (component instanceof BackgroundComponent) {\n                background = component;\n            }\n        }\n        return background;\n    }\n    /**\n     * This is a convenience method for adding or updating the {@link BackgroundComponent}\n     * and {@link EditorImage.setAutoresizeEnabled} for the current image.\n     *\n     * If there are multiple {@link BackgroundComponent}s in the image, this only modifies\n     * the topmost such element.\n     *\n     * **Example**:\n     * ```ts,runnable\n     * import { Editor, Color4, BackgroundComponentBackgroundType } from 'js-draw';\n     * const editor = new Editor(document.body);\n     * editor.dispatch(editor.setBackgroundStyle({\n     *     color: Color4.orange,\n     *     type: BackgroundComponentBackgroundType.Grid,\n     *     autoresize: true,\n     * }));\n     * ```\n     *\n     * To change the background size, see {@link EditorImage.setImportExportRect}.\n     */\n    setBackgroundStyle(style) {\n        const originalBackground = this.getTopmostBackgroundComponent();\n        const commands = [];\n        if (originalBackground) {\n            commands.push(new Erase([originalBackground]));\n        }\n        const originalType = originalBackground?.getBackgroundType?.() ?? BackgroundType.None;\n        const originalColor = originalBackground?.getStyle?.().color ?? Color4.transparent;\n        const originalFillsScreen = this.image.getAutoresizeEnabled();\n        const defaultType = style.color && originalType === BackgroundType.None\n            ? BackgroundType.SolidColor\n            : originalType;\n        const backgroundType = style.type ?? defaultType;\n        const backgroundColor = style.color ?? originalColor;\n        const fillsScreen = style.autoresize ?? originalFillsScreen;\n        if (backgroundType !== BackgroundType.None) {\n            const newBackground = new BackgroundComponent(backgroundType, backgroundColor);\n            commands.push(EditorImage.addComponent(newBackground));\n        }\n        if (fillsScreen !== originalFillsScreen) {\n            commands.push(this.image.setAutoresizeEnabled(fillsScreen));\n            // Avoid 0x0 backgrounds\n            if (!fillsScreen && this.image.getImportExportRect().maxDimension === 0) {\n                commands.push(this.image.setImportExportRect(this.image.getImportExportRect().resizedTo(Vec2.of(500, 500))));\n            }\n        }\n        return uniteCommands(commands);\n    }\n    /**\n     * Set the background color of the image.\n     *\n     * This is a convenience method for adding or updating the {@link BackgroundComponent}\n     * for the current image.\n     *\n     * @see {@link setBackgroundStyle}\n     */\n    setBackgroundColor(color) {\n        let background = this.getTopmostBackgroundComponent();\n        if (!background) {\n            const backgroundType = color.eq(Color4.transparent)\n                ? BackgroundType.None\n                : BackgroundType.SolidColor;\n            background = new BackgroundComponent(backgroundType, color);\n            return this.image.addComponent(background);\n        }\n        else {\n            return background.updateStyle({ color });\n        }\n    }\n    /**\n     * @returns the average of the colors of all background components. Use this to get the current background\n     * color.\n     */\n    estimateBackgroundColor() {\n        const backgroundColors = [];\n        for (const component of this.image.getBackgroundComponents()) {\n            if (component instanceof BackgroundComponent) {\n                backgroundColors.push(component.getStyle().color ?? Color4.transparent);\n            }\n        }\n        return Color4.average(backgroundColors);\n    }\n    // Returns the size of the visible region of the output SVG\n    getImportExportRect() {\n        return this.image.getImportExportViewport().visibleRect;\n    }\n    // Resize the output SVG to match `imageRect`.\n    setImportExportRect(imageRect) {\n        return this.image.setImportExportRect(imageRect);\n    }\n    /**\n     * Alias for `loadFrom(SVGLoader.fromString)`.\n     *\n     * @example\n     * ```ts,runnable\n     * import {Editor} from 'js-draw';\n     * const editor = new Editor(document.body);\n     *\n     * ---visible---\n     * await editor.loadFromSVG(`\n     *   <svg viewBox=\"5 23 52 30\" width=\"52\" height=\"16\" version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\">\n     *     <text style=\"\n     *       transform: matrix(0.181846, 0.1, 0, 0.181846, 11.4, 33.2);\n     *       font-family: serif;\n     *       font-size: 32px;\n     *       fill: rgb(100, 140, 61);\n     *     \">An SVG image!</text>\n     *   </svg>\n     * `);\n     * ```\n     */\n    async loadFromSVG(svgData, sanitize = false) {\n        const loader = SVGLoader.fromString(svgData, {\n            sanitize,\n            plugins: this.getCurrentSettings().svg?.loaderPlugins,\n        });\n        await this.loadFrom(loader);\n    }\n    /**\n     * Shows an information dialog with legal notices.\n     */\n    showAboutDialog() {\n        const iconLicenseText = this.icons.licenseInfo();\n        const notices = [];\n        if (this.settings.appInfo) {\n            const descriptionLines = [];\n            if (this.settings.appInfo.version) {\n                descriptionLines.push(`v${this.settings.appInfo.version}`, '');\n            }\n            if (this.settings.appInfo.description) {\n                descriptionLines.push(this.settings.appInfo.description + '\\n');\n            }\n            else {\n                descriptionLines.push(`js-draw v${version.number}`);\n            }\n            notices.push({\n                heading: `${this.settings.appInfo.name}`,\n                text: descriptionLines.join('\\n'),\n            });\n        }\n        else {\n            notices.push({\n                heading: 'js-draw',\n                text: `v${version.number}`,\n            });\n        }\n        const screenSize = this.viewport.getScreenRectSize();\n        notices.push({\n            heading: this.localization.developerInformation,\n            text: [\n                'Image debug information (from when this dialog was opened):',\n                `    ${this.viewport.getScaleFactor()}x zoom, ${(180 / Math.PI) * this.viewport.getRotationAngle()}° rotation`,\n                `    ${this.image.estimateNumElements()} components`,\n                `    auto-resize: ${this.image.getAutoresizeEnabled() ? 'enabled' : 'disabled'}`,\n                `    image size: ${this.getImportExportRect().w}x${this.getImportExportRect().h}`,\n                `    screen size: ${screenSize.x}x${screenSize.y}`,\n                `    device pixel ratio: ${this.display.getDevicePixelRatio()}`,\n                '    cache:',\n                `        ${this.display\n                    .getCache()\n                    .getDebugInfo()\n                    // Indent\n                    .replace(/([\\n])/g, '\\n        ')}`,\n            ].join('\\n'),\n            minimized: true,\n        });\n        notices.push({\n            heading: this.localization.softwareLibraries,\n            text: [\n                `This image editor is powered by js-draw v${version.number}.`,\n                '',\n                'At runtime, js-draw uses',\n                ' - The Coloris color picker: https://github.com/mdbassit/Coloris',\n                ' - The bezier.js Bézier curve library: https://github.com/Pomax/bezierjs',\n                '',\n                'Both are licensed under the MIT license:',\n                '',\n                '',\n                '== Coloris ==',\n                mitLicenseAttribution('2021 Mohammed Bassit'),\n                '',\n                '',\n                '== Bezier.js ==',\n                mitLicenseAttribution('2023 Mike \"Pomax\" Kamermans'),\n                '',\n                '',\n                '== js-draw ==',\n                mitLicenseAttribution('2023-2025 Henry Heino'),\n                '',\n            ].join('\\n'),\n            minimized: true,\n        });\n        if (iconLicenseText) {\n            notices.push({\n                heading: 'Icon Pack',\n                text: iconLicenseText,\n                minimized: true,\n            });\n        }\n        notices.push(...this.settings.notices);\n        this.closeAboutDialog?.();\n        this.closeAboutDialog = makeAboutDialog(this, notices).close;\n    }\n    /**\n     * Removes and **destroys** the editor. The editor cannot be added to a parent\n     * again after calling this method.\n     */\n    remove() {\n        this.container.remove();\n        // TODO: Is additional cleanup necessary here?\n        this.toolController.onEditorDestroyed();\n    }\n}\nexport default Editor;\n", "import  Command  from './Command.mjs';\nimport  SerializableCommand  from './SerializableCommand.mjs';\n// Returns a command that does the opposite of the given command --- `result.apply()` calls\n// `command.unapply()` and `result.unapply()` calls `command.apply()`.\nconst invertCommand = (command) => {\n    if (command instanceof SerializableCommand) {\n        // SerializableCommand that does the inverse of [command]\n        return new (class extends SerializableCommand {\n            constructor() {\n                super(...arguments);\n                // For debugging\n                this._command = command;\n            }\n            serializeToJSON() {\n                return command.serialize();\n            }\n            apply(editor) {\n                command.unapply(editor);\n            }\n            unapply(editor) {\n                command.apply(editor);\n            }\n            onDrop(editor) {\n                command.onDrop(editor);\n            }\n            description(editor, localizationTable) {\n                return localizationTable.inverseOf(command.description(editor, localizationTable));\n            }\n        })('inverse');\n    }\n    else {\n        // Command that does the inverse of [command].\n        const result = new (class extends Command {\n            apply(editor) {\n                command.unapply(editor);\n            }\n            unapply(editor) {\n                command.apply(editor);\n            }\n            onDrop(editor) {\n                command.onDrop(editor);\n            }\n            description(editor, localizationTable) {\n                return localizationTable.inverseOf(command.description(editor, localizationTable));\n            }\n        })();\n        // We know that T does not extend SerializableCommand, and thus returning a Command\n        // is appropriate.\n        return result;\n    }\n};\nSerializableCommand.register('inverse', (data, editor) => {\n    return invertCommand(SerializableCommand.deserialize(data, editor));\n});\nexport default invertCommand;\n", "import  BaseWidget  from './BaseWidget.mjs';\nexport default class OverflowWidget extends BaseWidget {\n    constructor(editor, localizationTable) {\n        super(editor, 'overflow-widget', localizationTable);\n        this.overflowChildren = [];\n        this.container.classList.add('toolbar-overflow-widget');\n        // Make the dropdown openable\n        this.container.classList.add('dropdownShowable');\n        this.overflowContainer ??= document.createElement('div');\n    }\n    shouldAutoDisableInReadOnlyEditor() {\n        return false;\n    }\n    getTitle() {\n        return this.localizationTable.toggleOverflow;\n    }\n    createIcon() {\n        return this.editor.icons.makeOverflowIcon();\n    }\n    handleClick() {\n        this.setDropdownVisible(!this.isDropdownVisible());\n    }\n    fillDropdown(dropdown) {\n        this.overflowContainer ??= document.createElement('div');\n        if (this.overflowContainer.parentElement) {\n            this.overflowContainer.remove();\n        }\n        this.overflowContainer.classList.add('toolbar-overflow-widget-overflow-list');\n        dropdown.appendChild(this.overflowContainer);\n        return true;\n    }\n    /**\n     * Removes all `BaseWidget`s from this and returns them.\n     */\n    clearChildren() {\n        this.overflowContainer.replaceChildren();\n        this.container.classList.remove('horizontal');\n        const overflowChildren = this.overflowChildren;\n        this.overflowChildren = [];\n        return overflowChildren;\n    }\n    getChildWidgets() {\n        return [...this.overflowChildren];\n    }\n    hasAsChild(widget) {\n        for (const otherWidget of this.overflowChildren) {\n            if (widget === otherWidget) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Adds `widget` to this.\n     * `widget`'s previous parent is still responsible\n     * for serializing/deserializing its state.\n     */\n    addToOverflow(widget) {\n        this.overflowChildren.push(widget);\n        widget.addTo(this.overflowContainer);\n        widget.setIsToplevel(false);\n        // Switch to a horizontal layout if enough children\n        if (this.overflowChildren.length > 2) {\n            this.container.classList.add('horizontal');\n        }\n    }\n    // This always returns false.\n    // Don't try to move the overflow menu to itself.\n    canBeInOverflowMenu() {\n        return false;\n    }\n}\n", "import  OverflowWidget  from './widgets/OverflowWidget.mjs';\nimport  AbstractToolbar  from './AbstractToolbar.mjs';\nimport  { toolbarCSSPrefix }  from './constants.mjs';\n/**\n * @example\n *\n * ```ts,runnable\n * import { makeDropdownToolbar, Editor } from 'js-draw';\n *\n * const editor = new Editor(document.body);\n * const toolbar = makeDropdownToolbar(editor);\n * toolbar.addDefaults();\n *\n * toolbar.addExitButton(editor => {\n *   // TODO\n * });\n *\n * toolbar.addSaveButton(editor => {\n *   // TODO\n * });\n * ```\n *\n * Returns a subclass of {@link AbstractToolbar}.\n *\n * @see\n * - {@link makeEdgeToolbar}\n * - {@link AbstractToolbar.addSaveButton}\n * - {@link AbstractToolbar.addExitButton}\n */\nexport const makeDropdownToolbar = (editor) => {\n    return new DropdownToolbar(editor, editor.getRootElement(), editor.localization);\n};\nexport default class DropdownToolbar extends AbstractToolbar {\n    /** @internal */\n    constructor(editor, parent, localizationTable) {\n        super(editor, localizationTable);\n        // Flex-order of the next widget to be added.\n        this.widgetOrderCounter = 0;\n        // Widget to toggle overflow menu.\n        this.overflowWidget = null;\n        this.reLayoutQueued = false;\n        this.container = document.createElement('div');\n        this.container.classList.add(`${toolbarCSSPrefix}root`);\n        this.container.classList.add(`${toolbarCSSPrefix}element`);\n        this.container.classList.add(`${toolbarCSSPrefix}dropdown-toolbar`);\n        this.container.setAttribute('role', 'toolbar');\n        parent.appendChild(this.container);\n        if ('ResizeObserver' in window) {\n            this.resizeObserver = new ResizeObserver((_entries) => {\n                this.reLayout();\n            });\n            this.resizeObserver.observe(this.container);\n        }\n        else {\n            console.warn('ResizeObserver not supported. Toolbar will not resize.');\n        }\n    }\n    queueReLayout() {\n        if (!this.reLayoutQueued) {\n            this.reLayoutQueued = true;\n            requestAnimationFrame(() => this.reLayout());\n        }\n    }\n    reLayout() {\n        this.reLayoutQueued = false;\n        if (!this.overflowWidget) {\n            return;\n        }\n        const getTotalWidth = (widgetList) => {\n            let totalWidth = 0;\n            for (const widget of widgetList) {\n                if (!widget.isHidden()) {\n                    totalWidth += widget.getButtonWidth();\n                }\n            }\n            return totalWidth;\n        };\n        // Returns true if there is enough empty space to move the first child\n        // from the overflow menu to the main menu.\n        const canRemoveFirstChildFromOverflow = (freeSpaceInMainMenu) => {\n            const overflowChildren = this.overflowWidget?.getChildWidgets() ?? [];\n            if (overflowChildren.length === 0) {\n                return false;\n            }\n            return overflowChildren[0].getButtonWidth() <= freeSpaceInMainMenu;\n        };\n        const allWidgets = this.getAllWidgets();\n        let overflowWidgetsWidth = getTotalWidth(this.overflowWidget.getChildWidgets());\n        let shownWidgetWidth = getTotalWidth(allWidgets) - overflowWidgetsWidth;\n        let availableWidth = this.container.clientWidth * 0.87;\n        // If on a device that has enough vertical space, allow\n        // showing two rows of buttons.\n        // TODO: Fix magic numbers\n        if (window.innerHeight > availableWidth * 1.75) {\n            availableWidth *= 1.75;\n        }\n        let updatedChildren = false;\n        // If we can remove at least one child from the overflow menu,\n        if (canRemoveFirstChildFromOverflow(availableWidth - shownWidgetWidth)) {\n            // Move widgets to the main menu.\n            const overflowChildren = this.overflowWidget.clearChildren();\n            for (const child of overflowChildren) {\n                child.addTo(this.container);\n                child.setIsToplevel(true);\n                if (!child.isHidden()) {\n                    shownWidgetWidth += child.getButtonWidth();\n                }\n            }\n            overflowWidgetsWidth = 0;\n            updatedChildren = true;\n        }\n        if (shownWidgetWidth >= availableWidth) {\n            // Move widgets to the overflow menu.\n            // Start with the rightmost widget, move to the leftmost\n            for (let i = allWidgets.length - 1; i >= 0 && shownWidgetWidth >= availableWidth; i--) {\n                const child = allWidgets[i];\n                if (this.overflowWidget.hasAsChild(child)) {\n                    continue;\n                }\n                if (child.canBeInOverflowMenu()) {\n                    shownWidgetWidth -= child.getButtonWidth();\n                    this.overflowWidget.addToOverflow(child);\n                }\n            }\n            updatedChildren = true;\n        }\n        // Hide/show the overflow widget.\n        this.overflowWidget.setHidden(this.overflowWidget.getChildWidgets().length === 0);\n        if (updatedChildren) {\n            this.setupColorPickers();\n        }\n    }\n    addWidgetInternal(widget) {\n        const container = widget.addTo(this.container);\n        // Ensure that the widget gets displayed in the correct\n        // place in the toolbar, even if it's removed and re-added.\n        container.style.order = `${this.widgetOrderCounter++}`;\n        this.queueReLayout();\n    }\n    removeWidgetInternal(widget) {\n        widget.remove();\n        this.queueReLayout();\n    }\n    addSpacer(options = {}) {\n        const spacer = document.createElement('div');\n        spacer.classList.add(`${toolbarCSSPrefix}spacer`);\n        if (options.grow) {\n            spacer.style.flexGrow = `${options.grow}`;\n        }\n        if (options.minSize) {\n            spacer.style.minWidth = options.minSize;\n        }\n        if (options.maxSize) {\n            spacer.style.maxWidth = options.maxSize;\n        }\n        spacer.style.order = `${this.widgetOrderCounter++}`;\n        this.container.appendChild(spacer);\n    }\n    /**\n     * Adds a widget that toggles the overflow menu. Call `addOverflowWidget` to ensure\n     * that this widget is in the correct space (if shown).\n     *\n     * @example\n     * ```ts\n     * toolbar.addDefaultToolWidgets();\n     * toolbar.addOverflowWidget();\n     * toolbar.addDefaultActionButtons();\n     * ```\n     * shows the overflow widget between the default tool widgets and the default action buttons,\n     * if shown.\n     */\n    addOverflowWidget() {\n        this.overflowWidget = new OverflowWidget(this.editor, this.localizationTable);\n        this.addWidget(this.overflowWidget);\n    }\n    /**\n     * Adds both the default tool widgets and action buttons. Equivalent to\n     * ```ts\n     * toolbar.addDefaultToolWidgets();\n     * toolbar.addOverflowWidget();\n     * toolbar.addDefaultActionButtons();\n     * ```\n     */\n    addDefaults() {\n        this.addDefaultToolWidgets();\n        this.addOverflowWidget();\n        this.addDefaultActionButtons();\n    }\n    onRemove() {\n        this.container.remove();\n        this.resizeObserver.disconnect();\n    }\n}\n", "import  Pointer, { PointerDevice }  from '../Pointer.mjs';\nimport  { InputEvtType }  from '../inputEvents.mjs';\nimport  getUniquePointerId  from './getUniquePointerId.mjs';\n/**\n * Dispatch a touch event to the currently selected tool. Intended for unit tests.\n *\n * @see {@link sendPenEvent}\n *\n * @example\n * **Simulating a horizontal swipe gesture:**\n * ```ts\n * sendTouchEvent(editor, InputEvtType.PointerDownEvt, Vec2.of(0, 0));\n * for (let i = 1; i <= 10; i++) {\n *   jest.advanceTimersByTime(10);\n *   sendTouchEvent(editor, InputEvtType.PointerMoveEvt, Vec2.of(i * 10, 0));\n * }\n * ```\n *\n * @example\n * **Simulating a pinch gesture.** This example assumes that you're using [Jest with timer mocks enabled](https://jestjs.io/docs/timer-mocks).\n * ```ts\n * let firstPointer = sendTouchEvent(editor, InputEvtType.PointerDownEvt, Vec2.of(0, 0));\n * let secondPointer = sendTouchEvent(editor, InputEvtType.PointerDownEvt, Vec2.of(100, 0), [ firstPointer ]);\n *\n * // Simulate a pinch\n * const maxIterations = 10;\n * for (let i = 0; i < maxIterations; i++) {\n *   // Use the unit testing framework's tool for increasing the current time\n *   // returned by (new Date()).getTime(), etc.\n *   jest.advanceTimersByTime(100);\n *\n *   const point1 = Vec2.of(-i * 5, 0);\n *   const point2 = Vec2.of(i * 5 + 100, 0);\n *\n *   firstPointer = sendTouchEvent(editor, InputEvtType.PointerMoveEvt, point1, [ secondPointer ]);\n *   secondPointer = sendTouchEvent(editor, InputEvtType.PointerMoveEvt, point2, [ firstPointer ]);\n * }\n * ```\n */\nconst sendTouchEvent = (editor, eventType, screenPos, allOtherPointers) => {\n    const canvasPos = editor.viewport.screenToCanvas(screenPos);\n    // Get a unique ID for the main pointer\n    // (try to use id=0, but don't use it if it's already in use).\n    const ptrId = getUniquePointerId(allOtherPointers ?? []);\n    const mainPointer = Pointer.ofCanvasPoint(canvasPos, eventType !== InputEvtType.PointerUpEvt, editor.viewport, ptrId, PointerDevice.Touch);\n    editor.toolController.dispatchInputEvent({\n        kind: eventType,\n        allPointers: [...(allOtherPointers ?? []), mainPointer],\n        current: mainPointer,\n    });\n    return mainPointer;\n};\nexport default sendTouchEvent;\n", "import { Color4, Vec3 } from '@js-draw/math';\n/**\n * Adjusts the current editor theme such that colors have appropriate contrast.\n *\n * As this method overrides CSS variables using the `.style` property,\n * **assumes** all original theme variables are set using CSS and not the `.style` property.\n *\n * If the editor changes theme in response to the system theme, this method should be\n * called whenever the system theme changes (e.g. by using [the `matchMedia`](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia)\n * method).\n *\n * @example\n * ```ts,runnable\n * import { Editor, adjustEditorThemeForContrast } from 'js-draw';\n *\n * const editor = new Editor(document.body);\n * editor.addToolbar();\n *\n * const css = `\n *   :root .imageEditorContainer {\n *     --background-color-1: #ffff77;\n *     --foreground-color-1: #fff;\n *     --background-color-2: #ffff99;\n *     --foreground-color-2: #ffff88;\n *     --background-color-3: #ddffff;\n *     --foreground-color-3: #eeffff;\n *     --selection-background-color: #9f7;\n *     --selection-foreground-color: #98f;\n *   }\n *\n *   @media screen and (prefers-color-scheme: dark) {\n *     :root .imageEditorContainer {\n *       --background-color-1: black;\n *     }\n *   }\n * `;\n * editor.addStyleSheet(css);\n *\n * adjustEditorThemeForContrast(editor);\n *\n * // Because adjustEditorThemeForContrast overrides the current theme, it should be called again\n * // to allow the editor to switch between light/dark themes.\n * window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {\n *   adjustEditorThemeForContrast(editor);\n * });\n *\n * window.matchMedia('print').addEventListener('change', () => {\n *   adjustEditorThemeForContrast(editor);\n * });\n * ```\n */\nconst adjustEditorThemeForContrast = (editor, options) => {\n    const editorElem = editor.getRootElement();\n    // Each set of entries in colorPairs should resolve to colors with sufficient\n    // contrast.\n    const colorPairs = [\n        ['--background-color-1', '--foreground-color-1', true, true],\n        ['--background-color-2', '--foreground-color-2', true, true],\n        ['--background-color-3', '--foreground-color-3', true, true],\n        ['--background-color-2', '--primary-action-foreground-color', false, true],\n        ['--selection-background-color', '--selection-foreground-color', false, true],\n    ];\n    if (!options?.dontClearOverrides) {\n        // Clear any overrides\n        for (const [backgroundVar, foregroundVar] of colorPairs) {\n            editorElem.style.setProperty(backgroundVar, null);\n            editorElem.style.setProperty(foregroundVar, null);\n        }\n    }\n    const styles = getComputedStyle(editorElem);\n    const updatedColors = Object.create(null);\n    const adjustVariablesForContrast = (var1, var2, minContrast, \n    // true if the variable can be updated\n    updateVar1, updateVar2) => {\n        // Fetch from updatedColors if available -- styles isn't updated dynamically.\n        let color1 = updatedColors[var1]\n            ? updatedColors[var1]\n            : Color4.fromString(styles.getPropertyValue(var1));\n        let color2 = updatedColors[var2]\n            ? updatedColors[var2]\n            : Color4.fromString(styles.getPropertyValue(var2));\n        // Ensure that color1 has the lesser luminance\n        if (color1.relativeLuminance() < color2.relativeLuminance()) {\n            const tmp = color1;\n            color1 = color2;\n            color2 = tmp;\n            const oldVar2 = var2;\n            var2 = var1;\n            var1 = oldVar2;\n            const oldUpdateVar1 = updateVar1;\n            updateVar1 = updateVar2;\n            updateVar2 = oldUpdateVar1;\n        }\n        let colorsUpdated = false;\n        let currentContrast = Color4.contrastRatio(color1, color2);\n        let iterations = 0;\n        // Step the brightness of color1 and color2 in different directions while necessary\n        while (currentContrast < minContrast && iterations < 8) {\n            const step = Vec3.of(0.1, 0.1, 0.1);\n            if (updateVar1) {\n                if (color2.eq(Color4.white) && !updateVar2) {\n                    color2 = Color4.black;\n                }\n                color1 = Color4.fromRGBVector(color1.rgb.plus(step));\n            }\n            if (updateVar2) {\n                if (color2.eq(Color4.black) && !updateVar1) {\n                    color2 = Color4.white;\n                }\n                color2 = Color4.fromRGBVector(color2.rgb.minus(step));\n            }\n            currentContrast = Color4.contrastRatio(color1, color2);\n            colorsUpdated = true;\n            iterations++;\n        }\n        // Update the CSS variables if necessary\n        if (colorsUpdated) {\n            editorElem.style.setProperty(var1, color1.toHexString());\n            editorElem.style.setProperty(var2, color2.toHexString());\n            updatedColors[var1] = color1;\n            updatedColors[var2] = color2;\n        }\n    };\n    // Also adjust the selection background\n    adjustVariablesForContrast('--selection-background-color', '--background-color-2', 1.29, true, false);\n    for (const [backgroundVar, foregroundVar, updateBackground, updateForeground] of colorPairs) {\n        const minContrast = 4.5;\n        adjustVariablesForContrast(backgroundVar, foregroundVar, minContrast, updateBackground, updateForeground);\n    }\n};\nexport default adjustEditorThemeForContrast;\n", "/**\n * The main entrypoint for the NPM package. Everything exported by this file\n * is available through the [`js-draw` package](https://www.npmjs.com/package/js-draw).\n *\n * ## Example\n *\n * [[include:doc-pages/inline-examples/main-js-draw-example.md]]\n *\n * @see\n * - {@link Editor}\n * - {@link Editor.loadFromSVG}\n * - {@link AbstractToolbar.addActionButton }\n * - {@link EditorSettings}\n *\n * @packageDocumentation\n */\nimport  Editor  from './Editor.mjs';\nexport  *  from './image/lib.mjs';\nexport  *  from './types.mjs';\nexport  *  from './inputEvents.mjs';\nexport  { default as getLocalizationTable, matchingLocalizationTable, }  from './localizations/getLocalizationTable.mjs';\nexport  *  from './localization.mjs';\nexport  { default as SVGLoader }  from './SVGLoader/SVGLoader.mjs';\nexport  { default as Viewport }  from './Viewport.mjs';\nexport * from '@js-draw/math';\nexport  *  from './components/lib.mjs';\nexport  *  from './commands/lib.mjs';\nexport  *  from './tools/lib.mjs';\nexport  *  from './toolbar/lib.mjs';\nexport  *  from './rendering/lib.mjs';\nexport  *  from './testing/lib.mjs';\nexport  *  from './shortcuts/lib.mjs';\nexport  { default as EventDispatcher }  from './EventDispatcher.mjs';\nexport  { default as Pointer, PointerDevice }  from './Pointer.mjs';\nexport  { default as UndoRedoHistory }  from './UndoRedoHistory.mjs';\nexport  *  from './util/lib.mjs';\n// @internal\nexport  { default as __js_draw__version }  from './version.mjs';\nimport  AbstractToolbar  from './toolbar/AbstractToolbar.mjs';\nexport { Editor, AbstractToolbar };\n/**\n * Using the HTMLToolbar alias is deprecated. Use\n * `AbstractToolbar` instead.\n * @deprecated\n */\nexport { AbstractToolbar as HTMLToolbar };\nexport default Editor;\n"],
  "mappings": "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",
  "names": ["Vec2", "Vec3", "i", "cos", "sin", "epsilon", "t", "t", "t", "t2", "min", "max", "a", "b", "c", "d", "v1", "q", "abs", "cos", "sin", "acos", "sqrt", "pi", "point", "t", "abs", "pi", "sqrt", "acos", "d", "ls", "le", "segments", "tlen", "alen", "cos", "sin", "t", "t", "epsilon", "PathCommandType", "_a", "current", "components", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "ComponentSizingMode", "componentKind", "__setFunctionName", "_a", "EditorImageEventType", "componentId", "localization", "_b", "child", "EditorEventType", "UndoEventType", "PointerDevice", "InputEvtType", "__classPrivateFieldSet", "__classPrivateFieldGet", "value", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "localization", "localization", "_a", "key", "shiftKey", "PanZoomMode", "_a", "_b", "_a", "_b", "_c", "_a", "path", "_a", "_b", "_c", "localization", "template", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "StabilizerType", "_a", "_a", "_a", "_b", "_a", "componentId", "EraserMode", "TextTransformMode", "transform", "_a", "BackgroundType", "_a", "_b", "localization", "localization", "_a", "_b", "SVGLoaderLoadMethod", "_a", "_b", "_c", "svgElem", "cleanUp", "defaultTextStyle", "_a", "style", "_b", "_c", "svgNameSpace", "HandleShape", "HandleAction", "SelectionMode", "ResizeMode", "TransformMode", "localization", "_a", "_a", "_b", "_c", "_a", "__classPrivateFieldGet", "__classPrivateFieldSet", "_a", "clipboardData", "_b", "localization", "components", "_a", "_b", "_c", "_a", "_b", "_a", "_a", "defaultTextStyle", "cssPrefix", "_a", "_b", "__classPrivateFieldGet", "__classPrivateFieldSet", "localization", "_a", "_b", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "_a", "debugMode", "RenderingMode", "_a", "ElementNamespace", "__classPrivateFieldGet", "_IconProvider_makeXIcon", "DropdownEventType", "_a", "_b", "localization", "addEventListener", "options", "_a", "__classPrivateFieldGet", "container", "_a", "navigation", "__classPrivateFieldSet", "__classPrivateFieldGet", "_a", "ToolbarWidgetTag", "idCounter", "_b", "_BaseWidget_addEditorListeners", "localization", "window", "document", "Math", "undefined", "Coloris", "t", "idCounter", "t", "min", "max", "idCounter", "labelText", "localization", "_a", "_b", "_a", "localization", "localization", "_a", "__classPrivateFieldSet", "__classPrivateFieldGet", "idCounter", "_a", "_a", "_b", "localization", "_a", "_b", "backgroundColorRow", "setBgColorInputValue", "helpDisplay", "localization", "localization", "__classPrivateFieldGet", "__classPrivateFieldSet", "_a", "_a", "makeAboutDialog", "_a", "_b", "_c", "_a", "_b", "_c", "eventName", "event", "updateChunkSize", "_a"]
}
